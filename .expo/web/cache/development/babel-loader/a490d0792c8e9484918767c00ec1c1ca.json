{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/bordi/projects/cestas-cooperflora-rn/src/screens/OrdersItemsQuantityScreen.js\";\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Input, ListItem } from 'react-native-elements';\nimport { Context as OrderContext } from \"../context/OrderContext\";\nimport Spinner from \"../components/Spinner\";\nimport Colors from \"../constants/Colors\";\n\nvar OrdersItemsQuantity = function OrdersItemsQuantity(props) {\n  var _useContext = useContext(OrderContext),\n      _useContext$state = _useContext.state,\n      orders = _useContext$state.orders,\n      loading = _useContext$state.loading;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      productsToQuantity = _useState2[0],\n      setProductsToQuantity = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      filteredProducts = _useState4[0],\n      setFilteredProducts = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      filterText = _useState6[0],\n      setFilterText = _useState6[1];\n\n  var mapProductsToQuantity = function mapProductsToQuantity() {\n    var productsToQuantityMap = new Map();\n    orders.forEach(function (order) {\n      if (order.baseProducts && order.baseProducts > 0) {\n        productsToQuantityMap.Cesta = productsToQuantityMap.Cesta + order.baseProducts || order.baseProducts;\n      }\n\n      order.extraProducts.forEach(function (product) {\n        if (product.productTitle && product.quantity && product.quantity > 0) {\n          productsToQuantityMap[\"\" + product.productTitle] = productsToQuantityMap[\"\" + product.productTitle] + product.quantity || product.quantity;\n        }\n      });\n    });\n    var productsArray = [];\n\n    for (var _i = 0, _Object$entries = Object.entries(productsToQuantityMap); _i < _Object$entries.length; _i++) {\n      var _ref = _Object$entries[_i];\n\n      var _ref2 = _slicedToArray(_ref, 2);\n\n      var key = _ref2[0];\n      var value = _ref2[1];\n      productsArray.push({\n        name: key,\n        quantity: value\n      });\n    }\n\n    setProductsToQuantity(productsArray);\n  };\n\n  useEffect(function () {\n    mapProductsToQuantity();\n  }, [orders]);\n\n  var renderSearchIcon = function renderSearchIcon() {\n    return !filterText.length ? {\n      type: 'ionicons',\n      name: 'search',\n      size: 25,\n      color: 'lightgrey'\n    } : {\n      type: 'material',\n      name: 'clear',\n      size: 25,\n      color: 'lightgrey',\n      onPress: function onPress() {\n        setFilterText('');\n        setFilteredProducts(null);\n      }\n    };\n  };\n\n  var searchProductsByFilter = function searchProductsByFilter() {\n    console.log('filtrando?');\n    setFilteredProducts(productsToQuantity.filter(function (product) {\n      return product.name.toLowerCase().includes(filterText.toLowerCase());\n    }));\n  };\n\n  var renderItem = function renderItem(_ref3) {\n    var item = _ref3.item;\n    return React.createElement(ListItem, {\n      containerStyle: styles.listItemContainer,\n      title: item.quantity + \" \" + item.name,\n      titleStyle: styles.listItemTitle,\n      bottomDivider: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.screen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, React.createElement(Input, {\n    containerStyle: styles.searchInput,\n    placeholder: \"Buscar produto\",\n    value: filterText,\n    onChangeText: setFilterText,\n    onEndEditing: searchProductsByFilter,\n    returnKeyType: \"done\",\n    autoCorrect: false,\n    rightIcon: renderSearchIcon(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }), !loading ? React.createElement(FlatList, {\n    data: filteredProducts && filteredProducts.length ? filteredProducts : productsToQuantity,\n    renderItem: renderItem,\n    keyExtractor: function keyExtractor(item) {\n      return item.name;\n    },\n    style: styles.productsList,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }) : React.createElement(Spinner, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    marginTop: 4,\n    backgroundColor: Colors.backGroundColor,\n    borderTopLeftRadius: 20,\n    borderTopRightRadius: 20,\n    shadowColor: 'black',\n    shadowOpacity: 0.26,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowRadius: 8,\n    elevation: 25\n  },\n  container: {\n    flex: 1,\n    marginHorizontal: 15,\n    marginVertical: 5\n  },\n  text: {\n    color: '#101010',\n    fontSize: 24,\n    fontWeight: 'bold'\n  },\n  searchInput: {\n    width: 300\n  },\n  productsList: {\n    marginTop: -10\n  },\n  listItemContainer: {\n    backgroundColor: 'transparent',\n    padding: 10,\n    minHeight: 60\n  },\n  listItemTitle: {\n    fontWeight: 'bold',\n    marginBottom: 5,\n    fontSize: 20\n  }\n});\nexport default OrdersItemsQuantity;","map":{"version":3,"sources":["/home/bordi/projects/cestas-cooperflora-rn/src/screens/OrdersItemsQuantityScreen.js"],"names":["React","useContext","useEffect","useState","Input","ListItem","Context","OrderContext","Spinner","Colors","OrdersItemsQuantity","props","state","orders","loading","productsToQuantity","setProductsToQuantity","filteredProducts","setFilteredProducts","filterText","setFilterText","mapProductsToQuantity","productsToQuantityMap","Map","forEach","order","baseProducts","Cesta","extraProducts","product","productTitle","quantity","productsArray","Object","entries","key","value","push","name","renderSearchIcon","length","type","size","color","onPress","searchProductsByFilter","console","log","filter","toLowerCase","includes","renderItem","item","styles","listItemContainer","listItemTitle","screen","container","searchInput","productsList","StyleSheet","create","flex","marginTop","backgroundColor","backGroundColor","borderTopLeftRadius","borderTopRightRadius","shadowColor","shadowOpacity","shadowOffset","width","height","shadowRadius","elevation","marginHorizontal","marginVertical","text","fontSize","fontWeight","padding","minHeight","marginBottom"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { FlatList, StyleSheet, View } from 'react-native';\nimport { Input, ListItem } from 'react-native-elements';\nimport { Context as OrderContext } from '../context/OrderContext';\nimport Spinner from '../components/Spinner';\nimport Colors from '../constants/Colors';\n\nconst OrdersItemsQuantity = (props) => {\n  const {\n    state: { orders, loading },\n  } = useContext(OrderContext);\n\n  // console.log(`nav: ${JSON.stringify(navigation)}`);\n  const [productsToQuantity, setProductsToQuantity] = useState(null);\n  const [filteredProducts, setFilteredProducts] = useState(null);\n  const [filterText, setFilterText] = useState('');\n\n  const mapProductsToQuantity = () => {\n    const productsToQuantityMap = new Map();\n    orders.forEach((order) => {\n      if (order.baseProducts && order.baseProducts > 0) {\n        productsToQuantityMap.Cesta =\n          productsToQuantityMap.Cesta + order.baseProducts ||\n          order.baseProducts;\n      }\n\n      order.extraProducts.forEach((product) => {\n        if (product.productTitle && product.quantity && product.quantity > 0) {\n          productsToQuantityMap[`${product.productTitle}`] =\n            productsToQuantityMap[`${product.productTitle}`] +\n              product.quantity || product.quantity;\n        }\n      });\n    });\n\n    const productsArray = [];\n    for (const [key, value] of Object.entries(productsToQuantityMap)) {\n      productsArray.push({ name: key, quantity: value });\n    }\n\n    setProductsToQuantity(productsArray);\n  };\n\n  useEffect(() => {\n    mapProductsToQuantity();\n  }, [orders]);\n\n  const renderSearchIcon = () => {\n    return !filterText.length\n      ? {\n          type: 'ionicons',\n          name: 'search',\n          size: 25,\n          color: 'lightgrey',\n        }\n      : {\n          type: 'material',\n          name: 'clear',\n          size: 25,\n          color: 'lightgrey',\n          onPress: () => {\n            setFilterText('');\n            setFilteredProducts(null);\n          },\n        };\n  };\n\n  const searchProductsByFilter = () => {\n    console.log('filtrando?');\n    setFilteredProducts(\n      productsToQuantity.filter((product) =>\n        product.name.toLowerCase().includes(filterText.toLowerCase())\n      )\n    );\n  };\n\n  const renderItem = ({ item }) => {\n    return (\n      <ListItem\n        containerStyle={styles.listItemContainer}\n        title={`${item.quantity} ${item.name}`}\n        titleStyle={styles.listItemTitle}\n        bottomDivider\n      />\n    );\n  };\n\n  return (\n    <View style={styles.screen}>\n      <View style={styles.container}>\n        <Input\n          containerStyle={styles.searchInput}\n          placeholder=\"Buscar produto\"\n          value={filterText}\n          onChangeText={setFilterText}\n          onEndEditing={searchProductsByFilter}\n          returnKeyType=\"done\"\n          autoCorrect={false}\n          rightIcon={renderSearchIcon()}\n        />\n        {!loading ? (\n          <FlatList\n            data={\n              filteredProducts && filteredProducts.length\n                ? filteredProducts\n                : productsToQuantity\n            }\n            renderItem={renderItem}\n            keyExtractor={(item) => item.name}\n            style={styles.productsList}\n          />\n        ) : (\n          <Spinner />\n        )}\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    marginTop: 4,\n    backgroundColor: Colors.backGroundColor,\n    borderTopLeftRadius: 20,\n    borderTopRightRadius: 20,\n    shadowColor: 'black',\n    shadowOpacity: 0.26,\n    shadowOffset: { width: 0, height: 2 },\n    shadowRadius: 8,\n    elevation: 25,\n  },\n  container: {\n    flex: 1,\n    marginHorizontal: 15,\n    marginVertical: 5,\n  },\n  text: {\n    color: '#101010',\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n  searchInput: {\n    width: 300,\n  },\n  productsList: {\n    marginTop: -10,\n  },\n  listItemContainer: {\n    backgroundColor: 'transparent',\n    padding: 10,\n    minHeight: 60,\n  },\n  listItemTitle: {\n    fontWeight: 'bold',\n    marginBottom: 5,\n    fontSize: 20,\n  },\n});\n\nexport default OrdersItemsQuantity;\n"]},"metadata":{},"sourceType":"module"}