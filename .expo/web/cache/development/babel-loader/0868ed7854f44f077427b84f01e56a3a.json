{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport firebase from 'firebase';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport createDataContext from \"./createDataContext\";\nimport 'firebase/firestore';\nimport { navigate } from \"../navigationRef\";\nimport { getFirstByAttribute, updateDoc, updateDocAttribute } from \"../api/firebase\";\nimport GLOBALS from \"../Globals\";\nimport { setPushNotificationToken } from \"../utils\";\n\nvar authReducer = function authReducer(state, action) {\n  switch (action.type) {\n    case 'add_error':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false,\n        errorMessage: action.payload\n      });\n\n    case 'clear_error':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false,\n        errorMessage: ''\n      });\n\n    case 'signin':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        errorMessage: '',\n        loading: false,\n        authId: action.payload\n      });\n\n    case 'loading':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        errorMessage: '',\n        loading: true\n      });\n\n    case 'check_auth':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        errorMessage: '',\n        loading: false,\n        authorized: true\n      });\n\n    case 'add_user':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        errorMessage: '',\n        loading: false,\n        authorized: false,\n        userId: action.payload\n      });\n\n    case 'clear_user':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        errorMessage: '',\n        loading: false,\n        authorized: null,\n        userId: null\n      });\n\n    case 'fetch_logged_user':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        errorMessage: '',\n        loading: false,\n        loggedUser: action.payload\n      });\n\n    case 'signout':\n      return {\n        userId: null,\n        authId: null,\n        errorMessage: '',\n        loading: false,\n        authorized: false\n      };\n\n    case 'reset_password':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        errorMessage: '',\n        loading: false\n      });\n\n    case 'update_account':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        errorMessage: '',\n        loading: false,\n        loggedUser: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nvar tryLocalSignin = function tryLocalSignin(dispatch) {\n  return function _callee() {\n    var authId, user;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('authId'));\n\n          case 2:\n            authId = _context.sent;\n            firebase.auth().onAuthStateChanged(function (user) {\n              if (!user) {\n                console.log('User has been logged out. Redirecting to login...');\n              }\n            });\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(getFirstByAttribute('users', 'authId', authId));\n\n          case 6:\n            user = _context.sent;\n\n            if (authId && user) {\n              console.log(\"Local sign in for auth: \" + authId);\n              dispatch({\n                type: 'signin',\n                payload: authId\n              });\n              navigate('Deliveries');\n            } else {\n              navigate('SigninScreen');\n            }\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\n\nvar onSigninSuccess = function onSigninSuccess(dispatch) {\n  return function _callee2(email) {\n    var authId, user;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            authId = firebase.auth().currentUser.uid;\n            console.log(\"Sign in success for auth: \" + authId);\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(getFirstByAttribute('users', 'authId', authId));\n\n          case 4:\n            user = _context2.sent;\n\n            if (user) {\n              _context2.next = 14;\n              break;\n            }\n\n            console.log(\"No user found with auth {\" + authId + \"}. Checking by email: \" + email);\n            _context2.next = 9;\n            return _regeneratorRuntime.awrap(getFirstByAttribute('users', 'email', email));\n\n          case 9:\n            user = _context2.sent;\n\n            if (!user) {\n              _context2.next = 14;\n              break;\n            }\n\n            setPushNotificationToken().then(function (userPushNotificationToken) {\n              if (!userPushNotificationToken) {\n                updateDocAttribute('users', user.id, 'userPushNotificationToken', null);\n              } else {\n                updateDocAttribute('users', user.id, 'userPushNotificationToken', userPushNotificationToken);\n              }\n            });\n            _context2.next = 14;\n            return _regeneratorRuntime.awrap(updateDocAttribute('users', user.id, 'authId', authId));\n\n          case 14:\n            if (!user) {\n              _context2.next = 26;\n              break;\n            }\n\n            console.log(\"User found. Setting user id to async storage: \" + user.id);\n            _context2.next = 18;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('userId', user.id));\n\n          case 18:\n            _context2.next = 20;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('userRole', user.role));\n\n          case 20:\n            _context2.next = 22;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('authId', authId));\n\n          case 22:\n            dispatch({\n              type: 'signin',\n              payload: authId\n            });\n            navigate('Deliveries');\n            _context2.next = 28;\n            break;\n\n          case 26:\n            console.log(\"Error retrieving user for auth: \" + authId);\n            dispatch({\n              type: 'add_error',\n              payload: 'Algo deu errado com o login.'\n            });\n\n          case 28:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\n\nvar signin = function signin(dispatch) {\n  return function (_ref) {\n    var email = _ref.email,\n        password = _ref.password,\n        passwordConfirmation = _ref.passwordConfirmation,\n        userId = _ref.userId;\n    dispatch({\n      type: 'loading'\n    });\n\n    if (passwordConfirmation) {\n      passwordConfirmation !== password ? dispatch({\n        type: 'add_error',\n        payload: 'As senhas digitadas são divergentes.'\n      }) : signup(dispatch)(email, password, userId);\n    } else {\n      console.log(\"Signing in existing user: \" + userId);\n      firebase.auth().signInWithEmailAndPassword(email, password).then(function () {\n        return onSigninSuccess(dispatch)(email);\n      }).catch(function (err) {\n        console.log(err);\n        var errorMessage = err.code === 'auth/wrong-password' ? 'Senha inválida.' : 'Algo deu errado com o login.';\n        dispatch({\n          type: 'add_error',\n          payload: errorMessage\n        });\n      });\n    }\n  };\n};\n\nvar signup = function signup(dispatch) {\n  return function (email, password, userId) {\n    console.log(\"Creating auth for new user: \" + userId);\n    firebase.auth().createUserWithEmailAndPassword(email, password).then(function (data) {\n      console.log(\"Updating authId for user: \" + userId);\n      updateDocAttribute('users', userId, 'authId', data.user.uid).then(function () {\n        return onSigninSuccess(dispatch)(email);\n      });\n    }).catch(function (err) {\n      console.log(\"Error creating auth for new user: \" + userId, err.code);\n      var errorMessage = err.code === 'auth/weak-password' ? 'A senha deve possuir pelo menos 6 caracteres.' : 'Algo deu errado com o login.';\n      dispatch({\n        type: 'add_error',\n        payload: errorMessage\n      });\n    });\n  };\n};\n\nvar checkAuthOrUser = function checkAuthOrUser(dispatch) {\n  return function (_ref2) {\n    var email = _ref2.email;\n    dispatch({\n      type: 'loading'\n    });\n    console.log(\"Checking auth or user for email: \" + email);\n    firebase.auth().fetchSignInMethodsForEmail(email).then(function _callee3(signInMethods) {\n      var user;\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!(signInMethods.indexOf(firebase.auth.EmailAuthProvider.EMAIL_PASSWORD_SIGN_IN_METHOD) !== -1)) {\n                _context3.next = 8;\n                break;\n              }\n\n              console.log(\"Auth found for email: \" + email);\n              _context3.next = 4;\n              return _regeneratorRuntime.awrap(getFirstByAttribute('users', 'email', email));\n\n            case 4:\n              user = _context3.sent;\n\n              if (!user) {\n                console.log(\"Auth found but user was deleted: \" + email);\n                dispatch({\n                  type: 'add_error',\n                  payload: 'E-mail não autorizado.'\n                });\n              } else {\n                dispatch({\n                  type: 'check_auth'\n                });\n              }\n\n              _context3.next = 10;\n              break;\n\n            case 8:\n              _context3.next = 10;\n              return _regeneratorRuntime.awrap(findUser(dispatch)(email));\n\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }).catch(function (err) {\n      var errorMessage = err.code === 'auth/invalid-email' ? 'Endereço de e-mail inválido.' : 'Algo deu errado com a verificação do e-mail. Verifique sua conexão com a Internet.';\n      dispatch({\n        type: 'add_error',\n        payload: errorMessage\n      });\n    });\n  };\n};\n\nvar findUser = function findUser(dispatch) {\n  return function _callee4(email) {\n    var user;\n    return _regeneratorRuntime.async(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            console.log(\"No auth. So finding user for email: \" + email);\n            _context4.next = 3;\n            return _regeneratorRuntime.awrap(getFirstByAttribute('users', 'email', email));\n\n          case 3:\n            user = _context4.sent;\n\n            if (user) {\n              console.log(\"User found by email: \" + user.id);\n              dispatch({\n                type: 'add_user',\n                payload: user.id\n              });\n            } else {\n              dispatch({\n                type: 'add_error',\n                payload: 'E-mail não autorizado.'\n              });\n            }\n\n          case 5:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\n\nvar fetchLoggedUser = function fetchLoggedUser(dispatch) {\n  return function _callee5() {\n    var authId, loggedUser;\n    return _regeneratorRuntime.async(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            dispatch({\n              type: 'loading'\n            });\n            _context5.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('authId'));\n\n          case 3:\n            authId = _context5.sent;\n            console.log(\"Fetching logged user with auth: \" + authId);\n            _context5.next = 7;\n            return _regeneratorRuntime.awrap(getFirstByAttribute(GLOBALS.COLLECTION.USERS, GLOBALS.USER.ATTRIBUTE.AUTH_ID, authId));\n\n          case 7:\n            loggedUser = _context5.sent;\n\n            if (loggedUser) {\n              console.log(\"Current user: \" + JSON.stringify(loggedUser));\n              dispatch({\n                type: 'fetch_logged_user',\n                payload: loggedUser\n              });\n            } else {\n              console.log(\"No user found for auth: \" + authId);\n              navigate('Signin');\n            }\n\n          case 9:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\n\nvar clearError = function clearError(dispatch) {\n  return function () {\n    dispatch({\n      type: 'clear_error'\n    });\n  };\n};\n\nvar clearUserInfo = function clearUserInfo(dispatch) {\n  return function () {\n    dispatch({\n      type: 'clear_user'\n    });\n  };\n};\n\nvar signout = function signout(dispatch) {\n  return function () {\n    dispatch({\n      type: 'loading'\n    });\n    console.log('[AuthContext] signout');\n    firebase.auth().signOut().then(function _callee6() {\n      return _regeneratorRuntime.async(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.removeItem('authId'));\n\n            case 2:\n              _context6.next = 4;\n              return _regeneratorRuntime.awrap(AsyncStorage.removeItem('userId'));\n\n            case 4:\n              _context6.next = 6;\n              return _regeneratorRuntime.awrap(AsyncStorage.removeItem('userRole'));\n\n            case 6:\n              _context6.next = 8;\n              return _regeneratorRuntime.awrap(AsyncStorage.removeItem('userName'));\n\n            case 8:\n              _context6.next = 10;\n              return _regeneratorRuntime.awrap(AsyncStorage.removeItem('group'));\n\n            case 10:\n              dispatch({\n                type: 'signout'\n              });\n\n            case 11:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    });\n  };\n};\n\nvar resetPassword = function resetPassword(dispatch) {\n  return function (email) {\n    console.log(\"Reseting password for user with email: \" + email);\n    dispatch({\n      type: 'loading'\n    });\n    firebase.auth().sendPasswordResetEmail(email).then(function () {\n      Alert.alert('E-mail enviado', \"E-mail enviado com as instru\\xE7\\xF5es para redefini\\xE7\\xE3o de senha para \" + email, [{\n        text: 'OK'\n      }]);\n      dispatch({\n        type: 'reset_password'\n      });\n      navigate('SigninScreen');\n    }).catch(function (err) {\n      console.log(\"Error while reseting password for email: \" + email, err);\n      var errorMessage = 'Algo deu errado com a redefinição de senha.';\n\n      if (err.code === 'auth/invalid-email') {\n        errorMessage = 'Endereço de e-mail inválido.';\n      } else if (err.code === 'auth/user-not-found') {\n        errorMessage = 'Endereço de e-mail não cadastrado.';\n      }\n\n      dispatch({\n        type: 'add_error',\n        payload: errorMessage\n      });\n    });\n  };\n};\n\nvar updateAccount = function updateAccount(dispatch) {\n  return function _callee7(currentEmail, password, user) {\n    return _regeneratorRuntime.async(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            dispatch({\n              type: 'loading'\n            });\n            console.log(\"Updating account for user: \" + user.id);\n\n            if (!(currentEmail !== user.email)) {\n              _context7.next = 7;\n              break;\n            }\n\n            _context7.next = 5;\n            return _regeneratorRuntime.awrap(updateWithEmail(dispatch)(currentEmail, password, user));\n\n          case 5:\n            _context7.next = 10;\n            break;\n\n          case 7:\n            _context7.next = 9;\n            return _regeneratorRuntime.awrap(updateDoc(GLOBALS.COLLECTION.USERS, user.id, user));\n\n          case 9:\n            dispatch({\n              type: 'update_account',\n              payload: user\n            });\n\n          case 10:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\n\nvar updateWithEmail = function updateWithEmail(dispatch) {\n  return function (currentEmail, password, user) {\n    console.log(\"Setting new e-mail [\" + user.email + \"] for user with e-mail: \" + currentEmail);\n    firebase.auth().signInWithEmailAndPassword(currentEmail, password).then(function (userCredential) {\n      userCredential.user.updateEmail(user.email).then(function () {\n        updateDoc(GLOBALS.COLLECTION.USERS, user.id, user).then(function () {\n          dispatch({\n            type: 'update_account',\n            payload: user\n          });\n        });\n      }).catch(function (err) {\n        console.log(\"Error while updating email for user: \" + currentEmail, err);\n        user.email = currentEmail;\n        updateDoc(GLOBALS.COLLECTION.USERS, user.id, user).then(function () {\n          dispatch({\n            type: 'update_account',\n            payload: user\n          });\n        });\n      });\n    }).catch(function (err) {\n      console.log(err);\n      var errorMessage = err.code === 'auth/wrong-password' ? 'Senha inválida.' : 'Algo deu errado com a atualização de senha.';\n      dispatch({\n        type: 'add_error',\n        payload: errorMessage\n      });\n    });\n  };\n};\n\nvar updatePassword = function updatePassword(dispatch) {\n  return function (email, password, newPassword) {\n    dispatch({\n      type: 'loading'\n    });\n    console.log(\"Updating password for user: \" + email);\n    firebase.auth().signInWithEmailAndPassword(email, password).then(function (userCredential) {\n      userCredential.user.updatePassword(newPassword).then(function () {\n        Alert.alert('Sua senha foi atualizada!', '', [{\n          text: 'OK'\n        }]);\n        dispatch({\n          type: 'update_account'\n        });\n        navigate('AccountOptions');\n      }).catch(function (err) {\n        console.log(err);\n        var errorMessage = err.code === 'auth/weak-password' ? 'A nova senha deve possuir pelo menos 6 caracteres.' : 'Algo deu errado com a atualização de senha.';\n        dispatch({\n          type: 'add_error',\n          payload: errorMessage\n        });\n      });\n    }).catch(function (err) {\n      console.log(err);\n      var errorMessage = err.code === 'auth/wrong-password' ? 'Senha atual inválida.' : 'Algo deu errado com a atualização de senha.';\n      dispatch({\n        type: 'add_error',\n        payload: errorMessage\n      });\n    });\n  };\n};\n\nvar _createDataContext = createDataContext(authReducer, {\n  signin: signin,\n  signout: signout,\n  tryLocalSignin: tryLocalSignin,\n  checkAuthOrUser: checkAuthOrUser,\n  fetchLoggedUser: fetchLoggedUser,\n  clearUserInfo: clearUserInfo,\n  clearError: clearError,\n  resetPassword: resetPassword,\n  updateAccount: updateAccount,\n  updatePassword: updatePassword\n}, {\n  authId: null,\n  userId: null,\n  authorized: null,\n  loggedUser: null,\n  errorMessage: '',\n  loading: false\n}),\n    Provider = _createDataContext.Provider,\n    Context = _createDataContext.Context;\n\nexport { Provider, Context };","map":{"version":3,"sources":["/home/bordi/projects/cestas-cooperflora-rn/src/context/AuthContext.js"],"names":["firebase","AsyncStorage","createDataContext","navigate","getFirstByAttribute","updateDoc","updateDocAttribute","GLOBALS","setPushNotificationToken","authReducer","state","action","type","loading","errorMessage","payload","authId","authorized","userId","loggedUser","tryLocalSignin","dispatch","getItem","auth","onAuthStateChanged","user","console","log","onSigninSuccess","email","currentUser","uid","then","userPushNotificationToken","id","setItem","role","signin","password","passwordConfirmation","signup","signInWithEmailAndPassword","catch","err","code","createUserWithEmailAndPassword","data","checkAuthOrUser","fetchSignInMethodsForEmail","signInMethods","indexOf","EmailAuthProvider","EMAIL_PASSWORD_SIGN_IN_METHOD","findUser","fetchLoggedUser","COLLECTION","USERS","USER","ATTRIBUTE","AUTH_ID","JSON","stringify","clearError","clearUserInfo","signout","signOut","removeItem","resetPassword","sendPasswordResetEmail","Alert","alert","text","updateAccount","currentEmail","updateWithEmail","userCredential","updateEmail","updatePassword","newPassword","Provider","Context"],"mappings":"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","sourcesContent":["import firebase from 'firebase';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { Alert } from 'react-native';\nimport createDataContext from './createDataContext';\nimport 'firebase/firestore';\nimport { navigate } from '../navigationRef';\nimport {\n  getFirstByAttribute,\n  updateDoc,\n  updateDocAttribute,\n} from '../api/firebase';\nimport GLOBALS from '../Globals';\nimport { setPushNotificationToken } from '../utils';\n\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'add_error':\n      return { ...state, loading: false, errorMessage: action.payload };\n    case 'clear_error':\n      return { ...state, loading: false, errorMessage: '' };\n    case 'signin':\n      return {\n        ...state,\n        errorMessage: '',\n        loading: false,\n        authId: action.payload,\n      };\n    case 'loading':\n      return { ...state, errorMessage: '', loading: true };\n    case 'check_auth':\n      return { ...state, errorMessage: '', loading: false, authorized: true };\n    case 'add_user':\n      return {\n        ...state,\n        errorMessage: '',\n        loading: false,\n        authorized: false,\n        userId: action.payload,\n      };\n    case 'clear_user':\n      return {\n        ...state,\n        errorMessage: '',\n        loading: false,\n        authorized: null,\n        userId: null,\n      };\n    case 'fetch_logged_user':\n      return {\n        ...state,\n        errorMessage: '',\n        loading: false,\n        loggedUser: action.payload,\n      };\n    case 'signout':\n      return {\n        userId: null,\n        authId: null,\n        errorMessage: '',\n        loading: false,\n        authorized: false,\n      };\n    case 'reset_password':\n      return { ...state, errorMessage: '', loading: false };\n    case 'update_account':\n      return {\n        ...state,\n        errorMessage: '',\n        loading: false,\n        loggedUser: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nconst tryLocalSignin = (dispatch) => async () => {\n  const authId = await AsyncStorage.getItem('authId');\n\n  firebase.auth().onAuthStateChanged((user) => {\n    if (!user) {\n      console.log('User has been logged out. Redirecting to login...');\n      // navigate('SigninScreen');\n    }\n  });\n\n  const user = await getFirstByAttribute('users', 'authId', authId);\n  if (authId && user) {\n    console.log(`Local sign in for auth: ${authId}`);\n    dispatch({ type: 'signin', payload: authId });\n    navigate('Deliveries');\n  } else {\n    navigate('SigninScreen');\n  }\n};\n\nconst onSigninSuccess = (dispatch) => async (email) => {\n  const authId = firebase.auth().currentUser.uid;\n  console.log(`Sign in success for auth: ${authId}`);\n\n  let user = await getFirstByAttribute('users', 'authId', authId);\n\n  if (!user) {\n    console.log(\n      `No user found with auth {${authId}}. Checking by email: ${email}`\n    );\n    user = await getFirstByAttribute('users', 'email', email);\n\n    if (user) {\n      setPushNotificationToken().then((userPushNotificationToken) => {\n        if (!userPushNotificationToken) {\n          updateDocAttribute(\n            'users',\n            user.id,\n            'userPushNotificationToken',\n            null\n          );\n        } else {\n          updateDocAttribute(\n            'users',\n            user.id,\n            'userPushNotificationToken',\n            userPushNotificationToken\n          );\n        }\n      });\n      await updateDocAttribute('users', user.id, 'authId', authId);\n    }\n  }\n\n  if (user) {\n    console.log(`User found. Setting user id to async storage: ${user.id}`);\n    await AsyncStorage.setItem('userId', user.id);\n    await AsyncStorage.setItem('userRole', user.role);\n    await AsyncStorage.setItem('authId', authId);\n\n    dispatch({ type: 'signin', payload: authId });\n    navigate('Deliveries');\n  } else {\n    console.log(`Error retrieving user for auth: ${authId}`);\n    dispatch({\n      type: 'add_error',\n      payload: 'Algo deu errado com o login.',\n    });\n  }\n};\n\nconst signin =\n  (dispatch) =>\n  ({ email, password, passwordConfirmation, userId }) => {\n    dispatch({ type: 'loading' });\n\n    if (passwordConfirmation) {\n      passwordConfirmation !== password\n        ? dispatch({\n            type: 'add_error',\n            payload: 'As senhas digitadas são divergentes.',\n          })\n        : signup(dispatch)(email, password, userId);\n    } else {\n      console.log(`Signing in existing user: ${userId}`);\n\n      firebase\n        .auth()\n        .signInWithEmailAndPassword(email, password)\n        .then(() => onSigninSuccess(dispatch)(email))\n        .catch((err) => {\n          console.log(err);\n          const errorMessage =\n            err.code === 'auth/wrong-password'\n              ? 'Senha inválida.'\n              : 'Algo deu errado com o login.';\n\n          dispatch({\n            type: 'add_error',\n            payload: errorMessage,\n          });\n        });\n    }\n  };\n\nconst signup = (dispatch) => (email, password, userId) => {\n  console.log(`Creating auth for new user: ${userId}`);\n\n  firebase\n    .auth()\n    .createUserWithEmailAndPassword(email, password)\n    .then((data) => {\n      console.log(`Updating authId for user: ${userId}`);\n      updateDocAttribute('users', userId, 'authId', data.user.uid).then(() =>\n        onSigninSuccess(dispatch)(email)\n      );\n    })\n    .catch((err) => {\n      console.log(`Error creating auth for new user: ${userId}`, err.code);\n      const errorMessage =\n        err.code === 'auth/weak-password'\n          ? 'A senha deve possuir pelo menos 6 caracteres.'\n          : 'Algo deu errado com o login.';\n\n      dispatch({\n        type: 'add_error',\n        payload: errorMessage,\n      });\n    });\n};\n\nconst checkAuthOrUser =\n  (dispatch) =>\n  ({ email }) => {\n    dispatch({ type: 'loading' });\n    console.log(`Checking auth or user for email: ${email}`);\n\n    firebase\n      .auth()\n      .fetchSignInMethodsForEmail(email)\n      .then(async (signInMethods) => {\n        if (\n          signInMethods.indexOf(\n            firebase.auth.EmailAuthProvider.EMAIL_PASSWORD_SIGN_IN_METHOD\n          ) !== -1\n        ) {\n          console.log(`Auth found for email: ${email}`);\n          const user = await getFirstByAttribute('users', 'email', email);\n\n          if (!user) {\n            console.log(`Auth found but user was deleted: ${email}`);\n            dispatch({ type: 'add_error', payload: 'E-mail não autorizado.' });\n          } else {\n            dispatch({ type: 'check_auth' });\n          }\n        } else {\n          await findUser(dispatch)(email);\n        }\n      })\n      .catch((err) => {\n        const errorMessage =\n          err.code === 'auth/invalid-email'\n            ? 'Endereço de e-mail inválido.'\n            : 'Algo deu errado com a verificação do e-mail. Verifique sua conexão com a Internet.';\n        dispatch({ type: 'add_error', payload: errorMessage });\n      });\n  };\n\nconst findUser = (dispatch) => async (email) => {\n  console.log(`No auth. So finding user for email: ${email}`);\n  const user = await getFirstByAttribute('users', 'email', email);\n\n  if (user) {\n    console.log(`User found by email: ${user.id}`);\n    dispatch({\n      type: 'add_user',\n      payload: user.id,\n    });\n  } else {\n    dispatch({ type: 'add_error', payload: 'E-mail não autorizado.' });\n  }\n};\n\nconst fetchLoggedUser = (dispatch) => async () => {\n  dispatch({ type: 'loading' });\n  const authId = await AsyncStorage.getItem('authId');\n  console.log(`Fetching logged user with auth: ${authId}`);\n\n  const loggedUser = await getFirstByAttribute(\n    GLOBALS.COLLECTION.USERS,\n    GLOBALS.USER.ATTRIBUTE.AUTH_ID,\n    authId\n  );\n\n  if (loggedUser) {\n    console.log(`Current user: ${JSON.stringify(loggedUser)}`);\n    dispatch({ type: 'fetch_logged_user', payload: loggedUser });\n  } else {\n    console.log(`No user found for auth: ${authId}`);\n    navigate('Signin');\n  }\n};\n\nconst clearError = (dispatch) => () => {\n  dispatch({ type: 'clear_error' });\n};\n\nconst clearUserInfo = (dispatch) => () => {\n  dispatch({ type: 'clear_user' });\n};\n\nconst signout = (dispatch) => () => {\n  dispatch({ type: 'loading' });\n  console.log('[AuthContext] signout');\n\n  firebase\n    .auth()\n    .signOut()\n    .then(async () => {\n      await AsyncStorage.removeItem('authId');\n      await AsyncStorage.removeItem('userId');\n      await AsyncStorage.removeItem('userRole');\n      await AsyncStorage.removeItem('userName');\n      await AsyncStorage.removeItem('group');\n      dispatch({ type: 'signout' });\n    });\n};\n\nconst resetPassword = (dispatch) => (email) => {\n  console.log(`Reseting password for user with email: ${email}`);\n  dispatch({ type: 'loading' });\n\n  firebase\n    .auth()\n    .sendPasswordResetEmail(email)\n    .then(() => {\n      Alert.alert(\n        'E-mail enviado',\n        `E-mail enviado com as instruções para redefinição de senha para ${email}`,\n        [\n          {\n            text: 'OK',\n          },\n        ]\n      );\n      dispatch({ type: 'reset_password' });\n      navigate('SigninScreen');\n    })\n    .catch((err) => {\n      console.log(`Error while reseting password for email: ${email}`, err);\n      let errorMessage = 'Algo deu errado com a redefinição de senha.';\n\n      if (err.code === 'auth/invalid-email') {\n        errorMessage = 'Endereço de e-mail inválido.';\n      } else if (err.code === 'auth/user-not-found') {\n        errorMessage = 'Endereço de e-mail não cadastrado.';\n      }\n\n      dispatch({ type: 'add_error', payload: errorMessage });\n    });\n};\n\nconst updateAccount = (dispatch) => async (currentEmail, password, user) => {\n  dispatch({ type: 'loading' });\n  console.log(`Updating account for user: ${user.id}`);\n\n  if (currentEmail !== user.email) {\n    await updateWithEmail(dispatch)(currentEmail, password, user);\n  } else {\n    await updateDoc(GLOBALS.COLLECTION.USERS, user.id, user);\n    dispatch({ type: 'update_account', payload: user });\n  }\n};\n\nconst updateWithEmail = (dispatch) => (currentEmail, password, user) => {\n  console.log(\n    `Setting new e-mail [${user.email}] for user with e-mail: ${currentEmail}`\n  );\n\n  firebase\n    .auth()\n    .signInWithEmailAndPassword(currentEmail, password)\n    .then((userCredential) => {\n      userCredential.user\n        .updateEmail(user.email)\n        .then(() => {\n          updateDoc(GLOBALS.COLLECTION.USERS, user.id, user).then(() => {\n            dispatch({ type: 'update_account', payload: user });\n          });\n        })\n        .catch((err) => {\n          console.log(\n            `Error while updating email for user: ${currentEmail}`,\n            err\n          );\n          user.email = currentEmail;\n          updateDoc(GLOBALS.COLLECTION.USERS, user.id, user).then(() => {\n            dispatch({ type: 'update_account', payload: user });\n          });\n        });\n    })\n    .catch((err) => {\n      console.log(err);\n      const errorMessage =\n        err.code === 'auth/wrong-password'\n          ? 'Senha inválida.'\n          : 'Algo deu errado com a atualização de senha.';\n\n      dispatch({\n        type: 'add_error',\n        payload: errorMessage,\n      });\n    });\n};\n\nconst updatePassword = (dispatch) => (email, password, newPassword) => {\n  dispatch({ type: 'loading' });\n  console.log(`Updating password for user: ${email}`);\n  firebase\n    .auth()\n    .signInWithEmailAndPassword(email, password)\n    .then((userCredential) => {\n      userCredential.user\n        .updatePassword(newPassword)\n        .then(() => {\n          Alert.alert('Sua senha foi atualizada!', '', [\n            {\n              text: 'OK',\n            },\n          ]);\n          dispatch({ type: 'update_account' });\n          navigate('AccountOptions');\n        })\n        .catch((err) => {\n          console.log(err);\n          const errorMessage =\n            err.code === 'auth/weak-password'\n              ? 'A nova senha deve possuir pelo menos 6 caracteres.'\n              : 'Algo deu errado com a atualização de senha.';\n\n          dispatch({\n            type: 'add_error',\n            payload: errorMessage,\n          });\n        });\n    })\n    .catch((err) => {\n      console.log(err);\n      const errorMessage =\n        err.code === 'auth/wrong-password'\n          ? 'Senha atual inválida.'\n          : 'Algo deu errado com a atualização de senha.';\n\n      dispatch({\n        type: 'add_error',\n        payload: errorMessage,\n      });\n    });\n};\n\nexport const { Provider, Context } = createDataContext(\n  authReducer,\n  {\n    signin,\n    signout,\n    tryLocalSignin,\n    checkAuthOrUser,\n    fetchLoggedUser,\n    clearUserInfo,\n    clearError,\n    resetPassword,\n    updateAccount,\n    updatePassword,\n  },\n  {\n    authId: null,\n    userId: null,\n    authorized: null,\n    loggedUser: null,\n    errorMessage: '',\n    loading: false,\n  }\n);\n"]},"metadata":{},"sourceType":"module"}