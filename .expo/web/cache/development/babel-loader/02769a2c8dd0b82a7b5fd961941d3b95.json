{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/bordi/projects/cestas-cooperflora-rn/src/screens/delivery/AddDeliveryExtraItemsScreen.js\";\n\nimport React, { useContext, useState } from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { AntDesign } from '@expo/vector-icons';\nimport endOfDay from 'date-fns/endOfDay';\nimport { Input, ListItem } from 'react-native-elements';\nimport { useFocusEffect } from '@react-navigation/native';\nimport { Context as UserContext } from \"../../context/UserContext\";\nimport { Context as ProductContext } from \"../../context/ProductContext\";\nimport { Context as DeliveryContext } from \"../../context/DeliveryContext\";\nimport Spinner from \"../../components/Spinner\";\nimport { formatCurrency, isBlank, showAlert } from \"../../helper/HelperFunctions\";\nimport useConsumerGroup from \"../../hooks/useConsumerGroup\";\nimport Colors from \"../../constants/Colors\";\nimport Button from \"../../components/Button\";\nimport { sendPushNotification } from \"../../utils\";\n\nvar AddDeliveryExtraItemsScreen = function AddDeliveryExtraItemsScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(ProductContext),\n      _useContext$state = _useContext.state,\n      loading = _useContext$state.loading,\n      products = _useContext$state.products,\n      fetchProducts = _useContext.fetchProducts;\n\n  var _useContext2 = useContext(DeliveryContext),\n      state = _useContext2.state,\n      createDelivery = _useContext2.createDelivery,\n      updateDelivery = _useContext2.updateDelivery,\n      deleteDelivery = _useContext2.deleteDelivery;\n\n  var _useContext3 = useContext(UserContext),\n      fetchConsumers = _useContext3.fetchConsumers;\n\n  var _useState = useState(state.nextDelivery && state.nextDelivery.extraProducts ? state.nextDelivery.extraProducts.map(function (product) {\n    return product.id;\n  }) : []),\n      _useState2 = _slicedToArray(_useState, 2),\n      checkedItems = _useState2[0],\n      setCheckedItems = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      filteredProducts = _useState4[0],\n      setFilteredProducts = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      filterText = _useState6[0],\n      setFilterText = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isKeyboardVisible = _useState8[0],\n      setKeyboardVisible = _useState8[1];\n\n  var groupInfo = useConsumerGroup();\n  useFocusEffect(React.useCallback(function () {\n    fetchProducts();\n    var keyboardDidShowListener = Keyboard.addListener('keyboardDidShow', function () {\n      setKeyboardVisible(true);\n    });\n    var keyboardDidHideListener = Keyboard.addListener('keyboardDidHide', function () {\n      setKeyboardVisible(false);\n    });\n    return function () {\n      keyboardDidHideListener.remove();\n      keyboardDidShowListener.remove();\n    };\n  }, []));\n\n  var searchProductsByFilter = function searchProductsByFilter() {\n    setFilteredProducts(products.filter(function (product) {\n      return product.name.toLowerCase().includes(filterText.toLowerCase());\n    }));\n  };\n\n  var renderSearchIcon = function renderSearchIcon() {\n    return !filterText.length ? {\n      type: 'ionicons',\n      name: 'search',\n      size: 25,\n      color: 'lightgrey'\n    } : {\n      type: 'material',\n      name: 'clear',\n      size: 25,\n      color: 'lightgrey',\n      onPress: function onPress() {\n        setFilterText('');\n        setFilteredProducts(products);\n      }\n    };\n  };\n\n  var handleItemCheck = function handleItemCheck(item) {\n    if (!checkedItems.includes(item.id)) {\n      setCheckedItems([].concat(_toConsumableArray(checkedItems), [item.id]));\n    } else {\n      setCheckedItems(checkedItems.filter(function (id) {\n        return id !== item.id;\n      }));\n    }\n  };\n\n  var validateAndCreateOrUpdateDelivery = function validateAndCreateOrUpdateDelivery() {\n    if (!state.deliveryDate) {\n      showAlert('A data da entrega deve ser informada.');\n      return;\n    }\n\n    if (isBlank(state.baseProducts)) {\n      showAlert('A composição da cesta deve ser informada.');\n      return;\n    }\n\n    var extraProducts = products.filter(function (product) {\n      return checkedItems.includes(product.id);\n    });\n    extraProducts.forEach(function (product) {\n      if (state.nextDelivery) {\n        var deliveryProducts = state.nextDelivery.extraProducts;\n        var deliveryProductIndex = deliveryProducts.findIndex(function (deliveryProduct) {\n          return deliveryProduct.id === product.id;\n        });\n        product.orderedQuantity = deliveryProductIndex >= 0 ? deliveryProducts[deliveryProductIndex].orderedQuantity : 0;\n      } else {\n        product.orderedQuantity = 0;\n      }\n    });\n    var delivery = {\n      date: endOfDay(state.deliveryDate),\n      ordersLimitDate: state.ordersLimitDate,\n      baseProducts: state.baseProducts,\n      extraProducts: extraProducts,\n      baseProductsPrice: groupInfo.baseProductsPrice,\n      deliveryFee: groupInfo.deliveryFee\n    };\n\n    if (state.nextDelivery) {\n      updateDelivery({\n        deliveryId: state.nextDelivery.id,\n        delivery: delivery\n      });\n      navigation.navigate('DeliveriesScreen');\n    } else {\n      createDelivery({\n        delivery: delivery\n      });\n      fetchConsumers().then(function (consumers) {\n        sendPushNotification(consumers);\n      }).catch(function (error) {\n        console.log(error);\n      });\n      navigation.navigate('DeliveriesScreen');\n    }\n  };\n\n  var deleteCurrentDelivery = function deleteCurrentDelivery() {\n    Alert.alert('Excluir entrega', 'Você tem certeza que deseja excluir esta próxima entrega?', [{\n      text: 'Cancelar',\n      style: 'cancel'\n    }, {\n      text: 'Confirmar',\n      onPress: function onPress() {\n        deleteDelivery({\n          deliveryId: state.nextDelivery.id\n        }).then(function () {\n          navigation.navigate('DeliveriesScreen');\n        });\n      }\n    }]);\n  };\n\n  var renderQuantityInfoText = function renderQuantityInfoText(item) {\n    if (item.availableQuantity && item.maxOrderQuantity) {\n      return React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 9\n        }\n      }, item.availableQuantity.toLocaleString(), \" dispon\\xEDveis - M\\xE1x.\", ' ', item.maxOrderQuantity.toLocaleString(), \" por pedido\");\n    }\n\n    if (item.availableQuantity && !item.maxOrderQuantity) {\n      return React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 14\n        }\n      }, item.availableQuantity.toLocaleString(), \" dispon\\xEDveis\");\n    }\n\n    if (!item.availableQuantity && item.maxOrderQuantity) {\n      return React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 9\n        }\n      }, \"M\\xE1x. \", item.maxOrderQuantity.toLocaleString(), \" por pedido\");\n    }\n\n    return null;\n  };\n\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    var priceDisplay = formatCurrency(item.price);\n    return React.createElement(View, {\n      style: styles.productContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 7\n      }\n    }, React.createElement(TouchableWithoutFeedback, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }\n    }, React.createElement(ListItem, {\n      containerStyle: styles.listItemContainer,\n      title: React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate('CreateExtraItemScreen', {\n            product: item,\n            selectedProducts: checkedItems\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontFamily: 'Roboto',\n          fontWeight: '700',\n          marginBottom: 5,\n          fontSize: 16\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 17\n        }\n      }, item.name, \" - R$ \", priceDisplay), renderQuantityInfoText(item)),\n      checkBox: {\n        checkedIcon: 'check-square-o',\n        uncheckedIcon: 'square-o',\n        checkedColor: Colors.secondary,\n        onPress: function onPress() {\n          return handleItemCheck(item);\n        },\n        checked: checkedItems.includes(item.id),\n        containerStyle: {\n          marginRight: 7\n        }\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }\n    })));\n  };\n\n  var renderConfirmButton = function renderConfirmButton() {\n    return filterText.length && filteredProducts && !filteredProducts.length || isKeyboardVisible ? null : React.createElement(View, {\n      style: styles.buttonContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 7\n      }\n    }, React.createElement(Button, {\n      id: \"createOrUpdateDeliveryButton\",\n      style: styles.button,\n      textColor: \"white\",\n      onPress: validateAndCreateOrUpdateDelivery,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }\n    }, state.nextDelivery ? 'Atualizar entrega' : 'Criar entrega'));\n  };\n\n  var renderDeleteButton = function renderDeleteButton() {\n    if (filterText.length && filteredProducts && !filteredProducts.length || isKeyboardVisible || !state.nextDelivery) {\n      return null;\n    }\n\n    return React.createElement(View, {\n      style: styles.buttonContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 7\n      }\n    }, React.createElement(Button, {\n      id: \"deleteDeliveryButton\",\n      style: styles.button,\n      textColor: \"white\",\n      onPress: deleteCurrentDelivery,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }\n    }, \"Excluir entrega\"));\n  };\n\n  return React.createElement(View, {\n    style: styles.screen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }\n  }, !loading ? React.createElement(TouchableWithoutFeedback, {\n    onPress: Keyboard.dismiss,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 13\n    }\n  }, React.createElement(Input, {\n    containerStyle: styles.searchInput,\n    placeholder: \"Nome do produto\",\n    value: filterText,\n    onChangeText: setFilterText,\n    onEndEditing: searchProductsByFilter,\n    returnKeyType: \"done\",\n    autoCorrect: false,\n    rightIcon: renderSearchIcon(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 15\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.newProductButton,\n    onPress: function onPress() {\n      return navigation.navigate('CreateExtraItemScreen', {\n        products: products\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 15\n    }\n  }, React.createElement(AntDesign, {\n    name: \"pluscircle\",\n    size: 24,\n    color: Colors.tertiary,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 17\n    }\n  })), filterText.length && filteredProducts && !filteredProducts.length ? React.createElement(Text, {\n    style: styles.productNotFoundText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 17\n    }\n  }, \"Nenhum produto encontrado por este nome.\") : React.createElement(View, {\n    style: {\n      flex: 1.2\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 17\n    }\n  }, React.createElement(FlatList, {\n    data: filteredProducts && filteredProducts.length ? filteredProducts : products,\n    renderItem: renderItem,\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 19\n    }\n  })), renderConfirmButton(), renderDeleteButton())) : React.createElement(Spinner, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 11\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    marginTop: 4,\n    borderTopLeftRadius: 20,\n    borderTopRightRadius: 20,\n    backgroundColor: '#F0F5F9',\n    shadowColor: 'black',\n    shadowOpacity: 0.26,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowRadius: 8,\n    elevation: 25\n  },\n  container: {\n    flex: 1,\n    margin: 10\n  },\n  productContainer: {\n    marginTop: 5,\n    backgroundColor: 'white',\n    borderRadius: 15\n  },\n  listItemContainer: {\n    backgroundColor: 'transparent',\n    padding: 10,\n    minHeight: 50\n  },\n  searchInput: {\n    width: 250\n  },\n  newProductButton: {\n    position: 'absolute',\n    alignSelf: 'flex-end',\n    top: 15,\n    right: 15\n  },\n  productNotFoundText: {\n    margin: 10,\n    fontSize: 16\n  },\n  buttonContainer: {\n    width: '100%'\n  },\n  button: {\n    marginTop: 5,\n    backgroundColor: Colors.secondary,\n    alignSelf: 'center'\n  }\n});\nexport default AddDeliveryExtraItemsScreen;","map":{"version":3,"sources":["/home/bordi/projects/cestas-cooperflora-rn/src/screens/delivery/AddDeliveryExtraItemsScreen.js"],"names":["React","useContext","useState","AntDesign","endOfDay","Input","ListItem","useFocusEffect","Context","UserContext","ProductContext","DeliveryContext","Spinner","formatCurrency","isBlank","showAlert","useConsumerGroup","Colors","Button","sendPushNotification","AddDeliveryExtraItemsScreen","navigation","state","loading","products","fetchProducts","createDelivery","updateDelivery","deleteDelivery","fetchConsumers","nextDelivery","extraProducts","map","product","id","checkedItems","setCheckedItems","filteredProducts","setFilteredProducts","filterText","setFilterText","isKeyboardVisible","setKeyboardVisible","groupInfo","useCallback","keyboardDidShowListener","Keyboard","addListener","keyboardDidHideListener","remove","searchProductsByFilter","filter","name","toLowerCase","includes","renderSearchIcon","length","type","size","color","onPress","handleItemCheck","item","validateAndCreateOrUpdateDelivery","deliveryDate","baseProducts","forEach","deliveryProducts","deliveryProductIndex","findIndex","deliveryProduct","orderedQuantity","delivery","date","ordersLimitDate","baseProductsPrice","deliveryFee","deliveryId","navigate","then","consumers","catch","error","console","log","deleteCurrentDelivery","Alert","alert","text","style","renderQuantityInfoText","availableQuantity","maxOrderQuantity","toLocaleString","renderItem","priceDisplay","price","styles","productContainer","listItemContainer","selectedProducts","fontFamily","fontWeight","marginBottom","fontSize","checkedIcon","uncheckedIcon","checkedColor","secondary","checked","containerStyle","marginRight","renderConfirmButton","buttonContainer","button","renderDeleteButton","screen","container","dismiss","searchInput","newProductButton","tertiary","productNotFoundText","flex","StyleSheet","create","marginTop","borderTopLeftRadius","borderTopRightRadius","backgroundColor","shadowColor","shadowOpacity","shadowOffset","width","height","shadowRadius","elevation","margin","borderRadius","padding","minHeight","position","alignSelf","top","right"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport {\n  Alert,\n  FlatList,\n  Keyboard,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  TouchableWithoutFeedback,\n  View,\n} from 'react-native';\nimport { AntDesign } from '@expo/vector-icons';\nimport endOfDay from 'date-fns/endOfDay';\nimport { Input, ListItem } from 'react-native-elements';\nimport { useFocusEffect } from '@react-navigation/native';\nimport { Context as UserContext } from '../../context/UserContext';\nimport { Context as ProductContext } from '../../context/ProductContext';\nimport { Context as DeliveryContext } from '../../context/DeliveryContext';\nimport Spinner from '../../components/Spinner';\nimport {\n  formatCurrency,\n  isBlank,\n  showAlert,\n} from '../../helper/HelperFunctions';\nimport useConsumerGroup from '../../hooks/useConsumerGroup';\nimport Colors from '../../constants/Colors';\nimport Button from '../../components/Button';\nimport { sendPushNotification } from '../../utils';\n\nconst AddDeliveryExtraItemsScreen = ({ navigation }) => {\n  const {\n    state: { loading, products },\n    fetchProducts,\n  } = useContext(ProductContext);\n  const { state, createDelivery, updateDelivery, deleteDelivery } =\n    useContext(DeliveryContext);\n  const { fetchConsumers } = useContext(UserContext);\n\n  const [checkedItems, setCheckedItems] = useState(\n    state.nextDelivery && state.nextDelivery.extraProducts\n      ? state.nextDelivery.extraProducts.map((product) => product.id)\n      : []\n  );\n  const [filteredProducts, setFilteredProducts] = useState(null);\n  const [filterText, setFilterText] = useState('');\n  const [isKeyboardVisible, setKeyboardVisible] = useState(false);\n  const groupInfo = useConsumerGroup();\n\n  useFocusEffect(\n    React.useCallback(() => {\n      fetchProducts();\n\n      const keyboardDidShowListener = Keyboard.addListener(\n        'keyboardDidShow',\n        () => {\n          setKeyboardVisible(true);\n        }\n      );\n      const keyboardDidHideListener = Keyboard.addListener(\n        'keyboardDidHide',\n        () => {\n          setKeyboardVisible(false);\n        }\n      );\n\n      return () => {\n        keyboardDidHideListener.remove();\n        keyboardDidShowListener.remove();\n      };\n    }, [])\n  );\n\n  const searchProductsByFilter = () => {\n    setFilteredProducts(\n      products.filter((product) =>\n        product.name.toLowerCase().includes(filterText.toLowerCase())\n      )\n    );\n  };\n\n  const renderSearchIcon = () => {\n    return !filterText.length\n      ? {\n          type: 'ionicons',\n          name: 'search',\n          size: 25,\n          color: 'lightgrey',\n        }\n      : {\n          type: 'material',\n          name: 'clear',\n          size: 25,\n          color: 'lightgrey',\n          onPress: () => {\n            setFilterText('');\n            setFilteredProducts(products);\n          },\n        };\n  };\n\n  const handleItemCheck = (item) => {\n    if (!checkedItems.includes(item.id)) {\n      setCheckedItems([...checkedItems, item.id]);\n    } else {\n      setCheckedItems(checkedItems.filter((id) => id !== item.id));\n    }\n  };\n\n  const validateAndCreateOrUpdateDelivery = () => {\n    if (!state.deliveryDate) {\n      showAlert('A data da entrega deve ser informada.');\n      return;\n    }\n\n    if (isBlank(state.baseProducts)) {\n      showAlert('A composição da cesta deve ser informada.');\n      return;\n    }\n\n    const extraProducts = products.filter((product) =>\n      checkedItems.includes(product.id)\n    );\n\n    extraProducts.forEach((product) => {\n      if (state.nextDelivery) {\n        const deliveryProducts = state.nextDelivery.extraProducts;\n        const deliveryProductIndex = deliveryProducts.findIndex(\n          (deliveryProduct) => deliveryProduct.id === product.id\n        );\n\n        product.orderedQuantity =\n          deliveryProductIndex >= 0\n            ? deliveryProducts[deliveryProductIndex].orderedQuantity\n            : 0;\n      } else {\n        product.orderedQuantity = 0;\n      }\n    });\n\n    const delivery = {\n      date: endOfDay(state.deliveryDate),\n      ordersLimitDate: state.ordersLimitDate,\n      baseProducts: state.baseProducts,\n      extraProducts,\n      baseProductsPrice: groupInfo.baseProductsPrice,\n      deliveryFee: groupInfo.deliveryFee,\n    };\n\n    if (state.nextDelivery) {\n      updateDelivery({ deliveryId: state.nextDelivery.id, delivery });\n      navigation.navigate('DeliveriesScreen');\n    } else {\n      createDelivery({ delivery });\n      fetchConsumers()\n        .then((consumers) => {\n          sendPushNotification(consumers);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n      navigation.navigate('DeliveriesScreen');\n    }\n  };\n\n  const deleteCurrentDelivery = () => {\n    Alert.alert(\n      'Excluir entrega',\n      'Você tem certeza que deseja excluir esta próxima entrega?',\n      [\n        {\n          text: 'Cancelar',\n          style: 'cancel',\n        },\n        {\n          text: 'Confirmar',\n          onPress: () => {\n            deleteDelivery({ deliveryId: state.nextDelivery.id }).then(() => {\n              navigation.navigate('DeliveriesScreen');\n            });\n          },\n        },\n      ]\n    );\n  };\n\n  const renderQuantityInfoText = (item) => {\n    if (item.availableQuantity && item.maxOrderQuantity) {\n      return (\n        <Text>\n          {item.availableQuantity.toLocaleString()} disponíveis - Máx.{' '}\n          {item.maxOrderQuantity.toLocaleString()} por pedido\n        </Text>\n      );\n    }\n\n    if (item.availableQuantity && !item.maxOrderQuantity) {\n      return <Text>{item.availableQuantity.toLocaleString()} disponíveis</Text>;\n    }\n\n    if (!item.availableQuantity && item.maxOrderQuantity) {\n      return (\n        <Text>Máx. {item.maxOrderQuantity.toLocaleString()} por pedido</Text>\n      );\n    }\n\n    return null;\n  };\n\n  const renderItem = ({ item }) => {\n    const priceDisplay = formatCurrency(item.price);\n\n    return (\n      <View style={styles.productContainer}>\n        <TouchableWithoutFeedback>\n          <ListItem\n            containerStyle={styles.listItemContainer}\n            title={\n              <TouchableOpacity\n                onPress={() =>\n                  navigation.navigate('CreateExtraItemScreen', {\n                    product: item,\n                    selectedProducts: checkedItems,\n                  })\n                }\n              >\n                <Text\n                  style={{\n                    fontFamily: 'Roboto',\n                    fontWeight: '700',\n                    marginBottom: 5,\n                    fontSize: 16,\n                  }}\n                >\n                  {item.name} - R$ {priceDisplay}\n                </Text>\n                {renderQuantityInfoText(item)}\n              </TouchableOpacity>\n            }\n            checkBox={{\n              checkedIcon: 'check-square-o',\n              uncheckedIcon: 'square-o',\n              checkedColor: Colors.secondary,\n              onPress: () => handleItemCheck(item),\n              checked: checkedItems.includes(item.id),\n              containerStyle: {\n                marginRight: 7,\n              },\n            }}\n          />\n        </TouchableWithoutFeedback>\n      </View>\n    );\n  };\n\n  const renderConfirmButton = () => {\n    return (filterText.length &&\n      filteredProducts &&\n      !filteredProducts.length) ||\n      isKeyboardVisible ? null : (\n      <View style={styles.buttonContainer}>\n        <Button\n          id=\"createOrUpdateDeliveryButton\"\n          style={styles.button}\n          textColor=\"white\"\n          onPress={validateAndCreateOrUpdateDelivery}\n        >\n          {state.nextDelivery ? 'Atualizar entrega' : 'Criar entrega'}\n        </Button>\n      </View>\n    );\n  };\n\n  const renderDeleteButton = () => {\n    if (\n      (filterText.length && filteredProducts && !filteredProducts.length) ||\n      isKeyboardVisible ||\n      !state.nextDelivery\n    ) {\n      return null;\n    }\n\n    return (\n      <View style={styles.buttonContainer}>\n        <Button\n          id=\"deleteDeliveryButton\"\n          style={styles.button}\n          textColor=\"white\"\n          onPress={deleteCurrentDelivery}\n        >\n          Excluir entrega\n        </Button>\n      </View>\n    );\n  };\n\n  return (\n    <View style={styles.screen}>\n      <View style={styles.container}>\n        {!loading ? (\n          <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\n            <View style={styles.container}>\n              {/* <NavigationEvents onWillFocus={fetchProducts} /> */}\n              <Input\n                containerStyle={styles.searchInput}\n                placeholder=\"Nome do produto\"\n                value={filterText}\n                onChangeText={setFilterText}\n                onEndEditing={searchProductsByFilter}\n                returnKeyType=\"done\"\n                autoCorrect={false}\n                rightIcon={renderSearchIcon()}\n              />\n              {/* <TextLink\n                text=\"Novo item\"\n                onPress={() => navigation.navigate('CreateExtraItemScreen', { products })}\n                style={styles.newProductButton}\n              /> */}\n              <TouchableOpacity\n                style={styles.newProductButton}\n                onPress={() =>\n                  navigation.navigate('CreateExtraItemScreen', { products })\n                }\n              >\n                <AntDesign\n                  name=\"pluscircle\"\n                  size={24}\n                  color={Colors.tertiary}\n                />\n              </TouchableOpacity>\n              {filterText.length &&\n              filteredProducts &&\n              !filteredProducts.length ? (\n                <Text style={styles.productNotFoundText}>\n                  Nenhum produto encontrado por este nome.\n                </Text>\n              ) : (\n                <View style={{ flex: 1.2 }}>\n                  <FlatList\n                    data={\n                      filteredProducts && filteredProducts.length\n                        ? filteredProducts\n                        : products\n                    }\n                    renderItem={renderItem}\n                    keyExtractor={(item) => item.id}\n                  />\n                </View>\n              )}\n              {renderConfirmButton()}\n              {renderDeleteButton()}\n            </View>\n          </TouchableWithoutFeedback>\n        ) : (\n          <Spinner />\n        )}\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    marginTop: 4,\n    // paddingLeft: 25,\n    // paddingRight: 25,\n    // borderRadius: 25,\n    borderTopLeftRadius: 20,\n    borderTopRightRadius: 20,\n    backgroundColor: '#F0F5F9',\n    shadowColor: 'black',\n    shadowOpacity: 0.26,\n    shadowOffset: { width: 0, height: 2 },\n    shadowRadius: 8,\n    elevation: 25,\n  },\n  container: {\n    flex: 1,\n    margin: 10,\n  },\n  productContainer: {\n    marginTop: 5,\n    backgroundColor: 'white',\n    borderRadius: 15,\n  },\n  listItemContainer: {\n    backgroundColor: 'transparent',\n    padding: 10,\n    minHeight: 50,\n  },\n  searchInput: {\n    width: 250,\n  },\n  newProductButton: {\n    position: 'absolute',\n    alignSelf: 'flex-end',\n    top: 15,\n    right: 15,\n  },\n  productNotFoundText: {\n    margin: 10,\n    fontSize: 16,\n  },\n\n  buttonContainer: {\n    // position: 'absolute',\n    width: '100%',\n    // bottom: 0,\n  },\n  button: {\n    marginTop: 5,\n    backgroundColor: Colors.secondary,\n    alignSelf: 'center',\n  },\n});\n\nexport default AddDeliveryExtraItemsScreen;\n"]},"metadata":{},"sourceType":"module"}