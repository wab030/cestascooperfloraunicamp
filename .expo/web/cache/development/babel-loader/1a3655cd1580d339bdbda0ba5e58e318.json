{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/bordi/projects/cestas-cooperflora-rn/src/screens/AccountOptionsScreen.js\";\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Checkbox from 'expo-checkbox';\nimport { Divider } from 'react-native-elements';\nimport { Context as AuthContext } from \"../context/AuthContext\";\nimport Spinner from \"../components/Spinner\";\nimport HeaderTitle from \"../components/HeaderTitle\";\nimport FrontArrow from \"../../assets/images/icons/frontarrow.png\";\nimport { stardardScreenStyle as screen } from \"./screenstyles/ScreenStyles\";\nimport { TextLabel } from \"../components/StandardStyles\";\nimport Colors from \"../constants/Colors\";\nimport { setPushNotificationToken } from \"../utils\";\nimport { updateDocAttribute } from \"../api/firebase\";\n\nvar AccountOptionsScreen = function AccountOptionsScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isPushToken = _useState2[0],\n      setIsPushToken = _useState2[1];\n\n  var _useContext = useContext(AuthContext),\n      state = _useContext.state,\n      signout = _useContext.signout,\n      fetchLoggedUser = _useContext.fetchLoggedUser;\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      refreshing = _useState4[0],\n      setRefreshing = _useState4[1];\n\n  console.log('[AccountOptionScreen started]');\n  useEffect(function () {\n    fetchLoggedUser();\n  }, []);\n  useEffect(function () {\n    if (state) {\n      if (state.loggedUser) {\n        if (state.loggedUser.pushNotificationToken === null || !state.loggedUser.pushNotificationToken) {\n          setIsPushToken(false);\n        } else {\n          setIsPushToken(true);\n        }\n      }\n    }\n  }, [state]);\n\n  var handleCheckBox = function handleCheckBox() {\n    if (!isPushToken) {\n      setPushNotificationToken().then(function (pushNotificationToken) {\n        console.log('Token', pushNotificationToken);\n\n        if (!pushNotificationToken) {\n          setIsPushToken(false);\n          updateDocAttribute('users', state.loggedUser.id, 'pushNotificationToken', null);\n        } else {\n          setIsPushToken(true);\n          updateDocAttribute('users', state.loggedUser.id, 'pushNotificationToken', pushNotificationToken);\n        }\n      });\n    } else {\n      setIsPushToken(false);\n      updateDocAttribute('users', state.loggedUser.id, 'pushNotificationToken', null);\n    }\n  };\n\n  var handleSignout = function handleSignout() {\n    console.log('[Account Option Screen] handle signout');\n    signout();\n    navigation.navigate('SigninScreen');\n  };\n\n  return React.createElement(View, {\n    style: styles.screen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, state.loading ? React.createElement(Spinner, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }) : React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, state.loggedUser ? React.createElement(ScrollView, {\n    refreshControl: React.createElement(RefreshControl, {\n      refreshing: refreshing,\n      onRefresh: function onRefresh() {\n        setRefreshing(true);\n        fetchLoggedUser();\n        setRefreshing(false);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.headerContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.listItemTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, state.loggedUser.name), React.createElement(Text, {\n    style: styles.listItemText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, state.loggedUser.email), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, state.loggedUser.phoneNumber)), React.createElement(Divider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('Payments');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }, React.createElement(View, {\n    style: styles.listItemContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: styles.listItem,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 19\n    }\n  }, React.createElement(Text, {\n    style: styles.listItemTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 21\n    }\n  }, \"Meu Saldo\"), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  }, \"R$ \" + state.loggedUser.balance)), React.createElement(Image, {\n    source: FrontArrow,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 19\n    }\n  })), React.createElement(Divider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }))) : null, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('UpdateAccountInfoScreen', {\n        user: state.loggedUser\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.listItemContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.listItem,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.listItemTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, \"Alterar informa\\xE7\\xF5es\")), React.createElement(Image, {\n    source: FrontArrow,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 15\n    }\n  })), React.createElement(Divider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  })), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('UpdatePasswordScreen', {\n        userEmail: state.loggedUser.email,\n        navigation: navigation\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.listItemContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.listItem,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.listItemTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }\n  }, \"Alterar senha\")), React.createElement(Image, {\n    source: FrontArrow,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 15\n    }\n  })), React.createElement(Divider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.listItemContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }\n  }, React.createElement(TextLabel, {\n    style: styles.paragraph,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, \"Permitir notifica\\xE7\\xE3o das entregas\"), React.createElement(Checkbox, {\n    value: isPushToken,\n    onValueChange: handleCheckBox,\n    color: isPushToken ? Colors.primary : 'undefined',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  })), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('AboutScreen');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.listItemContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.listItem,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.listItemTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }\n  }, \"Sobre \")), React.createElement(Image, {\n    source: FrontArrow,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 15\n    }\n  })), React.createElement(Divider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  })), React.createElement(TouchableOpacity, {\n    onPress: handleSignout,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.listItemContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.listItem,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.listItemTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }\n  }, \"Sair\")), React.createElement(Image, {\n    source: FrontArrow,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 15\n    }\n  })))));\n};\n\nexport var AccountOptionsScreenOptions = function AccountOptionsScreenOptions() {\n  return {\n    headerTitle: function headerTitle() {\n      return React.createElement(View, {\n        style: styles.header,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 7\n        }\n      }, React.createElement(HeaderTitle, {\n        title: \"Minha Conta\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 9\n        }\n      }));\n    },\n    headerStyle: {\n      backgroundColor: 'transparent',\n      elevation: 0,\n      shadowOpacity: 0,\n      borderBottomWidth: 0\n    }\n  };\n};\nvar styles = StyleSheet.create({\n  screen: screen,\n  container: {\n    flex: 1,\n    margin: 25\n  },\n  headerContainer: {\n    padding: 10,\n    minHeight: 60,\n    marginTop: 5\n  },\n  listItem: {},\n  listItemContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 10,\n    minHeight: 60,\n    marginTop: 5\n  },\n  listItemTitle: {\n    fontFamily: 'Roboto',\n    fontWeight: '700',\n    fontSize: 16,\n    color: '#505050'\n  },\n  listItemText: {\n    fontFamily: 'Roboto',\n    fontWeight: '400',\n    fontSize: 16,\n    color: '#505050'\n  },\n  header: {\n    alignItems: 'flex-start'\n  }\n});\nexport default AccountOptionsScreen;","map":{"version":3,"sources":["/home/bordi/projects/cestas-cooperflora-rn/src/screens/AccountOptionsScreen.js"],"names":["React","useState","useEffect","useContext","Checkbox","Divider","Context","AuthContext","Spinner","HeaderTitle","FrontArrow","stardardScreenStyle","screen","TextLabel","Colors","setPushNotificationToken","updateDocAttribute","AccountOptionsScreen","navigation","isPushToken","setIsPushToken","state","signout","fetchLoggedUser","refreshing","setRefreshing","console","log","loggedUser","pushNotificationToken","handleCheckBox","then","id","handleSignout","navigate","styles","loading","container","headerContainer","listItemTitle","name","listItemText","email","phoneNumber","listItemContainer","listItem","balance","user","userEmail","paragraph","primary","AccountOptionsScreenOptions","headerTitle","header","headerStyle","backgroundColor","elevation","shadowOpacity","borderBottomWidth","StyleSheet","create","flex","margin","padding","minHeight","marginTop","flexDirection","justifyContent","alignItems","fontFamily","fontWeight","fontSize","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport {\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n  Image,\n  RefreshControl,\n  ScrollView,\n} from 'react-native';\nimport Checkbox from 'expo-checkbox';\nimport { Divider } from 'react-native-elements';\nimport { Context as AuthContext } from '../context/AuthContext';\nimport Spinner from '../components/Spinner';\nimport HeaderTitle from '../components/HeaderTitle';\nimport FrontArrow from '../../assets/images/icons/frontarrow.png';\nimport { stardardScreenStyle as screen } from './screenstyles/ScreenStyles';\nimport { TextLabel } from '../components/StandardStyles';\nimport Colors from '../constants/Colors';\nimport { setPushNotificationToken } from '../utils';\nimport { updateDocAttribute } from '../api/firebase';\n\nconst AccountOptionsScreen = ({ navigation }) => {\n  const [isPushToken, setIsPushToken] = useState(false);\n  const { state, signout, fetchLoggedUser } = useContext(AuthContext);\n  const [refreshing, setRefreshing] = useState(false);\n  console.log('[AccountOptionScreen started]');\n\n  useEffect(() => {\n    fetchLoggedUser();\n  }, []);\n\n  useEffect(() => {\n    if (state) {\n      if (state.loggedUser) {\n        if (\n          state.loggedUser.pushNotificationToken === null ||\n          !state.loggedUser.pushNotificationToken\n        ) {\n          setIsPushToken(false);\n        } else {\n          setIsPushToken(true);\n        }\n      }\n    }\n  }, [state]);\n\n  const handleCheckBox = () => {\n    if (!isPushToken) {\n      setPushNotificationToken().then((pushNotificationToken) => {\n        console.log('Token', pushNotificationToken);\n        if (!pushNotificationToken) {\n          setIsPushToken(false);\n          updateDocAttribute(\n            'users',\n            state.loggedUser.id,\n            'pushNotificationToken',\n            null\n          );\n        } else {\n          setIsPushToken(true);\n          updateDocAttribute(\n            'users',\n            state.loggedUser.id,\n            'pushNotificationToken',\n            pushNotificationToken\n          );\n        }\n      });\n    } else {\n      setIsPushToken(false);\n      updateDocAttribute(\n        'users',\n        state.loggedUser.id,\n        'pushNotificationToken',\n        null\n      );\n    }\n  };\n\n  const handleSignout = () => {\n    console.log('[Account Option Screen] handle signout');\n    signout();\n    navigation.navigate('SigninScreen');\n  };\n\n  return (\n    <View style={styles.screen}>\n      {state.loading ? (\n        <Spinner />\n      ) : (\n        <View style={styles.container}>\n          {state.loggedUser ? (\n            <ScrollView\n              refreshControl={\n                <RefreshControl\n                  refreshing={refreshing}\n                  onRefresh={() => {\n                    setRefreshing(true);\n                    fetchLoggedUser();\n                    setRefreshing(false);\n                  }}\n                />\n              }\n            >\n              <View style={styles.headerContainer}>\n                <Text style={styles.listItemTitle}>\n                  {state.loggedUser.name}\n                </Text>\n                <Text style={styles.listItemText}>\n                  {state.loggedUser.email}\n                </Text>\n                <Text>{state.loggedUser.phoneNumber}</Text>\n              </View>\n              <Divider />\n              <TouchableOpacity onPress={() => navigation.navigate('Payments')}>\n                <View style={styles.listItemContainer}>\n                  <View style={styles.listItem}>\n                    <Text style={styles.listItemTitle}>Meu Saldo</Text>\n                    <Text>{`R$ ${state.loggedUser.balance}`}</Text>\n                  </View>\n                  <Image source={FrontArrow} />\n                </View>\n                <Divider />\n              </TouchableOpacity>\n            </ScrollView>\n          ) : null}\n          <TouchableOpacity\n            onPress={() =>\n              navigation.navigate('UpdateAccountInfoScreen', {\n                user: state.loggedUser,\n              })\n            }\n          >\n            <View style={styles.listItemContainer}>\n              <View style={styles.listItem}>\n                <Text style={styles.listItemTitle}>Alterar informações</Text>\n              </View>\n              <Image source={FrontArrow} />\n            </View>\n            <Divider />\n          </TouchableOpacity>\n          <TouchableOpacity\n            onPress={() =>\n              navigation.navigate('UpdatePasswordScreen', {\n                userEmail: state.loggedUser.email,\n                navigation,\n              })\n            }\n          >\n            <View style={styles.listItemContainer}>\n              <View style={styles.listItem}>\n                <Text style={styles.listItemTitle}>Alterar senha</Text>\n              </View>\n              <Image source={FrontArrow} />\n            </View>\n            <Divider />\n          </TouchableOpacity>\n          <View style={styles.listItemContainer}>\n            <TextLabel style={styles.paragraph}>\n              Permitir notificação das entregas\n            </TextLabel>\n            <Checkbox\n              value={isPushToken}\n              onValueChange={handleCheckBox}\n              color={isPushToken ? Colors.primary : 'undefined'}\n            />\n          </View>\n          <TouchableOpacity onPress={() => navigation.navigate('AboutScreen')}>\n            <View style={styles.listItemContainer}>\n              <View style={styles.listItem}>\n                <Text style={styles.listItemTitle}>Sobre </Text>\n              </View>\n              <Image source={FrontArrow} />\n            </View>\n            <Divider />\n          </TouchableOpacity>\n          {/* <TouchableOpacity onPress={signout}> */}\n          <TouchableOpacity onPress={handleSignout}>\n            <View style={styles.listItemContainer}>\n              <View style={styles.listItem}>\n                <Text style={styles.listItemTitle}>Sair</Text>\n              </View>\n              <Image source={FrontArrow} />\n            </View>\n          </TouchableOpacity>\n        </View>\n      )}\n    </View>\n  );\n};\n\nexport const AccountOptionsScreenOptions = () => {\n  return {\n    headerTitle: () => (\n      <View style={styles.header}>\n        <HeaderTitle title=\"Minha Conta\" />\n      </View>\n    ),\n    headerStyle: {\n      backgroundColor: 'transparent',\n      elevation: 0,\n      shadowOpacity: 0,\n      borderBottomWidth: 0,\n    },\n  };\n};\n\nconst styles = StyleSheet.create({\n  screen,\n  container: {\n    flex: 1,\n    margin: 25,\n  },\n  headerContainer: {\n    padding: 10,\n    minHeight: 60,\n    marginTop: 5,\n  },\n  listItem: {\n    // flexDirection: 'row',\n    // alignContent: 'space-between'\n  },\n  listItemContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 10,\n    minHeight: 60,\n    marginTop: 5,\n  },\n  listItemTitle: {\n    fontFamily: 'Roboto',\n    fontWeight: '700',\n    fontSize: 16,\n    color: '#505050',\n  },\n  listItemText: {\n    fontFamily: 'Roboto',\n    fontWeight: '400',\n    fontSize: 16,\n    color: '#505050',\n  },\n  header: {\n    alignItems: 'flex-start',\n  },\n});\n\nexport default AccountOptionsScreen;\n"]},"metadata":{},"sourceType":"module"}