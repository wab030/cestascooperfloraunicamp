{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport createDataContext from \"./createDataContext\";\nimport { deleteDoc, get, getOrderingBy, insertDoc, updateDoc } from \"../api/firebase\";\nimport GLOBALS from \"../Globals\";\n\nvar productReducer = function productReducer(state, action) {\n  switch (action.type) {\n    case 'fetch_products':\n      return {\n        loading: false,\n        products: action.payload\n      };\n\n    case 'add_product':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false\n      });\n\n    case 'update_product':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false\n      });\n\n    case 'delete_product':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false\n      });\n\n    case 'loading':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true\n      });\n\n    default:\n      return state;\n  }\n};\n\nvar fetchProducts = function fetchProducts(dispatch) {\n  return function _callee() {\n    var products;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            dispatch({\n              type: 'loading'\n            });\n            console.log('Fetching products...');\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(getOrderingBy(GLOBALS.COLLECTION.PRODUCTS, 'name'));\n\n          case 4:\n            products = _context.sent;\n            dispatch({\n              type: 'fetch_products',\n              payload: products\n            });\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\n\nvar createProduct = function createProduct(dispatch) {\n  return function _callee2(_ref) {\n    var product;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            product = _ref.product;\n            dispatch({\n              type: 'loading'\n            });\n            console.log('Creating new product: ' + JSON.stringify(product));\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(insertDoc(GLOBALS.COLLECTION.PRODUCTS, product));\n\n          case 5:\n            dispatch({\n              type: 'add_product'\n            });\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\n\nvar updateProduct = function updateProduct(dispatch) {\n  return function _callee3(_ref2) {\n    var productId, updatedProduct;\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            productId = _ref2.productId, updatedProduct = _ref2.updatedProduct;\n            dispatch({\n              type: 'loading'\n            });\n            console.log('Updating product ' + productId + ': ' + JSON.stringify(updatedProduct));\n            _context3.next = 5;\n            return _regeneratorRuntime.awrap(updateDoc(GLOBALS.COLLECTION.PRODUCTS, productId, updatedProduct));\n\n          case 5:\n            dispatch({\n              type: 'update_product'\n            });\n\n          case 6:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\n\nvar deleteProduct = function deleteProduct(dispatch) {\n  return function _callee4(_ref3) {\n    var productId;\n    return _regeneratorRuntime.async(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            productId = _ref3.productId;\n            dispatch({\n              type: 'loading'\n            });\n            console.log('Deleting product with id: ' + productId);\n            _context4.next = 5;\n            return _regeneratorRuntime.awrap(deleteDoc(GLOBALS.COLLECTION.PRODUCTS, productId));\n\n          case 5:\n            dispatch({\n              type: 'delete_product'\n            });\n\n          case 6:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\n\nvar _createDataContext = createDataContext(productReducer, {\n  fetchProducts: fetchProducts,\n  createProduct: createProduct,\n  updateProduct: updateProduct,\n  deleteProduct: deleteProduct\n}, {\n  products: null,\n  loading: false\n}),\n    Provider = _createDataContext.Provider,\n    Context = _createDataContext.Context;\n\nexport { Provider, Context };","map":{"version":3,"sources":["/home/bordi/projects/cestas-cooperflora-rn/src/context/ProductContext.js"],"names":["createDataContext","deleteDoc","get","getOrderingBy","insertDoc","updateDoc","GLOBALS","productReducer","state","action","type","loading","products","payload","fetchProducts","dispatch","console","log","COLLECTION","PRODUCTS","createProduct","product","JSON","stringify","updateProduct","productId","updatedProduct","deleteProduct","Provider","Context"],"mappings":"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","sourcesContent":["import createDataContext from './createDataContext';\nimport {\n  deleteDoc,\n  get,\n  getOrderingBy,\n  insertDoc,\n  updateDoc,\n} from '../api/firebase';\nimport GLOBALS from '../Globals';\n\nconst productReducer = (state, action) => {\n  switch (action.type) {\n    case 'fetch_products':\n      return {\n        loading: false,\n        products: action.payload,\n      };\n    case 'add_product':\n      return { ...state, loading: false };\n    case 'update_product':\n      return { ...state, loading: false };\n    case 'delete_product':\n      return { ...state, loading: false };\n    case 'loading':\n      return { ...state, loading: true };\n    default:\n      return state;\n  }\n};\n\nconst fetchProducts = (dispatch) => async () => {\n  dispatch({ type: 'loading' });\n  console.log('Fetching products...');\n\n  const products = await getOrderingBy(GLOBALS.COLLECTION.PRODUCTS, 'name');\n\n  dispatch({\n    type: 'fetch_products',\n    payload: products,\n  });\n};\n\nconst createProduct = (dispatch) => async ({ product }) => {\n  dispatch({ type: 'loading' });\n  console.log('Creating new product: ' + JSON.stringify(product));\n\n  await insertDoc(GLOBALS.COLLECTION.PRODUCTS, product);\n  dispatch({ type: 'add_product' });\n};\n\nconst updateProduct = (dispatch) => async ({ productId, updatedProduct }) => {\n  dispatch({ type: 'loading' });\n  console.log(\n    'Updating product ' + productId + ': ' + JSON.stringify(updatedProduct)\n  );\n\n  await updateDoc(GLOBALS.COLLECTION.PRODUCTS, productId, updatedProduct);\n  dispatch({ type: 'update_product' });\n};\n\nconst deleteProduct = (dispatch) => async ({ productId }) => {\n  dispatch({ type: 'loading' });\n  console.log('Deleting product with id: ' + productId);\n\n  await deleteDoc(GLOBALS.COLLECTION.PRODUCTS, productId);\n  dispatch({ type: 'delete_product' });\n};\n\nexport const { Provider, Context } = createDataContext(\n  productReducer,\n  {\n    fetchProducts,\n    createProduct,\n    updateProduct,\n    deleteProduct,\n  },\n  { products: null, loading: false }\n);\n"]},"metadata":{},"sourceType":"module"}