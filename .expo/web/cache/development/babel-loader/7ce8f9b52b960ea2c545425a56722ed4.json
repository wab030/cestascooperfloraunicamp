{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/bordi/projects/cestas-cooperflora-rn/src/screens/delivery/CreateDeliveryScreen.js\";\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { format } from 'date-fns';\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport { Context as DeliveryContext } from \"../../context/DeliveryContext\";\nimport FormInput from \"../../components/FormInput\";\nimport Spacer from \"../../components/Spacer\";\nimport GLOBALS from \"../../Globals\";\nimport useConsumerGroup from \"../../hooks/useConsumerGroup\";\nimport HeaderTitle from \"../../components/HeaderTitle\";\nimport BackArrow from \"../../components/BackArrow\";\nimport Colors from \"../../constants/Colors\";\nimport { accessibilityLabel } from \"../../utils\";\n\nvar CreateDeliveryScreen = function CreateDeliveryScreen(_ref) {\n  var route = _ref.route;\n\n  var _useContext = useContext(DeliveryContext),\n      setDeliveryInfo = _useContext.setDeliveryInfo;\n\n  var delivery = route && route.params ? route.params.delivery : null;\n\n  var _useState = useState(delivery ? delivery.deliveryDate : new Date()),\n      _useState2 = _slicedToArray(_useState, 2),\n      deliveryDate = _useState2[0],\n      setDeliveryDate = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showDeliveryDate = _useState4[0],\n      setShowDeliveryDate = _useState4[1];\n\n  var _useState5 = useState(delivery ? delivery.limitDate : new Date(deliveryDate.getFullYear(), deliveryDate.getMonth(), deliveryDate.getDate() - 1, 18)),\n      _useState6 = _slicedToArray(_useState5, 2),\n      ordersLimitDate = _useState6[0],\n      setOrdersLimitDate = _useState6[1];\n\n  var _useState7 = useState(delivery ? new Date(ordersLimitDate.getFullYear(), ordersLimitDate.getMonth(), ordersLimitDate.getDate(), ordersLimitDate.getHours(), ordersLimitDate.getMinutes()) : new Date(deliveryDate.getFullYear(), deliveryDate.getMonth(), deliveryDate.getDate() - 1, 18)),\n      _useState8 = _slicedToArray(_useState7, 2),\n      ordersLimitTime = _useState8[0],\n      setOrdersLimitTime = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      showOrdersDateTime = _useState10[0],\n      setShowOrdersDateTime = _useState10[1];\n\n  var _useState11 = useState('date'),\n      _useState12 = _slicedToArray(_useState11, 2),\n      dateTimeMode = _useState12[0],\n      setDateTimeMode = _useState12[1];\n\n  var _useState13 = useState(delivery ? delivery.baseProducts : ''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      baseProducts = _useState14[0],\n      setBaseProducts = _useState14[1];\n\n  var groupInfo = useConsumerGroup();\n  useEffect(function () {\n    setDeliveryInfo(deliveryDate, ordersLimitDate, ordersLimitTime, baseProducts, groupInfo == null ? void 0 : groupInfo.baseProductsPrice, groupInfo == null ? void 0 : groupInfo.deliveryFee);\n  }, []);\n\n  var resolveNextMode = function resolveNextMode() {\n    var isDateTimeInput = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n    if (isDateTimeInput && showOrdersDateTime && Platform.OS === 'ios' && dateTimeMode === 'time') {\n      setDateTimeMode('date');\n    }\n  };\n\n  var handleDateInputIconTouch = function handleDateInputIconTouch(showDate, setShowDate, isDateTimeInput) {\n    return React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        resolveNextMode(showDate, isDateTimeInput);\n        setShowDate(!showDate);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }\n    }, showDate ? React.createElement(FontAwesome5, {\n      name: \"caret-up\",\n      size: 24,\n      color: \"black\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }) : React.createElement(FontAwesome5, {\n      name: \"caret-down\",\n      size: 24,\n      color: \"black\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }));\n  };\n\n  var onDeliveryDateChange = function onDeliveryDateChange(event, selectedDate) {\n    var currentDate = selectedDate || deliveryDate;\n    var limitDate = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate() - 1, 18);\n    setShowDeliveryDate(Platform.OS === 'ios');\n    setDeliveryDate(currentDate);\n    setOrdersLimitDate(limitDate);\n    setDeliveryInfo(currentDate, limitDate, limitDate, baseProducts, groupInfo == null ? void 0 : groupInfo.baseProductsPrice, groupInfo == null ? void 0 : groupInfo.deliveryFee);\n  };\n\n  var onOrdersDateTimeChange = function onOrdersDateTimeChange(event, selectedValue) {\n    setShowOrdersDateTime(Platform.OS === 'ios');\n\n    if (dateTimeMode === 'date') {\n      var currentDate = selectedValue || ordersLimitDate;\n      setOrdersLimitDate(currentDate);\n      setDateTimeMode('time');\n      setShowOrdersDateTime(Platform.OS !== 'ios');\n      setDeliveryInfo(deliveryDate, currentDate, ordersLimitTime, baseProducts, groupInfo == null ? void 0 : groupInfo.baseProductsPrice, groupInfo == null ? void 0 : groupInfo.deliveryFee);\n    } else {\n      var selectedTime = selectedValue || ordersLimitTime;\n      setOrdersLimitTime(selectedTime);\n      setShowOrdersDateTime(Platform.OS === 'ios');\n      var nextMode = Platform.OS === 'ios' ? 'time' : 'date';\n      setDateTimeMode(nextMode);\n      setDeliveryInfo(deliveryDate, ordersLimitDate, selectedTime, baseProducts, groupInfo == null ? void 0 : groupInfo.baseProductsPrice, groupInfo == null ? void 0 : groupInfo.deliveryFee);\n    }\n  };\n\n  var handleOrdersDateTimeInputPress = function handleOrdersDateTimeInputPress() {\n    resolveNextMode();\n    setShowOrdersDateTime(!showOrdersDateTime);\n  };\n\n  return React.createElement(View, {\n    style: styles.screen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableWithoutFeedback, {\n    onPress: Keyboard.dismiss,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }, React.createElement(KeyboardAvoidingView, {\n    style: styles.container,\n    keyboardVerticalOffset: Platform.OS === 'ios' ? 0 : 100,\n    behavior: Platform.OS === 'ios' ? 'position' : 'height',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: {\n      justifyContent: 'flex-end'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }, React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 15\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return setShowDeliveryDate(!showDeliveryDate);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }\n  }, React.createElement(FormInput, {\n    id: \"deliverydate\",\n    style: {\n      borderBottomWidth: 2,\n      borderColor: Colors.tertiary\n    },\n    label: \"Data da entrega\",\n    value: format(deliveryDate, GLOBALS.FORMAT.DEFAULT_DATE),\n    editable: false,\n    rightIcon: handleDateInputIconTouch(showDeliveryDate, setShowDeliveryDate, false),\n    onTouchStart: function onTouchStart() {\n      return setShowDeliveryDate(!showDeliveryDate);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 19\n    }\n  })), showDeliveryDate && React.createElement(DateTimePicker, {\n    value: deliveryDate,\n    mode: \"date\",\n    display: \"default\",\n    minimumDate: new Date(),\n    onChange: onDeliveryDateChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 19\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: handleOrdersDateTimeInputPress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 17\n    }\n  }, React.createElement(FormInput, {\n    id: \"deliverytime\",\n    style: {\n      borderBottomWidth: 2,\n      borderColor: Colors.tertiary\n    },\n    label: \"Hor\\xE1rio limite para pedidos\",\n    value: format(ordersLimitDate, GLOBALS.FORMAT.DEFAULT_DATE) + \" \" + format(ordersLimitTime, GLOBALS.FORMAT.DEFAULT_TIME),\n    editable: false,\n    rightIcon: handleDateInputIconTouch(showOrdersDateTime, setShowOrdersDateTime, true),\n    onTouchStart: handleOrdersDateTimeInputPress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 19\n    }\n  })), showOrdersDateTime && React.createElement(DateTimePicker, {\n    value: dateTimeMode === 'date' ? ordersLimitDate : ordersLimitTime,\n    mode: dateTimeMode,\n    is24Hour: true,\n    display: \"default\",\n    minimumDate: dateTimeMode === 'date' ? new Date() : null,\n    maximumDate: dateTimeMode === 'date' ? deliveryDate : null,\n    onChange: onOrdersDateTimeChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 19\n    }\n  }), React.createElement(Spacer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: styles.textAreaContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 17\n    }\n  }, React.createElement(TextInput, _extends({}, accessibilityLabel('basketitens'), {\n    style: styles.textArea,\n    value: baseProducts,\n    onChangeText: setBaseProducts,\n    onEndEditing: function onEndEditing() {\n      return setDeliveryInfo(deliveryDate, ordersLimitDate, ordersLimitTime, baseProducts, groupInfo == null ? void 0 : groupInfo.baseProductsPrice, groupInfo == null ? void 0 : groupInfo.deliveryFee);\n    },\n    underlineColorAndroid: \"transparent\",\n    placeholder: \"Composi\\xE7\\xE3o da cesta\",\n    placeholderTextColor: \"grey\",\n    numberOfLines: 10,\n    multiline: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 19\n    }\n  })))))))));\n};\n\nexport var createDeliveryScreenOptions = function createDeliveryScreenOptions() {\n  return {\n    headerTitle: function headerTitle() {\n      return React.createElement(View, {\n        style: styles.header,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 7\n        }\n      }, React.createElement(HeaderTitle, {\n        title: \"Nova Entrega\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 9\n        }\n      }));\n    },\n    headerBackImage: function headerBackImage() {\n      return React.createElement(BackArrow, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 28\n        }\n      });\n    },\n    headerBackTitleVisible: false,\n    headerStyle: {\n      backgroundColor: 'transparent',\n      elevation: 0,\n      shadowOpacity: 0,\n      borderBottomWidth: 0\n    }\n  };\n};\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    marginTop: 4,\n    borderTopLeftRadius: 20,\n    borderTopRightRadius: 20,\n    backgroundColor: '#F0F5F9',\n    shadowColor: 'black',\n    shadowOpacity: 0.26,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowRadius: 8,\n    elevation: 25\n  },\n  container: {\n    flex: 1,\n    margin: 10\n  },\n  text: {\n    color: '#101010',\n    fontSize: 24,\n    fontWeight: 'bold'\n  },\n  textAreaContainer: {\n    borderColor: Colors.tertiary,\n    borderWidth: 2,\n    padding: 5,\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start'\n  },\n  textArea: {\n    fontSize: 16,\n    height: 150,\n    width: 300,\n    textAlignVertical: 'top'\n  },\n  header: {\n    alignItems: 'flex-start'\n  }\n});\nexport default CreateDeliveryScreen;","map":{"version":3,"sources":["/home/bordi/projects/cestas-cooperflora-rn/src/screens/delivery/CreateDeliveryScreen.js"],"names":["React","useContext","useEffect","useState","format","DateTimePicker","FontAwesome5","Context","DeliveryContext","FormInput","Spacer","GLOBALS","useConsumerGroup","HeaderTitle","BackArrow","Colors","accessibilityLabel","CreateDeliveryScreen","route","setDeliveryInfo","delivery","params","deliveryDate","Date","setDeliveryDate","showDeliveryDate","setShowDeliveryDate","limitDate","getFullYear","getMonth","getDate","ordersLimitDate","setOrdersLimitDate","getHours","getMinutes","ordersLimitTime","setOrdersLimitTime","showOrdersDateTime","setShowOrdersDateTime","dateTimeMode","setDateTimeMode","baseProducts","setBaseProducts","groupInfo","baseProductsPrice","deliveryFee","resolveNextMode","isDateTimeInput","Platform","OS","handleDateInputIconTouch","showDate","setShowDate","onDeliveryDateChange","event","selectedDate","currentDate","onOrdersDateTimeChange","selectedValue","selectedTime","nextMode","handleOrdersDateTimeInputPress","styles","screen","container","Keyboard","dismiss","justifyContent","borderBottomWidth","borderColor","tertiary","FORMAT","DEFAULT_DATE","DEFAULT_TIME","textAreaContainer","textArea","createDeliveryScreenOptions","headerTitle","header","headerBackImage","headerBackTitleVisible","headerStyle","backgroundColor","elevation","shadowOpacity","StyleSheet","create","flex","marginTop","borderTopLeftRadius","borderTopRightRadius","shadowColor","shadowOffset","width","height","shadowRadius","margin","text","color","fontSize","fontWeight","borderWidth","padding","alignItems","textAlignVertical"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport {\n  StyleSheet,\n  TextInput,\n  TouchableWithoutFeedback,\n  TouchableOpacity,\n  View,\n  Keyboard,\n  ScrollView,\n  Platform,\n  KeyboardAvoidingView,\n} from 'react-native';\nimport { format } from 'date-fns';\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport { Context as DeliveryContext } from '../../context/DeliveryContext';\nimport FormInput from '../../components/FormInput';\nimport Spacer from '../../components/Spacer';\nimport GLOBALS from '../../Globals';\nimport useConsumerGroup from '../../hooks/useConsumerGroup';\nimport HeaderTitle from '../../components/HeaderTitle';\nimport BackArrow from '../../components/BackArrow';\nimport Colors from '../../constants/Colors';\nimport { accessibilityLabel } from '../../utils';\n\nconst CreateDeliveryScreen = ({ route }) => {\n  // console.log('[Create Delivery Screen started]');\n  const { setDeliveryInfo } = useContext(DeliveryContext);\n\n  const delivery = route && route.params ? route.params.delivery : null;\n\n  const [deliveryDate, setDeliveryDate] = useState(\n    delivery ? delivery.deliveryDate : new Date()\n  );\n  const [showDeliveryDate, setShowDeliveryDate] = useState(false);\n  const [ordersLimitDate, setOrdersLimitDate] = useState(\n    delivery\n      ? delivery.limitDate\n      : new Date(\n          deliveryDate.getFullYear(),\n          deliveryDate.getMonth(),\n          deliveryDate.getDate() - 1,\n          18\n        )\n  );\n  const [ordersLimitTime, setOrdersLimitTime] = useState(\n    delivery\n      ? new Date(\n          ordersLimitDate.getFullYear(),\n          ordersLimitDate.getMonth(),\n          ordersLimitDate.getDate(),\n          ordersLimitDate.getHours(),\n          ordersLimitDate.getMinutes()\n        )\n      : new Date(\n          deliveryDate.getFullYear(),\n          deliveryDate.getMonth(),\n          deliveryDate.getDate() - 1,\n          18\n        )\n  );\n  const [showOrdersDateTime, setShowOrdersDateTime] = useState(false);\n  const [dateTimeMode, setDateTimeMode] = useState('date');\n  const [baseProducts, setBaseProducts] = useState(\n    delivery ? delivery.baseProducts : ''\n  );\n  const groupInfo = useConsumerGroup();\n\n  useEffect(() => {\n    setDeliveryInfo(\n      deliveryDate,\n      ordersLimitDate,\n      ordersLimitTime,\n      baseProducts,\n      groupInfo?.baseProductsPrice,\n      groupInfo?.deliveryFee\n    );\n  }, []);\n\n  const resolveNextMode = (isDateTimeInput = true) => {\n    if (\n      isDateTimeInput &&\n      showOrdersDateTime &&\n      Platform.OS === 'ios' &&\n      dateTimeMode === 'time'\n    ) {\n      setDateTimeMode('date');\n    }\n  };\n\n  const handleDateInputIconTouch = (showDate, setShowDate, isDateTimeInput) => {\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          resolveNextMode(showDate, isDateTimeInput);\n          setShowDate(!showDate);\n        }}\n      >\n        {showDate ? (\n          <FontAwesome5 name=\"caret-up\" size={24} color=\"black\" />\n        ) : (\n          <FontAwesome5 name=\"caret-down\" size={24} color=\"black\" />\n        )}\n      </TouchableOpacity>\n    );\n  };\n\n  const onDeliveryDateChange = (event, selectedDate) => {\n    const currentDate = selectedDate || deliveryDate;\n    const limitDate = new Date(\n      currentDate.getFullYear(),\n      currentDate.getMonth(),\n      currentDate.getDate() - 1,\n      18\n    );\n    setShowDeliveryDate(Platform.OS === 'ios');\n    setDeliveryDate(currentDate);\n    setOrdersLimitDate(limitDate);\n\n    setDeliveryInfo(\n      currentDate,\n      limitDate,\n      limitDate,\n      baseProducts,\n      groupInfo?.baseProductsPrice,\n      groupInfo?.deliveryFee\n    );\n  };\n\n  const onOrdersDateTimeChange = (event, selectedValue) => {\n    setShowOrdersDateTime(Platform.OS === 'ios');\n    if (dateTimeMode === 'date') {\n      const currentDate = selectedValue || ordersLimitDate;\n      setOrdersLimitDate(currentDate);\n      setDateTimeMode('time');\n      setShowOrdersDateTime(Platform.OS !== 'ios');\n      setDeliveryInfo(\n        deliveryDate,\n        currentDate,\n        ordersLimitTime,\n        baseProducts,\n        groupInfo?.baseProductsPrice,\n        groupInfo?.deliveryFee\n      );\n    } else {\n      const selectedTime = selectedValue || ordersLimitTime;\n      setOrdersLimitTime(selectedTime);\n      setShowOrdersDateTime(Platform.OS === 'ios');\n      const nextMode = Platform.OS === 'ios' ? 'time' : 'date';\n      setDateTimeMode(nextMode);\n      setDeliveryInfo(\n        deliveryDate,\n        ordersLimitDate,\n        selectedTime,\n        baseProducts,\n        groupInfo?.baseProductsPrice,\n        groupInfo?.deliveryFee\n      );\n    }\n  };\n\n  const handleOrdersDateTimeInputPress = () => {\n    resolveNextMode();\n    setShowOrdersDateTime(!showOrdersDateTime);\n  };\n\n  return (\n    <View style={styles.screen}>\n      <View style={styles.container}>\n        <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\n          <KeyboardAvoidingView\n            style={styles.container}\n            keyboardVerticalOffset={Platform.OS === 'ios' ? 0 : 100}\n            behavior={Platform.OS === 'ios' ? 'position' : 'height'}\n          >\n            <View style={{ justifyContent: 'flex-end' }}>\n              <ScrollView>\n                <TouchableOpacity\n                  onPress={() => setShowDeliveryDate(!showDeliveryDate)}\n                >\n                  <FormInput\n                    id=\"deliverydate\"\n                    style={{\n                      borderBottomWidth: 2,\n                      borderColor: Colors.tertiary,\n                    }}\n                    label=\"Data da entrega\"\n                    value={format(deliveryDate, GLOBALS.FORMAT.DEFAULT_DATE)}\n                    editable={false}\n                    rightIcon={handleDateInputIconTouch(\n                      showDeliveryDate,\n                      setShowDeliveryDate,\n                      false\n                    )}\n                    onTouchStart={() => setShowDeliveryDate(!showDeliveryDate)}\n                  />\n                </TouchableOpacity>\n                {showDeliveryDate && (\n                  <DateTimePicker\n                    value={deliveryDate}\n                    mode=\"date\"\n                    display=\"default\"\n                    minimumDate={new Date()}\n                    onChange={onDeliveryDateChange}\n                  />\n                )}\n                <TouchableOpacity onPress={handleOrdersDateTimeInputPress}>\n                  <FormInput\n                    id=\"deliverytime\"\n                    style={{\n                      borderBottomWidth: 2,\n                      borderColor: Colors.tertiary,\n                    }}\n                    label=\"Horário limite para pedidos\"\n                    value={`${format(\n                      ordersLimitDate,\n                      GLOBALS.FORMAT.DEFAULT_DATE\n                    )} ${format(ordersLimitTime, GLOBALS.FORMAT.DEFAULT_TIME)}`}\n                    editable={false}\n                    rightIcon={handleDateInputIconTouch(\n                      showOrdersDateTime,\n                      setShowOrdersDateTime,\n                      true\n                    )}\n                    onTouchStart={handleOrdersDateTimeInputPress}\n                  />\n                </TouchableOpacity>\n                {showOrdersDateTime && (\n                  <DateTimePicker\n                    value={\n                      dateTimeMode === 'date'\n                        ? ordersLimitDate\n                        : ordersLimitTime\n                    }\n                    mode={dateTimeMode}\n                    is24Hour\n                    display=\"default\"\n                    minimumDate={dateTimeMode === 'date' ? new Date() : null}\n                    maximumDate={dateTimeMode === 'date' ? deliveryDate : null}\n                    onChange={onOrdersDateTimeChange}\n                  />\n                )}\n                <Spacer />\n                <View style={styles.textAreaContainer}>\n                  <TextInput\n                    {...accessibilityLabel('basketitens')}\n                    style={styles.textArea}\n                    value={baseProducts}\n                    onChangeText={setBaseProducts}\n                    onEndEditing={() =>\n                      setDeliveryInfo(\n                        deliveryDate,\n                        ordersLimitDate,\n                        ordersLimitTime,\n                        baseProducts,\n                        groupInfo?.baseProductsPrice,\n                        groupInfo?.deliveryFee\n                      )\n                    }\n                    underlineColorAndroid=\"transparent\"\n                    placeholder=\"Composição da cesta\"\n                    placeholderTextColor=\"grey\"\n                    numberOfLines={10}\n                    multiline\n                  />\n                </View>\n              </ScrollView>\n            </View>\n          </KeyboardAvoidingView>\n        </TouchableWithoutFeedback>\n      </View>\n    </View>\n  );\n};\n\nexport const createDeliveryScreenOptions = () => {\n  return {\n    headerTitle: () => (\n      <View style={styles.header}>\n        <HeaderTitle title=\"Nova Entrega\" />\n      </View>\n    ),\n    headerBackImage: () => <BackArrow />,\n    headerBackTitleVisible: false,\n    headerStyle: {\n      backgroundColor: 'transparent',\n      elevation: 0,\n      shadowOpacity: 0,\n      borderBottomWidth: 0,\n    },\n  };\n};\n\nconst styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    marginTop: 4,\n    borderTopLeftRadius: 20,\n    borderTopRightRadius: 20,\n    backgroundColor: '#F0F5F9',\n    shadowColor: 'black',\n    shadowOpacity: 0.26,\n    shadowOffset: { width: 0, height: 2 },\n    shadowRadius: 8,\n    elevation: 25,\n  },\n  container: {\n    flex: 1,\n    margin: 10,\n  },\n  text: {\n    color: '#101010',\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n  textAreaContainer: {\n    borderColor: Colors.tertiary,\n    borderWidth: 2,\n    padding: 5,\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n  },\n  textArea: {\n    fontSize: 16,\n    height: 150,\n    width: 300,\n    textAlignVertical: 'top',\n  },\n  header: {\n    alignItems: 'flex-start',\n  },\n});\n\nexport default CreateDeliveryScreen;\n"]},"metadata":{},"sourceType":"module"}