{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/bordi/projects/cestas-cooperflora-rn/src/screens/delivery/CreateExtraItemScreen.js\";\n\nimport React, { useContext, useState } from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FormInput from \"../../components/FormInput\";\nimport Button from \"../../components/Button\";\nimport Spacer from \"../../components/Spacer\";\nimport TextLink from \"../../components/TextLink\";\nimport LoadingButton from \"../../components/LoadingButton\";\nimport { Context as ProductContext } from \"../../context/ProductContext\";\nimport { formatCurrency, isNotEmpty, showAlert } from \"../../helper/HelperFunctions\";\nimport Colors from \"../../constants/Colors\";\n\nvar CreateExtraItemScreen = function CreateExtraItemScreen(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var products = route.params.products;\n  var product = route.params.product;\n  var selectedProducts = route.params.selectedProducts;\n\n  var _useContext = useContext(ProductContext),\n      state = _useContext.state,\n      createProduct = _useContext.createProduct,\n      updateProduct = _useContext.updateProduct,\n      deleteProduct = _useContext.deleteProduct;\n\n  var _useState = useState(product ? product.name : ''),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(product ? formatCurrency(product.price) : ''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      itemPrice = _useState4[0],\n      setPrice = _useState4[1];\n\n  var _useState5 = useState(product && product.availableQuantity ? product.availableQuantity.toString() : ''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      itemAvailableQuantity = _useState6[0],\n      setAvailableQuantity = _useState6[1];\n\n  var _useState7 = useState(product && product.maxOrderQuantity ? product.maxOrderQuantity.toString() : ''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      itemMaxOrderQuantity = _useState8[0],\n      setMaxOrderQuantity = _useState8[1];\n\n  var resolveIntValueOf = function resolveIntValueOf(text) {\n    var intValue = parseInt(text);\n    return isNaN(intValue) ? null : intValue;\n  };\n\n  var resolvePriceValueIfValid = function resolvePriceValueIfValid() {\n    var numericPrice = parseFloat(itemPrice.replace(',', '.'));\n\n    if (isNaN(numericPrice)) {\n      showAlert('Valor inválido para o preço.');\n      return null;\n    }\n\n    return numericPrice;\n  };\n\n  var productExists = function productExists() {\n    if (products && products.filter(function (product) {\n      return product.name.toLowerCase() === name.toLowerCase();\n    }).length) {\n      showAlert('Já existe um produto cadastrado com o mesmo nome.');\n      return true;\n    }\n\n    return false;\n  };\n\n  var createItem = function createItem() {\n    var availableQuantity = resolveIntValueOf(itemAvailableQuantity);\n    var maxOrderQuantity = resolveIntValueOf(itemMaxOrderQuantity);\n    var price = resolvePriceValueIfValid();\n\n    if (price == null || productExists()) {\n      return;\n    }\n\n    var product = {\n      name: name,\n      price: price,\n      availableQuantity: availableQuantity,\n      maxOrderQuantity: maxOrderQuantity\n    };\n    createProduct({\n      product: product\n    }).then(function () {\n      return navigation.goBack(null);\n    });\n  };\n\n  var productDidNotChange = function productDidNotChange(updatedProduct) {\n    return product.name === updatedProduct.name && product.price === updatedProduct.price && product.availableQuantity === updatedProduct.availableQuantity && product.maxOrderQuantity === updatedProduct.maxOrderQuantity;\n  };\n\n  var updateItem = function updateItem() {\n    var availableQuantity = resolveIntValueOf(itemAvailableQuantity);\n    var maxOrderQuantity = resolveIntValueOf(itemMaxOrderQuantity);\n    var price = resolvePriceValueIfValid();\n\n    if (price == null || productExists()) {\n      return;\n    }\n\n    var updatedProduct = {\n      name: name,\n      price: price,\n      availableQuantity: availableQuantity,\n      maxOrderQuantity: maxOrderQuantity\n    };\n\n    if (productDidNotChange(updatedProduct)) {\n      navigation.goBack(null);\n    } else {\n      updateProduct({\n        productId: product.id,\n        updatedProduct: updatedProduct\n      }).then(function () {\n        return navigation.goBack(null);\n      });\n    }\n  };\n\n  var removeItem = function removeItem() {\n    if (selectedProducts && selectedProducts.includes(product.id)) {\n      Alert.alert('Excluir item', 'Este item está incluído na entrega atual. Deseja excluí-lo mesmo assim?', [{\n        text: 'Cancelar',\n        style: 'cancel'\n      }, {\n        text: 'Confirmar',\n        onPress: function onPress() {\n          deleteProduct({\n            productId: product.id\n          }).then(function () {\n            return navigation.goBack(null);\n          });\n        }\n      }]);\n    } else {\n      deleteProduct({\n        productId: product.id\n      }).then(function () {\n        return navigation.goBack(null);\n      });\n    }\n  };\n\n  var renderConfirmButton = function renderConfirmButton() {\n    if (isNotEmpty(name) && isNotEmpty(itemPrice)) {\n      return product ? React.createElement(View, {\n        style: styles.buttonContainer,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 9\n        }\n      }, React.createElement(Button, {\n        id: \"updateItemButton\",\n        style: styles.button,\n        textColor: \"white\",\n        onPress: updateItem,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }\n      }, \"Atualizar item\")) : React.createElement(View, {\n        style: styles.buttonContainer,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 9\n        }\n      }, React.createElement(Button, {\n        id: \"createItemButton\",\n        style: styles.button,\n        textColor: \"white\",\n        onPress: createItem,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }\n      }, \"Criar item\"));\n    }\n\n    return null;\n  };\n\n  var renderRemoveButton = function renderRemoveButton() {\n    return product && !state.loading ? React.createElement(LoadingButton, {\n      style: styles.removeItemButton,\n      color: \"darkorange\",\n      onPress: removeItem,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 7\n      }\n    }, \"Excluir item\") : null;\n  };\n\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: Keyboard.dismiss,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 5\n    }\n  }, React.createElement(KeyboardAvoidingView, {\n    style: styles.container,\n    keyboardVerticalOffset: Platform.OS === 'ios' ? -50 : 100,\n    behavior: Platform.OS === 'ios' ? 'position' : 'height',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.titleContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 15\n    }\n  }, product ? 'Editar' : 'Novo', \" item extra\"), React.createElement(TextLink, {\n    text: \"Cancelar\",\n    onPress: function onPress() {\n      return navigation.goBack(null);\n    },\n    style: styles.cancelButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 15\n    }\n  })), React.createElement(Spacer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }\n  }), React.createElement(FormInput, {\n    id: \"name\",\n    label: \"Nome\",\n    value: name,\n    onChangeText: setName,\n    maxLength: 150,\n    returnKeyType: \"done\",\n    autoCapitalize: \"sentences\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }\n  }), React.createElement(FormInput, {\n    id: \"price\",\n    label: \"Pre\\xE7o\",\n    value: itemPrice,\n    onChangeText: setPrice,\n    returnKeyType: \"done\",\n    keyboardType: \"numeric\",\n    maxLength: 7,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }\n  }), React.createElement(FormInput, {\n    id: \"amountavailable\",\n    label: \"Quantidade dispon\\xEDvel\",\n    value: itemAvailableQuantity,\n    onChangeText: setAvailableQuantity,\n    returnKeyType: \"done\",\n    keyboardType: \"number-pad\",\n    maxLength: 7,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }\n  }), React.createElement(FormInput, {\n    id: \"amountmax\",\n    label: \"Quantidade m\\xE1xima por pedido\",\n    value: itemMaxOrderQuantity,\n    onChangeText: setMaxOrderQuantity,\n    returnKeyType: \"done\",\n    keyboardType: \"number-pad\",\n    maxLength: 7,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }\n  }), renderConfirmButton(), renderRemoveButton()))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: 7,\n    marginHorizontal: 10\n  },\n  titleContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    top: 10\n  },\n  title: {\n    color: '#101010',\n    fontSize: 20,\n    fontWeight: 'bold',\n    flex: 3,\n    marginLeft: 5\n  },\n  cancelButton: {\n    marginRight: 15\n  },\n  numericInput: {\n    width: 120\n  },\n  createItemButton: {\n    marginTop: 10\n  },\n  removeItemButton: {\n    marginTop: 20\n  },\n  buttonContainer: {\n    width: '100%'\n  },\n  button: {\n    marginTop: 5,\n    backgroundColor: Colors.secondary,\n    alignSelf: 'center'\n  }\n});\nexport default CreateExtraItemScreen;","map":{"version":3,"sources":["/home/bordi/projects/cestas-cooperflora-rn/src/screens/delivery/CreateExtraItemScreen.js"],"names":["React","useContext","useState","FormInput","Button","Spacer","TextLink","LoadingButton","Context","ProductContext","formatCurrency","isNotEmpty","showAlert","Colors","CreateExtraItemScreen","route","navigation","products","params","product","selectedProducts","state","createProduct","updateProduct","deleteProduct","name","setName","price","itemPrice","setPrice","availableQuantity","toString","itemAvailableQuantity","setAvailableQuantity","maxOrderQuantity","itemMaxOrderQuantity","setMaxOrderQuantity","resolveIntValueOf","text","intValue","parseInt","isNaN","resolvePriceValueIfValid","numericPrice","parseFloat","replace","productExists","filter","toLowerCase","length","createItem","then","goBack","productDidNotChange","updatedProduct","updateItem","productId","id","removeItem","includes","Alert","alert","style","onPress","renderConfirmButton","styles","buttonContainer","button","renderRemoveButton","loading","removeItemButton","Keyboard","dismiss","container","Platform","OS","flex","titleContainer","title","cancelButton","StyleSheet","create","marginTop","marginHorizontal","flexDirection","alignItems","top","color","fontSize","fontWeight","marginLeft","marginRight","numericInput","width","createItemButton","backgroundColor","secondary","alignSelf"],"mappings":"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","sourcesContent":["/* eslint-disable no-shadow */\nimport React, { useContext, useState } from 'react';\nimport {\n  Alert,\n  Keyboard,\n  KeyboardAvoidingView,\n  Platform,\n  ScrollView,\n  StyleSheet,\n  Text,\n  TouchableWithoutFeedback,\n  View,\n} from 'react-native';\nimport FormInput from '../../components/FormInput';\nimport Button from '../../components/Button';\nimport Spacer from '../../components/Spacer';\nimport TextLink from '../../components/TextLink';\nimport LoadingButton from '../../components/LoadingButton';\nimport { Context as ProductContext } from '../../context/ProductContext';\nimport {\n  formatCurrency,\n  isNotEmpty,\n  showAlert,\n} from '../../helper/HelperFunctions';\nimport Colors from '../../constants/Colors';\n\nconst CreateExtraItemScreen = ({ route, navigation }) => {\n  const { products } = route.params;\n  const { product } = route.params;\n  const { selectedProducts } = route.params;\n\n  const { state, createProduct, updateProduct, deleteProduct } =\n    useContext(ProductContext);\n  const [name, setName] = useState(product ? product.name : '');\n  const [itemPrice, setPrice] = useState(\n    product ? formatCurrency(product.price) : ''\n  );\n  const [itemAvailableQuantity, setAvailableQuantity] = useState(\n    product && product.availableQuantity\n      ? product.availableQuantity.toString()\n      : ''\n  );\n  const [itemMaxOrderQuantity, setMaxOrderQuantity] = useState(\n    product && product.maxOrderQuantity\n      ? product.maxOrderQuantity.toString()\n      : ''\n  );\n\n  const resolveIntValueOf = (text) => {\n    const intValue = parseInt(text);\n    return isNaN(intValue) ? null : intValue;\n  };\n\n  const resolvePriceValueIfValid = () => {\n    const numericPrice = parseFloat(itemPrice.replace(',', '.'));\n    if (isNaN(numericPrice)) {\n      showAlert('Valor inválido para o preço.');\n      return null;\n    }\n    return numericPrice;\n  };\n\n  const productExists = () => {\n    if (\n      products &&\n      products.filter(\n        (product) => product.name.toLowerCase() === name.toLowerCase()\n      ).length\n    ) {\n      showAlert('Já existe um produto cadastrado com o mesmo nome.');\n      return true;\n    }\n    return false;\n  };\n\n  const createItem = () => {\n    const availableQuantity = resolveIntValueOf(itemAvailableQuantity);\n    const maxOrderQuantity = resolveIntValueOf(itemMaxOrderQuantity);\n    const price = resolvePriceValueIfValid();\n\n    if (price == null || productExists()) {\n      return;\n    }\n\n    const product = {\n      name,\n      price,\n      availableQuantity,\n      maxOrderQuantity,\n    };\n\n    createProduct({ product }).then(() => navigation.goBack(null));\n  };\n\n  const productDidNotChange = (updatedProduct) => {\n    return (\n      product.name === updatedProduct.name &&\n      product.price === updatedProduct.price &&\n      product.availableQuantity === updatedProduct.availableQuantity &&\n      product.maxOrderQuantity === updatedProduct.maxOrderQuantity\n    );\n  };\n\n  const updateItem = () => {\n    const availableQuantity = resolveIntValueOf(itemAvailableQuantity);\n    const maxOrderQuantity = resolveIntValueOf(itemMaxOrderQuantity);\n    const price = resolvePriceValueIfValid();\n\n    if (price == null || productExists()) {\n      return;\n    }\n\n    const updatedProduct = {\n      name,\n      price,\n      availableQuantity,\n      maxOrderQuantity,\n    };\n\n    if (productDidNotChange(updatedProduct)) {\n      navigation.goBack(null);\n    } else {\n      updateProduct({ productId: product.id, updatedProduct }).then(() =>\n        navigation.goBack(null)\n      );\n    }\n  };\n\n  const removeItem = () => {\n    if (selectedProducts && selectedProducts.includes(product.id)) {\n      Alert.alert(\n        'Excluir item',\n        'Este item está incluído na entrega atual. Deseja excluí-lo mesmo assim?',\n        [\n          {\n            text: 'Cancelar',\n            style: 'cancel',\n          },\n          {\n            text: 'Confirmar',\n            onPress: () => {\n              deleteProduct({ productId: product.id }).then(() =>\n                navigation.goBack(null)\n              );\n            },\n          },\n        ]\n      );\n    } else {\n      deleteProduct({ productId: product.id }).then(() =>\n        navigation.goBack(null)\n      );\n    }\n  };\n\n  const renderConfirmButton = () => {\n    if (isNotEmpty(name) && isNotEmpty(itemPrice)) {\n      return product ? (\n        <View style={styles.buttonContainer}>\n          <Button\n            id=\"updateItemButton\"\n            style={styles.button}\n            textColor=\"white\"\n            onPress={updateItem}\n          >\n            Atualizar item\n          </Button>\n        </View>\n      ) : (\n        <View style={styles.buttonContainer}>\n          <Button\n            id=\"createItemButton\"\n            style={styles.button}\n            textColor=\"white\"\n            onPress={createItem}\n          >\n            Criar item\n          </Button>\n        </View>\n      );\n    }\n\n    return null;\n  };\n\n  const renderRemoveButton = () => {\n    return product && !state.loading ? (\n      <LoadingButton\n        style={styles.removeItemButton}\n        color=\"darkorange\"\n        onPress={removeItem}\n      >\n        Excluir item\n      </LoadingButton>\n    ) : null;\n  };\n\n  return (\n    <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\n      <KeyboardAvoidingView\n        style={styles.container}\n        keyboardVerticalOffset={Platform.OS === 'ios' ? -50 : 100}\n        behavior={Platform.OS === 'ios' ? 'position' : 'height'}\n      >\n        <View style={{ flex: 1 }}>\n          <ScrollView>\n            <View style={styles.titleContainer}>\n              <Text style={styles.title}>\n                {product ? 'Editar' : 'Novo'} item extra\n              </Text>\n              <TextLink\n                text=\"Cancelar\"\n                onPress={() => navigation.goBack(null)}\n                style={styles.cancelButton}\n              />\n            </View>\n            <Spacer />\n            <FormInput\n              id=\"name\"\n              label=\"Nome\"\n              value={name}\n              onChangeText={setName}\n              maxLength={150}\n              returnKeyType=\"done\"\n              autoCapitalize=\"sentences\"\n            />\n            <FormInput\n              id=\"price\"\n              label=\"Preço\"\n              value={itemPrice}\n              onChangeText={setPrice}\n              returnKeyType=\"done\"\n              keyboardType=\"numeric\"\n              maxLength={7}\n            />\n            <FormInput\n              id=\"amountavailable\"\n              label=\"Quantidade disponível\"\n              value={itemAvailableQuantity}\n              onChangeText={setAvailableQuantity}\n              returnKeyType=\"done\"\n              keyboardType=\"number-pad\"\n              maxLength={7}\n            />\n            <FormInput\n              id=\"amountmax\"\n              label=\"Quantidade máxima por pedido\"\n              value={itemMaxOrderQuantity}\n              onChangeText={setMaxOrderQuantity}\n              returnKeyType=\"done\"\n              keyboardType=\"number-pad\"\n              maxLength={7}\n            />\n            {renderConfirmButton()}\n            {renderRemoveButton()}\n          </ScrollView>\n        </View>\n      </KeyboardAvoidingView>\n    </TouchableWithoutFeedback>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: 7,\n    marginHorizontal: 10,\n  },\n  titleContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    top: 10,\n  },\n  title: {\n    color: '#101010',\n    fontSize: 20,\n    fontWeight: 'bold',\n    flex: 3,\n    marginLeft: 5,\n  },\n  cancelButton: {\n    marginRight: 15,\n  },\n  numericInput: {\n    width: 120,\n  },\n  createItemButton: {\n    marginTop: 10,\n  },\n  removeItemButton: {\n    marginTop: 20,\n  },\n  buttonContainer: {\n    // position: 'absolute',\n    width: '100%',\n    // bottom: 0,\n  },\n  button: {\n    marginTop: 5,\n    backgroundColor: Colors.secondary,\n    alignSelf: 'center',\n  },\n});\n\nexport default CreateExtraItemScreen;\n"]},"metadata":{},"sourceType":"module"}