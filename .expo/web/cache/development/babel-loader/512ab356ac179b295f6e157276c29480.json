{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/bordi/projects/cestas-cooperflora-rn/src/screens/PaymentsScreen.js\";\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport HeaderTitle from \"../components/HeaderTitle\";\nimport { Context as UserContext } from \"../context/UserContext\";\nimport useUser from \"../hooks/useUser\";\nimport GLOBALS from \"../Globals\";\nimport Colors from \"../constants/Colors\";\nimport { stardardScreenStyle as screen } from \"./screenstyles/ScreenStyles\";\n\nvar PaymentsScreen = function PaymentsScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      consumers = _useState4[0],\n      setConsumers = _useState4[1];\n\n  console.log('[PaymentsScreen started]');\n\n  var _useContext = useContext(UserContext),\n      fetchConsumers = _useContext.fetchConsumers;\n\n  var user = useUser();\n  useEffect(function () {\n    setIsLoading(true);\n    fetchConsumers().then(function (consumers) {\n      consumers.sort(function (a, b) {\n        return a.name > b.name ? 1 : -1;\n      });\n      setConsumers(consumers);\n      setIsLoading(false);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }, []);\n\n  if (user) {\n    console.log('[PaymentsScreen] consumer');\n\n    if (user.role === GLOBALS.USER.ROLE.CONSUMER) {\n      navigation.navigate('ConsumerPaymentsScreen', {\n        userId: user.id,\n        userRole: user.role\n      });\n    }\n  }\n\n  var handleOnConsumerSelected = function handleOnConsumerSelected(consumerId) {\n    navigation.navigate('ConsumerPaymentsScreen', {\n      userId: consumerId,\n      userRole: GLOBALS.USER.ROLE.ORGANIZER\n    });\n  };\n\n  if (isLoading) {\n    return React.createElement(View, {\n      style: styles.centered,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }, React.createElement(ActivityIndicator, {\n      size: \"large\",\n      color: Colors.primary,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return React.createElement(View, {\n    style: styles.screen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    sytle: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, React.createElement(ScrollView, {\n    style: styles.consumersContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, consumers.map(function (consumer) {\n    return React.createElement(TouchableOpacity, {\n      key: consumer.id,\n      style: styles.consumerContainer,\n      onPress: function onPress() {\n        return handleOnConsumerSelected(consumer.id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }\n    }, React.createElement(Text, {\n      style: styles.text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, consumer.name), React.createElement(Text, {\n      style: styles.text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, \"R$ \", consumer.balance.toFixed(2)));\n  }))));\n};\n\nexport var paymentsScreenOptions = function paymentsScreenOptions() {\n  return {\n    headerTitle: function headerTitle() {\n      return React.createElement(HeaderTitle, {\n        title: \"Saldo dos Consumidores(as)\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 24\n        }\n      });\n    },\n    headerLeft: function headerLeft() {\n      return null;\n    },\n    headerStyle: {\n      backgroundColor: 'transparent',\n      elevation: 0,\n      shadowOpacity: 0,\n      borderBottomWidth: 0\n    }\n  };\n};\nvar styles = StyleSheet.create({\n  screen: screen,\n  container: {\n    borderTopLeftRadius: 30,\n    borderTopRightRadius: 30,\n    shadowColor: 'black',\n    shadowOpacity: 0.26,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowRadius: 8,\n    elevation: 2\n  },\n  consumersContainer: {\n    paddingTop: 10\n  },\n  consumerContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    padding: 12,\n    borderRadius: 30,\n    marginLeft: 15,\n    marginRight: 15,\n    marginBottom: 5,\n    backgroundColor: '#F0F5F9',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 1,\n      height: 4\n    },\n    shadowOpacity: 0.87,\n    shadowRadius: 4.65,\n    elevation: 2\n  },\n  text: {\n    fontFamily: 'Roboto',\n    fontWeight: '700',\n    fontSize: 17,\n    color: 'black'\n  }\n});\nexport default PaymentsScreen;","map":{"version":3,"sources":["/home/bordi/projects/cestas-cooperflora-rn/src/screens/PaymentsScreen.js"],"names":["React","useContext","useEffect","useState","HeaderTitle","Context","UserContext","useUser","GLOBALS","Colors","stardardScreenStyle","screen","PaymentsScreen","navigation","isLoading","setIsLoading","consumers","setConsumers","console","log","fetchConsumers","user","then","sort","a","b","name","catch","error","role","USER","ROLE","CONSUMER","navigate","userId","id","userRole","handleOnConsumerSelected","consumerId","ORGANIZER","styles","centered","primary","container","consumersContainer","map","consumer","consumerContainer","text","balance","toFixed","paymentsScreenOptions","headerTitle","headerLeft","headerStyle","backgroundColor","elevation","shadowOpacity","borderBottomWidth","StyleSheet","create","borderTopLeftRadius","borderTopRightRadius","shadowColor","shadowOffset","width","height","shadowRadius","paddingTop","flexDirection","justifyContent","padding","borderRadius","marginLeft","marginRight","marginBottom","fontFamily","fontWeight","fontSize","color"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport {\n  Text,\n  StyleSheet,\n  View,\n  ScrollView,\n  ActivityIndicator,\n  TouchableOpacity,\n} from 'react-native';\nimport HeaderTitle from '../components/HeaderTitle';\nimport { Context as UserContext } from '../context/UserContext';\nimport useUser from '../hooks/useUser';\nimport GLOBALS from '../Globals';\nimport Colors from '../constants/Colors';\nimport { stardardScreenStyle as screen } from './screenstyles/ScreenStyles';\n\nconst PaymentsScreen = ({ navigation }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [consumers, setConsumers] = useState([]);\n\n  console.log('[PaymentsScreen started]');\n  const { fetchConsumers } = useContext(UserContext);\n\n  const user = useUser();\n\n  useEffect(() => {\n    setIsLoading(true);\n    fetchConsumers()\n      .then((consumers) => {\n        consumers.sort((a, b) => {\n          return a.name > b.name ? 1 : -1;\n        });\n        setConsumers(consumers);\n        setIsLoading(false);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  if (user) {\n    console.log('[PaymentsScreen] consumer');\n    if (user.role === GLOBALS.USER.ROLE.CONSUMER) {\n      navigation.navigate('ConsumerPaymentsScreen', {\n        userId: user.id,\n        userRole: user.role,\n      });\n    }\n  }\n\n  const handleOnConsumerSelected = (consumerId) => {\n    navigation.navigate('ConsumerPaymentsScreen', {\n      userId: consumerId,\n      userRole: GLOBALS.USER.ROLE.ORGANIZER,\n    });\n  };\n\n  if (isLoading) {\n    return (\n      <View style={styles.centered}>\n        <ActivityIndicator size=\"large\" color={Colors.primary} />\n      </View>\n    );\n  }\n\n  return (\n    <View style={styles.screen}>\n      <View sytle={styles.container}>\n        <ScrollView style={styles.consumersContainer}>\n          {consumers.map((consumer) => {\n            return (\n              <TouchableOpacity\n                key={consumer.id}\n                style={styles.consumerContainer}\n                onPress={() => handleOnConsumerSelected(consumer.id)}\n              >\n                <Text style={styles.text}>{consumer.name}</Text>\n                <Text style={styles.text}>\n                  R$ {consumer.balance.toFixed(2)}\n                </Text>\n              </TouchableOpacity>\n            );\n          })}\n        </ScrollView>\n      </View>\n    </View>\n  );\n};\n\nexport const paymentsScreenOptions = () => {\n  return {\n    headerTitle: () => <HeaderTitle title=\"Saldo dos Consumidores(as)\" />,\n    headerLeft: () => {\n      return null;\n    },\n    headerStyle: {\n      backgroundColor: 'transparent',\n      elevation: 0,\n      shadowOpacity: 0,\n      borderBottomWidth: 0,\n    },\n  };\n};\n\nconst styles = StyleSheet.create({\n  screen,\n  container: {\n    borderTopLeftRadius: 30,\n    borderTopRightRadius: 30,\n    shadowColor: 'black',\n    shadowOpacity: 0.26,\n    shadowOffset: { width: 0, height: 2 },\n    shadowRadius: 8,\n    elevation: 2,\n  },\n  consumersContainer: {\n    paddingTop: 10,\n  },\n  consumerContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    padding: 12,\n    borderRadius: 30,\n    marginLeft: 15,\n    marginRight: 15,\n    marginBottom: 5,\n    backgroundColor: '#F0F5F9',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 1,\n      height: 4,\n    },\n    shadowOpacity: 0.87,\n    shadowRadius: 4.65,\n    elevation: 2,\n  },\n  text: {\n    fontFamily: 'Roboto',\n    fontWeight: '700',\n    fontSize: 17,\n    color: 'black',\n  },\n});\n\nexport default PaymentsScreen;\n"]},"metadata":{},"sourceType":"module"}