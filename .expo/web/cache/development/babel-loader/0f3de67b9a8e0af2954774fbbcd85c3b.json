{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/bordi/projects/cestas-cooperflora-rn/src/screens/OrdersByConsumerScreen.js\";\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { format } from 'date-fns';\nimport { Input, ListItem } from 'react-native-elements';\nimport { useFocusEffect } from '@react-navigation/native';\nimport GLOBALS from \"../Globals\";\nimport { Context as OrderContext } from \"../context/OrderContext\";\nimport { Context as UserContext } from \"../context/UserContext\";\nimport Spinner from \"../components/Spinner\";\nimport HeaderTitle from \"../components/HeaderTitle\";\nimport BackArrow from \"../components/BackArrow\";\nimport Colors from \"../constants/Colors\";\nimport { Context as DeliveryContext } from \"../context/DeliveryContext\";\n\nvar OrdersByConsumerScreen = function OrdersByConsumerScreen(props) {\n  var _useContext = useContext(OrderContext),\n      _useContext$state = _useContext.state,\n      orderLoading = _useContext$state.loading,\n      orders = _useContext$state.orders,\n      fetchOrdersByDelivery = _useContext.fetchOrdersByDelivery;\n\n  var _useContext2 = useContext(UserContext),\n      _useContext2$state = _useContext2.state,\n      userLoading = _useContext2$state.loading,\n      users = _useContext2$state.users,\n      fetchUsers = _useContext2.fetchUsers;\n\n  var _useContext3 = useContext(DeliveryContext),\n      _useContext3$state = _useContext3.state,\n      stateDelivery = _useContext3$state.delivery,\n      deliveryLoading = _useContext3$state.loading,\n      fetchDelivery = _useContext3.fetchDelivery;\n\n  var delivery = props.route.params ? props.route.params.delivery : null;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      usersOrders = _useState2[0],\n      setUsersOrders = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      filteredOrdersByConsumer = _useState4[0],\n      setFilteredOrdersByConsumer = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      filterText = _useState6[0],\n      setFilterText = _useState6[1];\n\n  useEffect(function () {\n    matchUsersWithOrders();\n  }, [users, orders]);\n  useFocusEffect(React.useCallback(function () {\n    if (delivery) {\n      fetchDelivery(delivery.id).then(function (deliveryFound) {\n        fetchOrdersByDelivery(deliveryFound.id);\n        fetchUsers();\n        props.navigation.setParams({\n          deliveryDate: format(delivery.deliveryDate, GLOBALS.FORMAT.DD_MM)\n        });\n      });\n    } else {\n      console.log('delivery ainda não existe');\n    }\n  }, []));\n\n  var resolveUserOrderItemSubtitle = function resolveUserOrderItemSubtitle(order) {\n    var hasBaseProducts = order.baseProducts != null && order.baseProducts > 0;\n    var hasExtraProducts = order.extraProducts != null && order.extraProducts.length > 0;\n\n    if (hasBaseProducts && !hasExtraProducts) {\n      return \"Total: R$ \" + order.totalAmount + \" (Cesta)\";\n    }\n\n    if (!hasBaseProducts && hasExtraProducts) {\n      return \"Total: R$ \" + order.totalAmount + \" (Extras)\";\n    }\n\n    return \"Total: R$ \" + order.totalAmount + \" (Cesta + Extras)\";\n  };\n\n  var matchUsersWithOrders = function matchUsersWithOrders() {\n    var userOrderItems = [];\n    var userOrderItem;\n    users == null ? void 0 : users.forEach(function (user) {\n      var userOrdersResult = orders.filter(function (order) {\n        return order.userId === user.id;\n      });\n      var userOrder = userOrdersResult.length > 0 ? userOrdersResult[0] : null;\n\n      if (userOrder && userOrder.totalAmount > 0) {\n        userOrderItem = {\n          userId: user.id,\n          userName: user.name,\n          orderId: userOrder.id,\n          orderStatus: userOrder.status,\n          subtitle: resolveUserOrderItemSubtitle(userOrder)\n        };\n      } else {\n        userOrderItem = {\n          userId: user.id,\n          userName: user.name,\n          subtitle: 'Pedido não realizado para esta entrega'\n        };\n      }\n\n      userOrderItems.push(userOrderItem);\n    });\n    userOrderItems.sort(function (a, b) {\n      if (a.orderId != null && b.orderId == null) {\n        return -1;\n      }\n\n      if (a.orderId == null && b.orderId != null) {\n        return 1;\n      }\n\n      return a.userName.toLowerCase() < b.userName.toLowerCase() ? -1 : 1;\n    });\n    setUsersOrders(userOrderItems);\n  };\n\n  var renderSearchIcon = function renderSearchIcon() {\n    return !filterText.length ? {\n      type: 'ionicons',\n      name: 'search',\n      size: 25,\n      color: 'lightgrey'\n    } : {\n      type: 'material',\n      name: 'clear',\n      size: 25,\n      color: 'lightgrey',\n      onPress: function onPress() {\n        setFilterText('');\n        setFilteredOrdersByConsumer([]);\n      }\n    };\n  };\n\n  var searchConsumersByFilter = function searchConsumersByFilter() {\n    setFilteredOrdersByConsumer(usersOrders.filter(function (order) {\n      return order.userName.toLowerCase().includes(filterText.toLowerCase());\n    }));\n  };\n\n  var renderItem = function renderItem(_ref) {\n    var userOrderItem = _ref.item;\n    return React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return props.navigation.navigate('ConsumerOrderScreen', {\n          user: {\n            id: userOrderItem.userId,\n            name: userOrderItem.userName\n          },\n          delivery: stateDelivery\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: styles.itemContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }\n    }, React.createElement(ListItem, {\n      containerStyle: styles.listItemContainer,\n      title: \"\" + userOrderItem.userName,\n      titleStyle: styles.listItemTitle,\n      subtitle: \"\" + userOrderItem.subtitle,\n      rightSubtitle: userOrderItem.orderStatus && userOrderItem.orderStatus === GLOBALS.ORDER.STATUS.COMPLETED ? \"Entrega conclu\\xEDda\" : null,\n      bottomDivider: true,\n      chevron: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }\n    })));\n  };\n\n  return React.createElement(View, {\n    style: styles.screen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }\n  }, React.createElement(Input, {\n    containerStyle: styles.searchInput,\n    placeholder: \"Buscar pessoa consumidora\",\n    value: filterText,\n    onChangeText: setFilterText,\n    onEndEditing: searchConsumersByFilter,\n    returnKeyType: \"done\",\n    autoCorrect: false,\n    rightIcon: renderSearchIcon(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }\n  }), !orderLoading && !userLoading && !deliveryLoading ? React.createElement(FlatList, {\n    data: filteredOrdersByConsumer != null && filteredOrdersByConsumer.length > 0 ? filteredOrdersByConsumer : usersOrders,\n    renderItem: renderItem,\n    keyExtractor: function keyExtractor(item) {\n      return item.userId;\n    },\n    style: styles.productsList,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 11\n    }\n  }) : React.createElement(Spinner, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport var ordersManagementScreenOptions = function ordersManagementScreenOptions(props) {\n  var deliveryDate = format(props.route.params.delivery.deliveryDate, GLOBALS.FORMAT.DEFAULT_DATE);\n  return {\n    headerTitle: function headerTitle() {\n      return React.createElement(View, {\n        style: styles.header,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 7\n        }\n      }, React.createElement(HeaderTitle, {\n        title: \"Pedidos - \" + deliveryDate,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 9\n        }\n      }));\n    },\n    headerBackImage: function headerBackImage() {\n      return React.createElement(BackArrow, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 28\n        }\n      });\n    },\n    headerStyle: {\n      backgroundColor: 'transparent',\n      elevation: 0,\n      shadowOpacity: 0,\n      borderBottomWidth: 0\n    }\n  };\n};\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    marginTop: 4,\n    backgroundColor: Colors.backGroundColor,\n    borderTopLeftRadius: 20,\n    borderTopRightRadius: 20,\n    shadowColor: 'black',\n    shadowOpacity: 0.26,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowRadius: 8,\n    elevation: 25\n  },\n  container: {\n    flex: 1,\n    marginHorizontal: 15,\n    marginVertical: 5\n  },\n  text: {\n    color: '#101010',\n    fontSize: 24,\n    fontWeight: 'bold'\n  },\n  searchInput: {\n    width: 300\n  },\n  itemContainer: {\n    marginBottom: 5,\n    backgroundColor: 'white',\n    borderRadius: 25\n  },\n  productsList: {\n    marginTop: -10\n  },\n  listItemContainer: {\n    backgroundColor: 'transparent',\n    padding: 10,\n    minHeight: 60\n  },\n  listItemTitle: {\n    fontWeight: 'bold',\n    marginBottom: 5,\n    fontSize: 20\n  },\n  header: {\n    alignItems: 'flex-start'\n  }\n});\nexport default OrdersByConsumerScreen;","map":{"version":3,"sources":["/home/bordi/projects/cestas-cooperflora-rn/src/screens/OrdersByConsumerScreen.js"],"names":["React","useContext","useEffect","useState","format","Input","ListItem","useFocusEffect","GLOBALS","Context","OrderContext","UserContext","Spinner","HeaderTitle","BackArrow","Colors","DeliveryContext","OrdersByConsumerScreen","props","state","orderLoading","loading","orders","fetchOrdersByDelivery","userLoading","users","fetchUsers","stateDelivery","delivery","deliveryLoading","fetchDelivery","route","params","usersOrders","setUsersOrders","filteredOrdersByConsumer","setFilteredOrdersByConsumer","filterText","setFilterText","matchUsersWithOrders","useCallback","id","then","deliveryFound","navigation","setParams","deliveryDate","FORMAT","DD_MM","console","log","resolveUserOrderItemSubtitle","order","hasBaseProducts","baseProducts","hasExtraProducts","extraProducts","length","totalAmount","userOrderItems","userOrderItem","forEach","user","userOrdersResult","filter","userId","userOrder","userName","name","orderId","orderStatus","status","subtitle","push","sort","a","b","toLowerCase","renderSearchIcon","type","size","color","onPress","searchConsumersByFilter","includes","renderItem","item","navigate","styles","itemContainer","listItemContainer","listItemTitle","ORDER","STATUS","COMPLETED","screen","container","searchInput","productsList","ordersManagementScreenOptions","DEFAULT_DATE","headerTitle","header","headerBackImage","headerStyle","backgroundColor","elevation","shadowOpacity","borderBottomWidth","StyleSheet","create","flex","marginTop","backGroundColor","borderTopLeftRadius","borderTopRightRadius","shadowColor","shadowOffset","width","height","shadowRadius","marginHorizontal","marginVertical","text","fontSize","fontWeight","marginBottom","borderRadius","padding","minHeight","alignItems"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { FlatList, StyleSheet, TouchableOpacity, View } from 'react-native';\nimport { format } from 'date-fns';\nimport { Input, ListItem } from 'react-native-elements';\nimport { useFocusEffect } from '@react-navigation/native';\nimport GLOBALS from '../Globals';\nimport { Context as OrderContext } from '../context/OrderContext';\nimport { Context as UserContext } from '../context/UserContext';\nimport Spinner from '../components/Spinner';\nimport HeaderTitle from '../components/HeaderTitle';\nimport BackArrow from '../components/BackArrow';\nimport Colors from '../constants/Colors';\nimport { Context as DeliveryContext } from '../context/DeliveryContext';\n\nconst OrdersByConsumerScreen = (props) => {\n  const {\n    state: { loading: orderLoading, orders },\n    fetchOrdersByDelivery,\n  } = useContext(OrderContext);\n\n  const {\n    state: { loading: userLoading, users },\n    fetchUsers,\n  } = useContext(UserContext);\n\n  const {\n    state: { delivery: stateDelivery, loading: deliveryLoading },\n    fetchDelivery,\n  } = useContext(DeliveryContext);\n\n  const delivery = props.route.params ? props.route.params.delivery : null;\n\n  const [usersOrders, setUsersOrders] = useState([]);\n  const [filteredOrdersByConsumer, setFilteredOrdersByConsumer] = useState([]);\n  const [filterText, setFilterText] = useState('');\n\n  useEffect(() => {\n    matchUsersWithOrders();\n  }, [users, orders]);\n\n  useFocusEffect(\n    React.useCallback(() => {\n      if (delivery) {\n        fetchDelivery(delivery.id).then((deliveryFound) => {\n          fetchOrdersByDelivery(deliveryFound.id);\n          fetchUsers();\n          props.navigation.setParams({\n            deliveryDate: format(delivery.deliveryDate, GLOBALS.FORMAT.DD_MM),\n          });\n        });\n      } else {\n        console.log('delivery ainda não existe');\n      }\n    }, [])\n  );\n\n  const resolveUserOrderItemSubtitle = (order) => {\n    const hasBaseProducts =\n      order.baseProducts != null && order.baseProducts > 0;\n    const hasExtraProducts =\n      order.extraProducts != null && order.extraProducts.length > 0;\n\n    if (hasBaseProducts && !hasExtraProducts) {\n      return `Total: R$ ${order.totalAmount} (Cesta)`;\n    }\n\n    if (!hasBaseProducts && hasExtraProducts) {\n      return `Total: R$ ${order.totalAmount} (Extras)`;\n    }\n\n    return `Total: R$ ${order.totalAmount} (Cesta + Extras)`;\n  };\n\n  const matchUsersWithOrders = () => {\n    const userOrderItems = [];\n    let userOrderItem;\n    users?.forEach((user) => {\n      const userOrdersResult = orders.filter((order) => {\n        return order.userId === user.id;\n      });\n      const userOrder =\n        userOrdersResult.length > 0 ? userOrdersResult[0] : null;\n      if (userOrder && userOrder.totalAmount > 0) {\n        userOrderItem = {\n          userId: user.id,\n          userName: user.name,\n          orderId: userOrder.id,\n          orderStatus: userOrder.status,\n          subtitle: resolveUserOrderItemSubtitle(userOrder),\n        };\n      } else {\n        userOrderItem = {\n          userId: user.id,\n          userName: user.name,\n          subtitle: 'Pedido não realizado para esta entrega',\n        };\n      }\n\n      userOrderItems.push(userOrderItem);\n    });\n\n    userOrderItems.sort((a, b) => {\n      if (a.orderId != null && b.orderId == null) {\n        return -1;\n      }\n      if (a.orderId == null && b.orderId != null) {\n        return 1;\n      }\n      return a.userName.toLowerCase() < b.userName.toLowerCase() ? -1 : 1;\n    });\n    setUsersOrders(userOrderItems);\n  };\n\n  const renderSearchIcon = () => {\n    return !filterText.length\n      ? {\n          type: 'ionicons',\n          name: 'search',\n          size: 25,\n          color: 'lightgrey',\n        }\n      : {\n          type: 'material',\n          name: 'clear',\n          size: 25,\n          color: 'lightgrey',\n          onPress: () => {\n            setFilterText('');\n            setFilteredOrdersByConsumer([]);\n          },\n        };\n  };\n\n  const searchConsumersByFilter = () => {\n    setFilteredOrdersByConsumer(\n      usersOrders.filter((order) =>\n        order.userName.toLowerCase().includes(filterText.toLowerCase())\n      )\n    );\n  };\n\n  const renderItem = ({ item: userOrderItem }) => {\n    return (\n      <TouchableOpacity\n        onPress={() =>\n          props.navigation.navigate('ConsumerOrderScreen', {\n            user: { id: userOrderItem.userId, name: userOrderItem.userName },\n            delivery: stateDelivery,\n          })\n        }\n      >\n        <View style={styles.itemContainer}>\n          <ListItem\n            containerStyle={styles.listItemContainer}\n            title={`${userOrderItem.userName}`}\n            titleStyle={styles.listItemTitle}\n            subtitle={`${userOrderItem.subtitle}`}\n            rightSubtitle={\n              userOrderItem.orderStatus &&\n              userOrderItem.orderStatus === GLOBALS.ORDER.STATUS.COMPLETED\n                ? `Entrega concluída`\n                : null\n            }\n            bottomDivider\n            chevron\n          />\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  return (\n    <View style={styles.screen}>\n      <View style={styles.container}>\n        <Input\n          containerStyle={styles.searchInput}\n          placeholder=\"Buscar pessoa consumidora\"\n          value={filterText}\n          onChangeText={setFilterText}\n          onEndEditing={searchConsumersByFilter}\n          returnKeyType=\"done\"\n          autoCorrect={false}\n          rightIcon={renderSearchIcon()}\n        />\n        {!orderLoading && !userLoading && !deliveryLoading ? (\n          <FlatList\n            data={\n              filteredOrdersByConsumer != null &&\n              filteredOrdersByConsumer.length > 0\n                ? filteredOrdersByConsumer\n                : usersOrders\n            }\n            renderItem={renderItem}\n            keyExtractor={(item) => item.userId}\n            style={styles.productsList}\n          />\n        ) : (\n          <Spinner />\n        )}\n      </View>\n    </View>\n  );\n};\n\nexport const ordersManagementScreenOptions = (props) => {\n  const deliveryDate = format(\n    props.route.params.delivery.deliveryDate,\n    GLOBALS.FORMAT.DEFAULT_DATE\n  );\n  return {\n    headerTitle: () => (\n      <View style={styles.header}>\n        <HeaderTitle title={`Pedidos - ${deliveryDate}`} />\n      </View>\n    ),\n    headerBackImage: () => <BackArrow />,\n    headerStyle: {\n      backgroundColor: 'transparent',\n      elevation: 0,\n      shadowOpacity: 0,\n      borderBottomWidth: 0,\n    },\n  };\n};\n\nconst styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    marginTop: 4,\n    backgroundColor: Colors.backGroundColor,\n    borderTopLeftRadius: 20,\n    borderTopRightRadius: 20,\n    shadowColor: 'black',\n    shadowOpacity: 0.26,\n    shadowOffset: { width: 0, height: 2 },\n    shadowRadius: 8,\n    elevation: 25,\n  },\n  container: {\n    flex: 1,\n    marginHorizontal: 15,\n    marginVertical: 5,\n  },\n  text: {\n    color: '#101010',\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n  searchInput: {\n    width: 300,\n  },\n  itemContainer: {\n    marginBottom: 5,\n    // flexDirection: 'row',\n    backgroundColor: 'white',\n    borderRadius: 25,\n  },\n  productsList: {\n    marginTop: -10,\n  },\n  listItemContainer: {\n    backgroundColor: 'transparent',\n    padding: 10,\n    minHeight: 60,\n  },\n  listItemTitle: {\n    fontWeight: 'bold',\n    marginBottom: 5,\n    fontSize: 20,\n  },\n  header: {\n    alignItems: 'flex-start',\n  },\n});\n\nexport default OrdersByConsumerScreen;\n"]},"metadata":{},"sourceType":"module"}