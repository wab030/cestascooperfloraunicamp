{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/bordi/projects/cestas-cooperflora-rn/src/components/LoadingButton.js\";\n\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Spinner from \"./Spinner\";\n\nvar LoadingButton = function LoadingButton(_ref) {\n  var onPress = _ref.onPress,\n      children = _ref.children,\n      style = _ref.style,\n      color = _ref.color,\n      loading = _ref.loading;\n  var button = styles.button,\n      text = styles.text;\n  return loading ? React.createElement(Spinner, {\n    onLayout: Keyboard.dismiss,\n    size: \"small\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }) : React.createElement(TouchableOpacity, {\n    onPress: onPress,\n    style: [button, style, color ? {\n      borderColor: color\n    } : {\n      borderColor: 'darkolivegreen'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: [text, color ? {\n      color: color\n    } : {\n      color: 'darkolivegreen'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, children));\n};\n\nvar styles = StyleSheet.create({\n  text: {\n    alignSelf: 'center',\n    fontSize: 16,\n    fontWeight: '600',\n    paddingTop: 10,\n    paddingBottom: 10\n  },\n  button: {\n    alignSelf: 'stretch',\n    borderRadius: 5,\n    borderWidth: 1,\n    borderColor: 'darkolivegreen',\n    marginLeft: 5,\n    marginRight: 5\n  }\n});\nexport default LoadingButton;","map":{"version":3,"sources":["/home/bordi/projects/cestas-cooperflora-rn/src/components/LoadingButton.js"],"names":["React","Spinner","LoadingButton","onPress","children","style","color","loading","button","styles","text","Keyboard","dismiss","borderColor","StyleSheet","create","alignSelf","fontSize","fontWeight","paddingTop","paddingBottom","borderRadius","borderWidth","marginLeft","marginRight"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,OAAOC,OAAP;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAkD;AAAA,MAA/CC,OAA+C,QAA/CA,OAA+C;AAAA,MAAtCC,QAAsC,QAAtCA,QAAsC;AAAA,MAA5BC,KAA4B,QAA5BA,KAA4B;AAAA,MAArBC,KAAqB,QAArBA,KAAqB;AAAA,MAAdC,OAAc,QAAdA,OAAc;AACtE,MAAQC,MAAR,GAAyBC,MAAzB,CAAQD,MAAR;AAAA,MAAgBE,IAAhB,GAAyBD,MAAzB,CAAgBC,IAAhB;AAEA,SAAOH,OAAO,GACZ,oBAAC,OAAD;AAAS,IAAA,QAAQ,EAAEI,QAAQ,CAACC,OAA5B;AAAqC,IAAA,IAAI,EAAC,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADY,GAGZ,oBAAC,gBAAD;AACE,IAAA,OAAO,EAAET,OADX;AAEE,IAAA,KAAK,EAAE,CACLK,MADK,EAELH,KAFK,EAGLC,KAAK,GAAG;AAAEO,MAAAA,WAAW,EAAEP;AAAf,KAAH,GAA4B;AAAEO,MAAAA,WAAW,EAAE;AAAf,KAH5B,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE,CAACH,IAAD,EAAOJ,KAAK,GAAG;AAAEA,MAAAA,KAAK,EAAEA;AAAT,KAAH,GAAsB;AAAEA,MAAAA,KAAK,EAAE;AAAT,KAAlC,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGF,QAHH,CARF,CAHF;AAkBD,CArBD;;AAuBA,IAAMK,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BL,EAAAA,IAAI,EAAE;AACJM,IAAAA,SAAS,EAAE,QADP;AAGJC,IAAAA,QAAQ,EAAE,EAHN;AAIJC,IAAAA,UAAU,EAAE,KAJR;AAKJC,IAAAA,UAAU,EAAE,EALR;AAMJC,IAAAA,aAAa,EAAE;AANX,GADyB;AAS/BZ,EAAAA,MAAM,EAAE;AACNQ,IAAAA,SAAS,EAAE,SADL;AAENK,IAAAA,YAAY,EAAE,CAFR;AAGNC,IAAAA,WAAW,EAAE,CAHP;AAINT,IAAAA,WAAW,EAAE,gBAJP;AAKNU,IAAAA,UAAU,EAAE,CALN;AAMNC,IAAAA,WAAW,EAAE;AANP;AATuB,CAAlB,CAAf;AAmBA,eAAetB,aAAf","sourcesContent":["import React from 'react';\nimport { Text, TouchableOpacity, StyleSheet, Keyboard } from 'react-native';\nimport Spinner from './Spinner';\n\nconst LoadingButton = ({ onPress, children, style, color, loading }) => {\n  const { button, text } = styles;\n\n  return loading ? (\n    <Spinner onLayout={Keyboard.dismiss} size=\"small\" />\n  ) : (\n    <TouchableOpacity\n      onPress={onPress}\n      style={[\n        button,\n        style,\n        color ? { borderColor: color } : { borderColor: 'darkolivegreen' },\n      ]}\n    >\n      <Text\n        style={[text, color ? { color: color } : { color: 'darkolivegreen' }]}\n      >\n        {children}\n      </Text>\n    </TouchableOpacity>\n  );\n};\n\nconst styles = StyleSheet.create({\n  text: {\n    alignSelf: 'center',\n    // color: 'darkolivegreen',\n    fontSize: 16,\n    fontWeight: '600',\n    paddingTop: 10,\n    paddingBottom: 10,\n  },\n  button: {\n    alignSelf: 'stretch',\n    borderRadius: 5,\n    borderWidth: 1,\n    borderColor: 'darkolivegreen',\n    marginLeft: 5,\n    marginRight: 5,\n  },\n});\n\nexport default LoadingButton;\n"]},"metadata":{},"sourceType":"module"}