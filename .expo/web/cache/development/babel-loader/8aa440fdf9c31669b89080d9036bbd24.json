{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/bordi/projects/cestas-cooperflora-rn/src/screens/SigninScreen.js\";\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Text } from 'react-native-elements';\nimport { Feather } from '@expo/vector-icons';\nimport Spinner from \"../components/Spinner\";\nimport Button from \"../components/Button\";\nimport Input from \"../components/Input\";\nimport { Context as AuthContext } from \"../context/AuthContext\";\nimport PasswordInput from \"../components/PasswordInput\";\nimport TextLink from \"../components/TextLink\";\nimport BasketProductsImage from \"../../assets/images/basketproducts3.png\";\nimport MstFlag from \"../../assets/images/bandeiradomst.png\";\nimport Colors from \"../constants/Colors\";\nimport Globals from \"../Globals\";\n\nvar SigninScreen = function SigninScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(AuthContext),\n      state = _useContext.state,\n      signin = _useContext.signin,\n      checkAuthOrUser = _useContext.checkAuthOrUser,\n      clearUserInfo = _useContext.clearUserInfo,\n      clearError = _useContext.clearError;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      passwordConfirmation = _useState6[0],\n      setPasswordConfirmation = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isKeyboardVisible = _useState8[0],\n      setKeyboardVisible = _useState8[1];\n\n  var _useState9 = useState(true),\n      _useState10 = _slicedToArray(_useState9, 2),\n      secureTextEntry = _useState10[0],\n      setSecureTextEntry = _useState10[1];\n\n  useEffect(function () {\n    var keyboardDidShowListener = Keyboard.addListener('keyboardDidShow', function () {\n      setKeyboardVisible(true);\n    });\n    var keyboardDidHideListener = Keyboard.addListener('keyboardDidHide', function () {\n      setKeyboardVisible(false);\n    });\n    return function () {\n      keyboardDidHideListener.remove();\n      keyboardDidShowListener.remove();\n    };\n  }, []);\n\n  var renderLoginButton = function renderLoginButton() {\n    if (state.loading) {\n      return React.createElement(Spinner, {\n        onLayout: Keyboard.dismiss,\n        size: \"small\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 14\n        }\n      });\n    }\n\n    var userId = state.userId;\n    return React.createElement(View, {\n      style: styles.buttonContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, React.createElement(Button, {\n      id: \"enterLoginButton\",\n      style: styles.button,\n      textColor: \"white\",\n      onPress: function onPress() {\n        signin({\n          email: email,\n          password: password,\n          passwordConfirmation: passwordConfirmation,\n          userId: userId\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, \"Entrar\"));\n  };\n\n  var renderNextButton = function renderNextButton() {\n    if (!state.authorized && !state.userId) {\n      return state.loading ? React.createElement(Spinner, {\n        onLayout: Keyboard.dismiss,\n        size: \"small\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }\n      }) : React.createElement(View, {\n        style: styles.buttonContainer,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }\n      }, React.createElement(Button, {\n        id: \"loginButton\",\n        style: styles.button,\n        textColor: \"white\",\n        onPress: function onPress() {\n          return checkAuthOrUser({\n            email: email\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }\n      }, \"Avan\\xE7ar\"));\n    }\n  };\n\n  var renderPasswordForm = function renderPasswordForm() {\n    if (state.authorized || state.userId) {\n      return React.createElement(React.Fragment, null, state.userId ? React.createElement(View, {\n        style: styles.passwordsContainer,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.newPasswordContainer,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }\n      }, React.createElement(View, {\n        style: styles.passwordContainer,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }\n      }, React.createElement(PasswordInput, {\n        id: \"password\",\n        label: \"Senha:\",\n        value: password,\n        onChangeText: function onChangeText(pass) {\n          setPassword(pass);\n\n          if (state.errorMessage) {\n            clearError();\n          }\n        },\n        autoFocus: true,\n        secureTextEntry: secureTextEntry,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 19\n        }\n      }), React.createElement(View, {\n        style: styles.iconContainer,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 19\n        }\n      }, React.createElement(Feather, {\n        name: secureTextEntry ? 'eye-off' : 'eye',\n        size: 24,\n        color: Colors.primary,\n        onPress: function onPress() {\n          return setSecureTextEntry(!secureTextEntry);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }\n      })))), React.createElement(PasswordInput, {\n        id: \"confirmpassword\",\n        style: {\n          borderBottomColor: 'black',\n          borderBottomWidth: 1,\n          width: 305,\n          alignSelf: 'center'\n        },\n        label: \"Confimar senha:\",\n        value: passwordConfirmation,\n        onChangeText: function onChangeText(passwordConfirmation) {\n          setPasswordConfirmation(passwordConfirmation);\n\n          if (state.errorMessage) {\n            clearError();\n          }\n        },\n        secureTextEntry: secureTextEntry,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 15\n        }\n      })) : React.createElement(View, {\n        style: styles.passwordContainer,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }\n      }, React.createElement(PasswordInput, {\n        label: \"Senha:\",\n        value: password,\n        secureTextEntry: secureTextEntry,\n        onChangeText: function onChangeText(pass) {\n          setPassword(pass);\n\n          if (state.errorMessage) {\n            clearError();\n          }\n        },\n        autoFocus: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 15\n        }\n      }), React.createElement(View, {\n        style: styles.iconContainer,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 15\n        }\n      }, React.createElement(Feather, {\n        name: secureTextEntry ? 'eye-off' : 'eye',\n        size: 24,\n        color: Colors.primary,\n        onPress: function onPress() {\n          return setSecureTextEntry(!secureTextEntry);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 17\n        }\n      }))), React.createElement(View, {\n        style: styles.divider,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }\n      }), renderLoginButton());\n    }\n  };\n\n  return React.createElement(View, {\n    style: styles.screen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.header,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.textTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 11\n    }\n  }, \"Cestas Cooperflora\"), React.createElement(Image, {\n    style: styles.image,\n    source: BasketProductsImage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.emailInputContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 11\n    }\n  }, React.createElement(Input, {\n    label: \"E-mail:\",\n    value: email,\n    onChangeText: function onChangeText(email) {\n      setEmail(email);\n\n      if (state.userId || state.authorized) {\n        clearUserInfo();\n      }\n\n      if (state.errorMessage) {\n        clearError();\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.divider,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }\n  })), renderNextButton(), renderPasswordForm(), state.authorized ? React.createElement(TextLink, {\n    style: styles.forgotPasswordLink,\n    text: \"Esqueceu sua senha?\",\n    size: 16,\n    onPress: function onPress() {\n      return navigation.navigate('ForgotPassword', {\n        email: email\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }\n  }) : null), state.errorMessage ? React.createElement(Text, {\n    style: styles.errorMessage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 11\n    }\n  }, state.errorMessage) : null, React.createElement(View, {\n    style: styles.textContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.descriptionText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 11\n    }\n  }, Globals.APP.INITIALSCREEN_TEXT)), React.createElement(View, {\n    style: styles.flagContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    style: styles.flagImage,\n    source: MstFlag,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport var signinScreenOptions = function signinScreenOptions() {\n  return {\n    headerShown: false\n  };\n};\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    backgroundColor: 'white',\n    borderTopLeftRadius: 20,\n    borderTopRightRadius: 20,\n    shadowColor: 'black',\n    shadowOpacity: 0.26,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowRadius: 8,\n    elevation: 25\n  },\n  container: {\n    flex: 1,\n    marginTop: 30\n  },\n  textTitle: {\n    fontSize: 35,\n    color: '#2D6535',\n    fontWeight: 'bold',\n    right: '-48%',\n    textAlign: 'right',\n    width: '50%'\n  },\n  image: {\n    marginLeft: 5,\n    marginTop: -30,\n    width: 250\n  },\n  title: {\n    fontSize: 30,\n    bottom: 40,\n    textAlign: 'center'\n  },\n  emailInputContainer: {\n    height: 50\n  },\n  passwordsContainer: {\n    height: 80\n  },\n  passwordContainer: {\n    flexDirection: 'row',\n    marginRight: 40,\n    height: 50\n  },\n  newPasswordContainer: {\n    margin: 0\n  },\n  divider: {\n    borderBottomColor: '#8898AA',\n    borderBottomWidth: 1,\n    width: '80%',\n    alignSelf: 'center'\n  },\n  buttonContainer: {\n    width: '100%'\n  },\n  button: {\n    marginTop: 5,\n    backgroundColor: Colors.primary,\n    alignSelf: 'center'\n  },\n  textContainer: {\n    margin: 20\n  },\n  descriptionText: {\n    fontSize: 20,\n    color: '#8898AA',\n    textAlign: 'center',\n    fontWeight: 'bold'\n  },\n  smallTitle: {\n    fontSize: 20,\n    bottom: 20,\n    textAlign: 'center'\n  },\n  errorMessage: {\n    fontSize: 16,\n    color: 'red',\n    marginLeft: 15,\n    marginTop: 15\n  },\n  forgotPasswordLink: {\n    color: '#8898AA',\n    fontSize: 58,\n    padding: 9,\n    marginLeft: 20\n  },\n  flagContainer: {\n    flex: 1,\n    alignContent: 'center',\n    justifyContent: 'center',\n    width: '50%',\n    alignSelf: 'center'\n  },\n  flagImage: {\n    flex: 1,\n    width: null,\n    height: null,\n    resizeMode: 'contain'\n  },\n  iconContainer: {\n    marginRight: 10,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\nexport default SigninScreen;","map":{"version":3,"sources":["/home/bordi/projects/cestas-cooperflora-rn/src/screens/SigninScreen.js"],"names":["React","useContext","useEffect","useState","Text","Feather","Spinner","Button","Input","Context","AuthContext","PasswordInput","TextLink","BasketProductsImage","MstFlag","Colors","Globals","SigninScreen","navigation","state","signin","checkAuthOrUser","clearUserInfo","clearError","email","setEmail","password","setPassword","passwordConfirmation","setPasswordConfirmation","isKeyboardVisible","setKeyboardVisible","secureTextEntry","setSecureTextEntry","keyboardDidShowListener","Keyboard","addListener","keyboardDidHideListener","remove","renderLoginButton","loading","dismiss","userId","styles","buttonContainer","button","renderNextButton","authorized","renderPasswordForm","passwordsContainer","newPasswordContainer","passwordContainer","pass","errorMessage","iconContainer","primary","borderBottomColor","borderBottomWidth","width","alignSelf","divider","screen","container","header","textTitle","image","emailInputContainer","forgotPasswordLink","navigate","textContainer","descriptionText","APP","INITIALSCREEN_TEXT","flagContainer","flagImage","signinScreenOptions","headerShown","StyleSheet","create","flex","backgroundColor","borderTopLeftRadius","borderTopRightRadius","shadowColor","shadowOpacity","shadowOffset","height","shadowRadius","elevation","marginTop","fontSize","color","fontWeight","right","textAlign","marginLeft","title","bottom","flexDirection","marginRight","margin","smallTitle","padding","alignContent","justifyContent","resizeMode","alignItems"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { Keyboard, StyleSheet, Image, View } from 'react-native';\nimport { Text } from 'react-native-elements';\nimport { Feather } from '@expo/vector-icons';\nimport Spinner from '../components/Spinner';\nimport Button from '../components/Button';\nimport Input from '../components/Input';\nimport { Context as AuthContext } from '../context/AuthContext';\nimport PasswordInput from '../components/PasswordInput';\nimport TextLink from '../components/TextLink';\nimport BasketProductsImage from '../../assets/images/basketproducts3.png';\nimport MstFlag from '../../assets/images/bandeiradomst.png';\nimport Colors from '../constants/Colors';\nimport Globals from '../Globals';\n\nconst SigninScreen = ({ navigation }) => {\n  const { state, signin, checkAuthOrUser, clearUserInfo, clearError } =\n    useContext(AuthContext);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordConfirmation, setPasswordConfirmation] = useState('');\n  const [isKeyboardVisible, setKeyboardVisible] = useState(false);\n  const [secureTextEntry, setSecureTextEntry] = useState(true);\n\n  useEffect(() => {\n    const keyboardDidShowListener = Keyboard.addListener(\n      'keyboardDidShow',\n      () => {\n        setKeyboardVisible(true); // or some other action\n      }\n    );\n    const keyboardDidHideListener = Keyboard.addListener(\n      'keyboardDidHide',\n      () => {\n        setKeyboardVisible(false); // or some other action\n      }\n    );\n\n    return () => {\n      keyboardDidHideListener.remove();\n      keyboardDidShowListener.remove();\n    };\n  }, []);\n\n  const renderLoginButton = () => {\n    if (state.loading) {\n      return <Spinner onLayout={Keyboard.dismiss} size=\"small\" />;\n    }\n    const { userId } = state;\n    return (\n      <View style={styles.buttonContainer}>\n        <Button\n          id=\"enterLoginButton\"\n          style={styles.button}\n          textColor=\"white\"\n          onPress={() => {\n            // Keyboard.dismiss();\n            signin({ email, password, passwordConfirmation, userId });\n          }}\n        >\n          Entrar\n        </Button>\n      </View>\n    );\n  };\n\n  const renderNextButton = () => {\n    if (!state.authorized && !state.userId) {\n      return state.loading ? (\n        <Spinner onLayout={Keyboard.dismiss} size=\"small\" />\n      ) : (\n        <View style={styles.buttonContainer}>\n          <Button\n            id=\"loginButton\"\n            style={styles.button}\n            textColor=\"white\"\n            onPress={() => checkAuthOrUser({ email })}\n          >\n            Avançar\n          </Button>\n        </View>\n      );\n    }\n  };\n\n  const renderPasswordForm = () => {\n    if (state.authorized || state.userId) {\n      // const styleForMultiplePasswordInput = {\n      //   label: { flex: 1 },\n      //   input: { flex: 1 },\n      // };\n\n      return (\n        <>\n          {state.userId ? (\n            <View style={styles.passwordsContainer}>\n              {/* <Text>Cadastre sua senha:</Text> */}\n              <View style={styles.newPasswordContainer}>\n                <View style={styles.passwordContainer}>\n                  <PasswordInput\n                    id=\"password\"\n                    label=\"Senha:\"\n                    value={password}\n                    onChangeText={(pass) => {\n                      setPassword(pass);\n                      if (state.errorMessage) {\n                        clearError();\n                      }\n                    }}\n                    autoFocus\n                    secureTextEntry={secureTextEntry}\n                  />\n                  <View style={styles.iconContainer}>\n                    <Feather\n                      name={secureTextEntry ? 'eye-off' : 'eye'}\n                      size={24}\n                      color={Colors.primary}\n                      onPress={() => setSecureTextEntry(!secureTextEntry)}\n                    />\n                  </View>\n                </View>\n              </View>\n              <PasswordInput\n                id=\"confirmpassword\"\n                style={{\n                  borderBottomColor: 'black',\n                  borderBottomWidth: 1,\n                  width: 305,\n                  alignSelf: 'center',\n                }}\n                label=\"Confimar senha:\"\n                value={passwordConfirmation}\n                // eslint-disable-next-line no-shadow\n                onChangeText={(passwordConfirmation) => {\n                  setPasswordConfirmation(passwordConfirmation);\n                  if (state.errorMessage) {\n                    clearError();\n                  }\n                }}\n                secureTextEntry={secureTextEntry}\n              />\n            </View>\n          ) : (\n            <View style={styles.passwordContainer}>\n              <PasswordInput\n                label=\"Senha:\"\n                value={password}\n                secureTextEntry={secureTextEntry}\n                onChangeText={(pass) => {\n                  setPassword(pass);\n                  if (state.errorMessage) {\n                    clearError();\n                  }\n                }}\n                autoFocus\n              />\n              <View style={styles.iconContainer}>\n                <Feather\n                  name={secureTextEntry ? 'eye-off' : 'eye'}\n                  size={24}\n                  color={Colors.primary}\n                  onPress={() => setSecureTextEntry(!secureTextEntry)}\n                />\n              </View>\n            </View>\n          )}\n          <View style={styles.divider} />\n          {renderLoginButton()}\n        </>\n      );\n    }\n  };\n\n  return (\n    <View style={styles.screen}>\n      <View style={styles.container}>\n        <View style={styles.header}>\n          <Text style={styles.textTitle}>Cestas Cooperflora</Text>\n          <Image style={styles.image} source={BasketProductsImage} />\n        </View>\n        <View>\n          <View style={styles.emailInputContainer}>\n            <Input\n              label=\"E-mail:\"\n              value={email}\n              onChangeText={(email) => {\n                setEmail(email);\n                if (state.userId || state.authorized) {\n                  clearUserInfo();\n                }\n                if (state.errorMessage) {\n                  clearError();\n                }\n              }}\n            />\n            <View style={styles.divider} />\n          </View>\n          {renderNextButton()}\n          {renderPasswordForm()}\n          {state.authorized ? (\n            <TextLink\n              style={styles.forgotPasswordLink}\n              text=\"Esqueceu sua senha?\"\n              size={16}\n              onPress={() => navigation.navigate('ForgotPassword', { email })}\n            />\n          ) : null}\n        </View>\n        {state.errorMessage ? (\n          <Text style={styles.errorMessage}>{state.errorMessage}</Text>\n        ) : null}\n        <View style={styles.textContainer}>\n          <Text style={styles.descriptionText}>\n            {Globals.APP.INITIALSCREEN_TEXT}\n          </Text>\n        </View>\n        <View style={styles.flagContainer}>\n          <Image style={styles.flagImage} source={MstFlag} />\n        </View>\n      </View>\n    </View>\n  );\n};\n\nexport const signinScreenOptions = () => {\n  return {\n    headerShown: false,\n  };\n};\n\nconst styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    backgroundColor: 'white',\n    borderTopLeftRadius: 20,\n    borderTopRightRadius: 20,\n    shadowColor: 'black',\n    shadowOpacity: 0.26,\n    shadowOffset: { width: 0, height: 2 },\n    shadowRadius: 8,\n    elevation: 25,\n  },\n  container: {\n    flex: 1,\n    marginTop: 30,\n  },\n  textTitle: {\n    fontSize: 35,\n    color: '#2D6535',\n    fontWeight: 'bold',\n    right: '-48%',\n    textAlign: 'right',\n    width: '50%',\n  },\n  image: {\n    marginLeft: 5,\n    marginTop: -30,\n    width: 250,\n  },\n  title: {\n    fontSize: 30,\n    bottom: 40,\n    textAlign: 'center',\n  },\n  emailInputContainer: {\n    height: 50,\n  },\n  passwordsContainer: {\n    height: 80,\n  },\n  passwordContainer: {\n    flexDirection: 'row',\n    marginRight: 40,\n    height: 50,\n  },\n  newPasswordContainer: {\n    margin: 0,\n  },\n  divider: {\n    borderBottomColor: '#8898AA',\n    borderBottomWidth: 1,\n    width: '80%',\n    alignSelf: 'center',\n  },\n\n  buttonContainer: {\n    width: '100%',\n  },\n  button: {\n    marginTop: 5,\n    backgroundColor: Colors.primary,\n    alignSelf: 'center',\n  },\n\n  textContainer: {\n    margin: 20,\n  },\n  descriptionText: {\n    fontSize: 20,\n    color: '#8898AA',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  smallTitle: {\n    fontSize: 20,\n    bottom: 20,\n    textAlign: 'center',\n  },\n  errorMessage: {\n    fontSize: 16,\n    color: 'red',\n    marginLeft: 15,\n    marginTop: 15,\n  },\n  forgotPasswordLink: {\n    color: '#8898AA',\n    fontSize: 58,\n    padding: 9,\n    marginLeft: 20,\n  },\n  flagContainer: {\n    flex: 1,\n    alignContent: 'center',\n    justifyContent: 'center',\n    width: '50%',\n    alignSelf: 'center',\n  },\n  flagImage: {\n    flex: 1,\n    width: null,\n    height: null,\n    resizeMode: 'contain',\n  },\n  iconContainer: {\n    marginRight: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport default SigninScreen;\n"]},"metadata":{},"sourceType":"module"}