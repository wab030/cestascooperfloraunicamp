{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/bordi/projects/cestas-cooperflora-rn/src/components/ReceiptPicker.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport * as ImagePicker from 'expo-image-picker';\nimport * as DocumentPicker from 'expo-document-picker';\nimport { accessibilityLabel } from \"../utils\";\nimport CameraIcon from \"../../assets/images/icons/cameraicon.png\";\nimport RenderImageReceipt from \"./RenderImageReceipt\";\nimport RenderPdfReceipt from \"./RenderPdfReceipt\";\n\nvar ReceiptPicker = function ReceiptPicker(props) {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      pickedReceipt = _useState2[0],\n      setPickedReceipt = _useState2[1];\n\n  var launchCamera = function launchCamera() {\n    var image;\n    return _regeneratorRuntime.async(function launchCamera$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log('[ImagePicker] launchCamera');\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(ImagePicker.launchCameraAsync({\n              quality: 0.5\n            }));\n\n          case 3:\n            image = _context.sent;\n            image.type = 'image';\n            setPickedReceipt(image);\n            props.onReceiptPicker(image);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var launchImageGalery = function launchImageGalery() {\n    var options, image;\n    return _regeneratorRuntime.async(function launchImageGalery$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            console.log('[ImagePicker] launchGalery');\n            options = {\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              quality: 0.5\n            };\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync(options));\n\n          case 4:\n            image = _context2.sent;\n            image.type = 'image';\n            setPickedReceipt(image);\n            props.onReceiptPicker(image);\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var launchDocumentGalery = function launchDocumentGalery() {\n    var document;\n    return _regeneratorRuntime.async(function launchDocumentGalery$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            console.log('[DocumentPicker] launchGalery');\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(DocumentPicker.getDocumentAsync({\n              type: 'application/pdf',\n              copyToCacheDirectory: false\n            }));\n\n          case 3:\n            document = _context3.sent;\n            document.type = 'pdf';\n            setPickedReceipt(document);\n            props.onReceiptPicker(document);\n\n          case 7:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var takeReceiptHandler = function takeReceiptHandler() {\n    return _regeneratorRuntime.async(function takeReceiptHandler$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            Alert.alert('Selecione o tipo de comprovante que você vai anexar.', 'Selecionando imagem é possível tirar uma foto do comprovante.', [{\n              text: 'Imagem',\n              onPress: function onPress() {\n                Alert.alert('Selecione de onde você gostaria de carregar o comprovante.', '.', [{\n                  text: 'Câmera',\n                  onPress: function onPress() {\n                    return launchCamera();\n                  },\n                  style: 'default'\n                }, {\n                  text: 'Imagem da Galeria',\n                  onPress: function onPress() {\n                    return launchImageGalery();\n                  },\n                  style: 'default'\n                }, {\n                  text: 'Cancel',\n                  onPress: function onPress() {\n                    return console.log('Cancel Pressed');\n                  },\n                  style: 'cancel'\n                }]);\n              },\n              style: 'default'\n            }, {\n              text: 'Documento PDF',\n              onPress: function onPress() {\n                return launchDocumentGalery();\n              },\n              style: 'default'\n            }, {\n              text: 'Cancel',\n              onPress: function onPress() {\n                return console.log('Cancel Pressed');\n              },\n              style: 'cancel'\n            }]);\n\n          case 1:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var renderReceipt = function renderReceipt() {\n    if (!pickedReceipt.uri) {\n      return React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 14\n        }\n      }, \"Nenhuma Imagem Selecionada.\");\n    }\n\n    if (pickedReceipt.type === 'image') {\n      return React.createElement(RenderImageReceipt, {\n        imageUrl: pickedReceipt.uri,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 14\n        }\n      });\n    }\n\n    if (pickedReceipt.type === 'pdf') {\n      return React.createElement(RenderPdfReceipt, {\n        documentUrl: pickedReceipt.uri,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return null;\n  };\n\n  return React.createElement(View, {\n    style: styles.receiptPicker,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.buttonContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, _extends({\n    style: styles.buttonReceiptPicker,\n    onPress: takeReceiptHandler\n  }, accessibilityLabel('receiptButton'), {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.receiptText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, \"Comprovante\"), React.createElement(View, {\n    style: styles.imageIcon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, React.createElement(Image, {\n    source: CameraIcon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  })))), React.createElement(View, {\n    style: styles.receiptPreview,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, renderReceipt()));\n};\n\nvar styles = StyleSheet.create({\n  receiptPicker: {\n    alignItems: 'center'\n  },\n  buttonContainer: {\n    alignContent: 'center',\n    justifyContent: 'center',\n    marginTop: 15,\n    width: 343,\n    height: 48\n  },\n  buttonReceiptPicker: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignContent: 'center',\n    borderColor: '#8898AA',\n    borderWidth: 1,\n    width: 343,\n    height: 48,\n    borderRadius: 5\n  },\n  receiptText: {\n    alignSelf: 'flex-start',\n    color: '#8898AA',\n    fontFamily: 'Roboto',\n    fontSize: 16,\n    fontWeight: '700',\n    padding: 10\n  },\n  imageIcon: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginRight: 10\n  },\n  receiptPreview: {\n    width: '100%',\n    height: 200,\n    marginTop: 10,\n    marginBottom: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderColor: '#ccc',\n    borderWidth: 1\n  }\n});\nexport default ReceiptPicker;","map":{"version":3,"sources":["/home/bordi/projects/cestas-cooperflora-rn/src/components/ReceiptPicker.js"],"names":["React","useState","ImagePicker","DocumentPicker","accessibilityLabel","CameraIcon","RenderImageReceipt","RenderPdfReceipt","ReceiptPicker","props","pickedReceipt","setPickedReceipt","launchCamera","console","log","launchCameraAsync","quality","image","type","onReceiptPicker","launchImageGalery","options","mediaTypes","MediaTypeOptions","All","launchImageLibraryAsync","launchDocumentGalery","getDocumentAsync","copyToCacheDirectory","document","takeReceiptHandler","Alert","alert","text","onPress","style","renderReceipt","uri","styles","receiptPicker","buttonContainer","buttonReceiptPicker","receiptText","imageIcon","receiptPreview","StyleSheet","create","alignItems","alignContent","justifyContent","marginTop","width","height","flex","flexDirection","borderColor","borderWidth","borderRadius","alignSelf","color","fontFamily","fontSize","fontWeight","padding","marginRight","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {\n  View,\n  TouchableOpacity,\n  Text,\n  Image,\n  StyleSheet,\n  Alert,\n} from 'react-native';\nimport * as ImagePicker from 'expo-image-picker';\nimport * as DocumentPicker from 'expo-document-picker';\nimport { accessibilityLabel } from '../utils';\nimport CameraIcon from '../../assets/images/icons/cameraicon.png';\nimport RenderImageReceipt from './RenderImageReceipt';\nimport RenderPdfReceipt from './RenderPdfReceipt';\n\nconst ReceiptPicker = (props) => {\n  const [pickedReceipt, setPickedReceipt] = useState({});\n\n  const launchCamera = async () => {\n    console.log('[ImagePicker] launchCamera');\n    const image = await ImagePicker.launchCameraAsync({\n      // allowsEditing: true,\n      // aspect: [16, 9],\n      quality: 0.5,\n    });\n    image.type = 'image';\n    setPickedReceipt(image);\n    props.onReceiptPicker(image);\n  };\n\n  const launchImageGalery = async () => {\n    console.log('[ImagePicker] launchGalery');\n    const options = {\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\n      // allowsEditing: true,\n      // aspect: [16, 9],\n      quality: 0.5,\n    };\n    const image = await ImagePicker.launchImageLibraryAsync(options);\n    image.type = 'image';\n    setPickedReceipt(image);\n    props.onReceiptPicker(image);\n  };\n\n  const launchDocumentGalery = async () => {\n    console.log('[DocumentPicker] launchGalery');\n    const document = await DocumentPicker.getDocumentAsync({\n      type: 'application/pdf',\n      copyToCacheDirectory: false,\n    });\n    document.type = 'pdf';\n    setPickedReceipt(document);\n    props.onReceiptPicker(document);\n  };\n\n  const takeReceiptHandler = async () => {\n    Alert.alert(\n      'Selecione o tipo de comprovante que você vai anexar.',\n      'Selecionando imagem é possível tirar uma foto do comprovante.',\n      [\n        {\n          text: 'Imagem',\n          onPress: () => {\n            Alert.alert(\n              'Selecione de onde você gostaria de carregar o comprovante.',\n              '.',\n              [\n                {\n                  text: 'Câmera',\n                  onPress: () => launchCamera(),\n                  style: 'default',\n                },\n                {\n                  text: 'Imagem da Galeria',\n                  onPress: () => launchImageGalery(),\n                  style: 'default',\n                },\n                {\n                  text: 'Cancel',\n                  onPress: () => console.log('Cancel Pressed'),\n                  style: 'cancel',\n                },\n              ]\n            );\n          },\n          style: 'default',\n        },\n        {\n          text: 'Documento PDF',\n          onPress: () => launchDocumentGalery(),\n          style: 'default',\n        },\n        {\n          text: 'Cancel',\n          onPress: () => console.log('Cancel Pressed'),\n          style: 'cancel',\n        },\n      ]\n    );\n  };\n\n  const renderReceipt = () => {\n    if (!pickedReceipt.uri) {\n      return <Text>Nenhuma Imagem Selecionada.</Text>;\n    }\n    if (pickedReceipt.type === 'image') {\n      return <RenderImageReceipt imageUrl={pickedReceipt.uri} />;\n    }\n    if (pickedReceipt.type === 'pdf') {\n      return <RenderPdfReceipt documentUrl={pickedReceipt.uri} />;\n    }\n    return null;\n  };\n\n  return (\n    <View style={styles.receiptPicker}>\n      <View style={styles.buttonContainer}>\n        <TouchableOpacity\n          style={styles.buttonReceiptPicker}\n          onPress={takeReceiptHandler}\n          {...accessibilityLabel('receiptButton')}\n        >\n          <Text style={styles.receiptText}>Comprovante</Text>\n          <View style={styles.imageIcon}>\n            <Image source={CameraIcon} />\n          </View>\n        </TouchableOpacity>\n      </View>\n      <View style={styles.receiptPreview}>{renderReceipt()}</View>\n\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  receiptPicker: {\n    alignItems: 'center',\n  },\n  buttonContainer: {\n    alignContent: 'center',\n    justifyContent: 'center',\n    marginTop: 15,\n    width: 343,\n    height: 48,\n  },\n  buttonReceiptPicker: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignContent: 'center',\n    borderColor: '#8898AA',\n    borderWidth: 1,\n    width: 343,\n    height: 48,\n    borderRadius: 5,\n  },\n  receiptText: {\n    alignSelf: 'flex-start',\n    color: '#8898AA',\n    fontFamily: 'Roboto',\n    fontSize: 16,\n    fontWeight: '700',\n    padding: 10,\n  },\n  imageIcon: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginRight: 10,\n  },\n  receiptPreview: {\n    width: '100%',\n    height: 200,\n    marginTop: 10,\n    marginBottom: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderColor: '#ccc',\n    borderWidth: 1,\n  },\n});\n\nexport default ReceiptPicker;\n"]},"metadata":{},"sourceType":"module"}