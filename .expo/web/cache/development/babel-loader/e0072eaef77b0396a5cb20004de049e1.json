{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/bordi/projects/cestas-cooperflora-rn/src/screens/consumer/ConsumerAddPaymentScreen.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport { format } from 'date-fns';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport firebase from 'firebase';\nimport HeaderTitle from \"../../components/HeaderTitle\";\nimport BackArrow from \"../../components/BackArrow\";\nimport Divider from \"../../components/Divider\";\nimport Colors from \"../../constants/Colors\";\nimport Button from \"../../components/Button\";\nimport { Context as userContext } from \"../../context/UserContext\";\nimport { updateDocInSubcollection, updateDocAttribute } from \"../../api/firebase\";\nimport GLOBALS from \"../../Globals\";\nimport ReceiptPicker from \"../../components/ReceiptPicker\";\nimport { Number, TextLabel } from \"../../components/StandardStyles\";\nimport FormInput from \"../../components/FormInput\";\n\nvar ConsumerAddPaymentScreen = function ConsumerAddPaymentScreen(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userData = _useState4[0],\n      setUserData = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      receiptDocument = _useState6[0],\n      setReceiptDocument = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      paymentNote = _useState8[0],\n      setPaymentNote = _useState8[1];\n\n  var userPayment = route.params.userPayment;\n  var userId = userPayment.userId;\n\n  var _useContext = useContext(userContext),\n      getUserById = _useContext.getUserById;\n\n  useEffect(function () {\n    setIsLoading(true);\n\n    if (userId) {\n      getUserById(userId).then(function (data) {\n        setUserData(data);\n        setIsLoading(false);\n      });\n    }\n  }, [userId]);\n\n  var receiptSelectedHandler = function receiptSelectedHandler(receipt) {\n    return _regeneratorRuntime.async(function receiptSelectedHandler$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setReceiptDocument(receipt);\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var updateUserBalance = function updateUserBalance(paidValue) {\n    var newBalance = paidValue + userData.balance;\n    updateDocAttribute('users', userId, 'balance', newBalance);\n  };\n\n  var updatePayment = function updatePayment(receiptUrl, receiptMetadata) {\n    var formatedDate = new Date(userPayment.date);\n    var payment = {\n      currentBalance: userPayment.currentBalance,\n      date: formatedDate.toISOString(),\n      orderId: userPayment.orderId,\n      orderTotalAmount: userPayment.orderTotalAmount,\n      status: GLOBALS.PAYMENT.STATUS.COMPLETED,\n      totalToBePaid: userPayment.totalToBePaid,\n      userId: userPayment.userId,\n      paymentNote: paymentNote,\n      receipt: {\n        url: receiptUrl,\n        type: receiptMetadata.contentType\n      },\n      paymentDate: new Date().toISOString()\n    };\n    updateDocInSubcollection(GLOBALS.COLLECTION.USERS, userPayment.userId, GLOBALS.SUB_COLLECTION.PAYMENTS, userPayment.paymentId, payment).then(function (data) {\n      console.log('[Consumer Payment Screen] addPayment - Payment  included', data);\n      updateUserBalance(userPayment.totalToBePaid);\n      setIsLoading(false);\n      navigation.navigate('ConsumerPaymentsScreen', {\n        userId: userId\n      });\n    }).catch(function (error) {\n      Alert.alert('Erro ao armazenar o pagamento no banco de dados!', error);\n    });\n  };\n\n  var handlePayment = function handlePayment() {\n    var date, documentName, response, blob, receiptRef;\n    return _regeneratorRuntime.async(function handlePayment$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!(userPayment.totalToBePaid <= 0)) {\n              _context2.next = 3;\n              break;\n            }\n\n            Alert.alert('O valor para o pagamento está com o valor 0!');\n            return _context2.abrupt(\"return\");\n\n          case 3:\n            if (receiptDocument) {\n              _context2.next = 6;\n              break;\n            }\n\n            Alert.alert('Por favor inclua o comprovante!');\n            return _context2.abrupt(\"return\");\n\n          case 6:\n            if (!(receiptDocument.size > GLOBALS.RECEIPTFILE.SIZE)) {\n              _context2.next = 9;\n              break;\n            }\n\n            Alert.alert(\"Arquivo muito grande! Tamanho do arquivo deve ser menor que \" + GLOBALS.RECEIPTFILE.SIZE + \" Bytes\");\n            return _context2.abrupt(\"return\");\n\n          case 9:\n            date = new Date();\n            documentName = format(date, 'yyyyMMddHHMMSS');\n            _context2.next = 13;\n            return _regeneratorRuntime.awrap(fetch(receiptDocument.uri));\n\n          case 13:\n            response = _context2.sent;\n            _context2.next = 16;\n            return _regeneratorRuntime.awrap(response.blob());\n\n          case 16:\n            blob = _context2.sent;\n            receiptRef = firebase.storage().ref().child(userId + \"/\" + documentName);\n            setIsLoading(true);\n            receiptRef.put(blob).then(function (response) {\n              receiptRef.getMetadata().then(function (receiptMetadata) {\n                receiptRef.getDownloadURL().then(function (receiptUrl) {\n                  updatePayment(receiptUrl, receiptMetadata);\n                }).catch(function (error) {\n                  console.log('Erro =>', error);\n                  Alert.alert('Erro ao recuperar o endereço da imagem do comprovante do banco de dados!', error);\n                });\n              }).catch(function () {\n                Alert.alert('Erro ao recuperar os metadados do comprovante de pagamento!', error);\n              });\n            }).catch(function (error) {\n              Alert.alert('Erro ao armazenar a imagem do comprovante!', error);\n            });\n\n          case 20:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  if (isLoading) {\n    console.log('[Consumer Payments Screen] isLoading', isLoading);\n    return React.createElement(View, {\n      style: styles.centered,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 7\n      }\n    }, React.createElement(ActivityIndicator, {\n      size: \"large\",\n      color: Colors.primary,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return React.createElement(View, {\n    style: styles.screen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.valuesContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.itemContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 11\n    }\n  }, React.createElement(TextLabel, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }, \"Valor do Pedido\"), React.createElement(View, {\n    style: styles.itemBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  }, React.createElement(Number, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 15\n    }\n  }, \"R$ \" + userPayment.orderTotalAmount.toFixed(2)))), React.createElement(View, {\n    style: styles.itemContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 11\n    }\n  }, React.createElement(TextLabel, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  }, \"Saldo atual\"), React.createElement(View, {\n    style: styles.itemBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }, React.createElement(Number, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 15\n    }\n  }, \"R$ \" + userData.balance.toFixed(2))))), React.createElement(Divider, {\n    style: {\n      borderBottomColor: Colors.tertiary\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: styles.receiptContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableWithoutFeedback, {\n    onPress: Keyboard.dismiss,\n    accessible: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 11\n    }\n  }, React.createElement(KeyboardAvoidingView, {\n    style: {\n      flex: 1,\n      flexDirection: 'column',\n      justifyContent: 'center',\n      marginBottom: 30\n    },\n    behavior: Platform.OS === 'ios' ? 'padding' : null,\n    enabled: true,\n    keyboardVerticalOffset: 200,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  }, React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 15\n    }\n  }, React.createElement(View, {\n    style: styles.addContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: styles.inputContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 19\n    }\n  }, React.createElement(Text, {\n    style: styles.itemText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 21\n    }\n  }, \"Saldo a Pagar\"), React.createElement(Number, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 21\n    }\n  }, \"R$ \" + userPayment.totalToBePaid.toFixed(2))), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 19\n    }\n  }, React.createElement(ReceiptPicker, {\n    onReceiptPicker: receiptSelectedHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 21\n    }\n  }))), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 17\n    }\n  }, React.createElement(FormInput, {\n    id: \"paymentNote\",\n    style: styles.paymentNote,\n    label: \"Observa\\xE7\\xE3o (Opcional m\\xE1x. 250 caracteres)\",\n    value: paymentNote,\n    onChangeText: setPaymentNote,\n    editable: true,\n    multiline: true,\n    maxLength: 250,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 19\n    }\n  })))))), React.createElement(View, {\n    style: styles.confirmContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }\n  }, React.createElement(Divider, {\n    style: {\n      borderBottomColor: Colors.secondary\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 11\n    }\n  }), React.createElement(Button, {\n    id: \"confirmPaymentButton\",\n    style: styles.confirmButton,\n    textColor: \"white\",\n    onPress: handlePayment,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 11\n    }\n  }, \"Confirmar Pagamento\"))));\n};\n\nexport var consumerAddPaymentScreenOptions = function consumerAddPaymentScreenOptions() {\n  return {\n    headerTitle: function headerTitle() {\n      return React.createElement(View, {\n        style: styles.header,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 7\n        }\n      }, React.createElement(HeaderTitle, {\n        title: \"Adicionar Pagamento\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 9\n        }\n      }));\n    },\n    headerBackImage: function headerBackImage() {\n      return React.createElement(BackArrow, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 28\n        }\n      });\n    },\n    headerStyle: {\n      backgroundColor: 'transparent',\n      elevation: 0,\n      shadowOpacity: 0,\n      borderBottomWidth: 0\n    }\n  };\n};\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    marginTop: 4,\n    backgroundColor: 'white',\n    borderTopLeftRadius: 20,\n    borderTopRightRadius: 20,\n    shadowColor: 'black',\n    shadowOpacity: 0.26,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowRadius: 8,\n    elevation: 25\n  },\n  container: {\n    flex: 1,\n    marginLeft: 25,\n    marginRight: 25,\n    marginTop: 10,\n    marginBottom: 10\n  },\n  valuesContainer: {\n    alignItems: 'flex-start',\n    justifyContent: 'center',\n    height: '10%'\n  },\n  itemContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  itemBox: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'flex-end'\n  },\n  itemText: {\n    fontFamily: 'Roboto',\n    fontWeight: '700',\n    fontSize: 16,\n    color: '#505050'\n  },\n  receiptContainer: {\n    height: '80%'\n  },\n  addContainer: {\n    marginTop: 5,\n    paddingTop: 5\n  },\n  inputContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  input: {\n    borderBottomColor: '#ccc',\n    borderBottomWidth: 1,\n    fontFamily: 'Roboto',\n    fontWeight: '700',\n    fontSize: 16,\n    color: '#8898AA',\n    textAlign: 'right',\n    width: 80\n  },\n  button1: {\n    marginTop: 15,\n    backgroundColor: '#f2f2f2',\n    color: 'black'\n  },\n  textButton: {\n    color: 'black'\n  },\n  receiptButtonInt: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  paymentNote: {\n    borderBottomWidth: 2,\n    borderColor: Colors.tertiary\n  },\n  confirmContainer: {\n    position: 'absolute',\n    width: '100%',\n    bottom: 0\n  },\n  confirmButton: {\n    marginTop: 5,\n    backgroundColor: Colors.primary,\n    alignSelf: 'center'\n  },\n  header: {\n    alignItems: 'flex-start'\n  }\n});\nexport default ConsumerAddPaymentScreen;","map":{"version":3,"sources":["/home/bordi/projects/cestas-cooperflora-rn/src/screens/consumer/ConsumerAddPaymentScreen.js"],"names":["React","useEffect","useState","useContext","format","firebase","HeaderTitle","BackArrow","Divider","Colors","Button","Context","userContext","updateDocInSubcollection","updateDocAttribute","GLOBALS","ReceiptPicker","Number","TextLabel","FormInput","ConsumerAddPaymentScreen","route","navigation","isLoading","setIsLoading","userData","setUserData","receiptDocument","setReceiptDocument","paymentNote","setPaymentNote","userPayment","params","userId","getUserById","then","data","receiptSelectedHandler","receipt","updateUserBalance","paidValue","newBalance","balance","updatePayment","receiptUrl","receiptMetadata","formatedDate","Date","date","payment","currentBalance","toISOString","orderId","orderTotalAmount","status","PAYMENT","STATUS","COMPLETED","totalToBePaid","url","type","contentType","paymentDate","COLLECTION","USERS","SUB_COLLECTION","PAYMENTS","paymentId","console","log","navigate","catch","error","Alert","alert","handlePayment","size","RECEIPTFILE","SIZE","documentName","fetch","uri","response","blob","receiptRef","storage","ref","child","put","getMetadata","getDownloadURL","styles","centered","primary","screen","container","valuesContainer","itemContainer","itemBox","toFixed","borderBottomColor","tertiary","receiptContainer","Keyboard","dismiss","flex","flexDirection","justifyContent","marginBottom","Platform","OS","addContainer","inputContainer","itemText","confirmContainer","secondary","confirmButton","consumerAddPaymentScreenOptions","headerTitle","header","headerBackImage","headerStyle","backgroundColor","elevation","shadowOpacity","borderBottomWidth","StyleSheet","create","marginTop","borderTopLeftRadius","borderTopRightRadius","shadowColor","shadowOffset","width","height","shadowRadius","marginLeft","marginRight","alignItems","fontFamily","fontWeight","fontSize","color","paddingTop","input","textAlign","button1","textButton","receiptButtonInt","borderColor","position","bottom","alignSelf"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,MAAT,QAAuB,UAAvB;;;;;;;;;;AAYA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,WAAP;AACA,OAAOC,SAAP;AACA,OAAOC,OAAP;AACA,OAAOC,MAAP;AACA,OAAOC,MAAP;AACA,SAASC,OAAO,IAAIC,WAApB;AACA,SACEC,wBADF,EAEEC,kBAFF;AAIA,OAAOC,OAAP;AACA,OAAOC,aAAP;AACA,SAASC,MAAT,EAAiBC,SAAjB;AACA,OAAOC,SAAP;;AAEA,IAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,OAA2B;AAAA,MAAxBC,KAAwB,QAAxBA,KAAwB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AAC1D,kBAAkCpB,QAAQ,CAAC,IAAD,CAA1C;AAAA;AAAA,MAAOqB,SAAP;AAAA,MAAkBC,YAAlB;;AACA,mBAAgCtB,QAAQ,EAAxC;AAAA;AAAA,MAAOuB,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAA8CxB,QAAQ,CAAC,IAAD,CAAtD;AAAA;AAAA,MAAOyB,eAAP;AAAA,MAAwBC,kBAAxB;;AACA,mBAAsC1B,QAAQ,CAAC,EAAD,CAA9C;AAAA;AAAA,MAAO2B,WAAP;AAAA,MAAoBC,cAApB;;AAEA,MAAQC,WAAR,GAAwBV,KAAK,CAACW,MAA9B,CAAQD,WAAR;AACA,MAAQE,MAAR,GAAmBF,WAAnB,CAAQE,MAAR;;AACA,oBAAwB9B,UAAU,CAACS,WAAD,CAAlC;AAAA,MAAQsB,WAAR,eAAQA,WAAR;;AAEAjC,EAAAA,SAAS,CAAC,YAAM;AACduB,IAAAA,YAAY,CAAC,IAAD,CAAZ;;AACA,QAAIS,MAAJ,EAAY;AACVC,MAAAA,WAAW,CAACD,MAAD,CAAX,CAAoBE,IAApB,CAAyB,UAACC,IAAD,EAAU;AACjCV,QAAAA,WAAW,CAACU,IAAD,CAAX;AACAZ,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,OAHD;AAID;AACF,GARQ,EAQN,CAACS,MAAD,CARM,CAAT;;AAUA,MAAMI,sBAAsB,GAAG,SAAzBA,sBAAyB,CAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAC7BV,YAAAA,kBAAkB,CAACU,OAAD,CAAlB;;AAD6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA/B;;AAIA,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,SAAD,EAAe;AACvC,QAAMC,UAAU,GAAGD,SAAS,GAAGf,QAAQ,CAACiB,OAAxC;AACA5B,IAAAA,kBAAkB,CAAC,OAAD,EAAUmB,MAAV,EAAkB,SAAlB,EAA6BQ,UAA7B,CAAlB;AACD,GAHD;;AAKA,MAAME,aAAa,GAAG,SAAhBA,aAAgB,CAACC,UAAD,EAAaC,eAAb,EAAiC;AACrD,QAAMC,YAAY,GAAG,IAAIC,IAAJ,CAAShB,WAAW,CAACiB,IAArB,CAArB;AACA,QAAMC,OAAO,GAAG;AACdC,MAAAA,cAAc,EAAEnB,WAAW,CAACmB,cADd;AAEdF,MAAAA,IAAI,EAAEF,YAAY,CAACK,WAAb,EAFQ;AAGdC,MAAAA,OAAO,EAAErB,WAAW,CAACqB,OAHP;AAIdC,MAAAA,gBAAgB,EAAEtB,WAAW,CAACsB,gBAJhB;AAKdC,MAAAA,MAAM,EAAEvC,OAAO,CAACwC,OAAR,CAAgBC,MAAhB,CAAuBC,SALjB;AAMdC,MAAAA,aAAa,EAAE3B,WAAW,CAAC2B,aANb;AAOdzB,MAAAA,MAAM,EAAEF,WAAW,CAACE,MAPN;AAQdJ,MAAAA,WAAW,EAAXA,WARc;AASdS,MAAAA,OAAO,EAAE;AACPqB,QAAAA,GAAG,EAAEf,UADE;AAEPgB,QAAAA,IAAI,EAAEf,eAAe,CAACgB;AAFf,OATK;AAadC,MAAAA,WAAW,EAAE,IAAIf,IAAJ,GAAWI,WAAX;AAbC,KAAhB;AAeAtC,IAAAA,wBAAwB,CACtBE,OAAO,CAACgD,UAAR,CAAmBC,KADG,EAEtBjC,WAAW,CAACE,MAFU,EAGtBlB,OAAO,CAACkD,cAAR,CAAuBC,QAHD,EAItBnC,WAAW,CAACoC,SAJU,EAKtBlB,OALsB,CAAxB,CAOGd,IAPH,CAOQ,UAACC,IAAD,EAAU;AACdgC,MAAAA,OAAO,CAACC,GAAR,CACE,0DADF,EAEEjC,IAFF;AAIAG,MAAAA,iBAAiB,CAACR,WAAW,CAAC2B,aAAb,CAAjB;AACAlC,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAF,MAAAA,UAAU,CAACgD,QAAX,CAAoB,wBAApB,EAA8C;AAC5CrC,QAAAA,MAAM,EAANA;AAD4C,OAA9C;AAGD,KAjBH,EAkBGsC,KAlBH,CAkBS,UAACC,KAAD,EAAW;AAChBC,MAAAA,KAAK,CAACC,KAAN,CAAY,kDAAZ,EAAgEF,KAAhE;AACD,KApBH;AAqBD,GAtCD;;AAwCA,MAAMG,aAAa,GAAG,SAAhBA,aAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAChB5C,WAAW,CAAC2B,aAAZ,IAA6B,CADb;AAAA;AAAA;AAAA;;AAElBe,YAAAA,KAAK,CAACC,KAAN,CAAY,8CAAZ;AAFkB;;AAAA;AAAA,gBAKf/C,eALe;AAAA;AAAA;AAAA;;AAMlB8C,YAAAA,KAAK,CAACC,KAAN,CAAY,iCAAZ;AANkB;;AAAA;AAAA,kBAShB/C,eAAe,CAACiD,IAAhB,GAAuB7D,OAAO,CAAC8D,WAAR,CAAoBC,IAT3B;AAAA;AAAA;AAAA;;AAUlBL,YAAAA,KAAK,CAACC,KAAN,kEACiE3D,OAAO,CAAC8D,WAAR,CAAoBC,IADrF;AAVkB;;AAAA;AAed9B,YAAAA,IAfc,GAeP,IAAID,IAAJ,EAfO;AAgBdgC,YAAAA,YAhBc,GAgBC3E,MAAM,CAAC4C,IAAD,EAAO,gBAAP,CAhBP;AAAA;AAAA,6CAiBGgC,KAAK,CAACrD,eAAe,CAACsD,GAAjB,CAjBR;;AAAA;AAiBdC,YAAAA,QAjBc;AAAA;AAAA,6CAkBDA,QAAQ,CAACC,IAAT,EAlBC;;AAAA;AAkBdA,YAAAA,IAlBc;AAmBdC,YAAAA,UAnBc,GAmBD/E,QAAQ,CACxBgF,OADgB,GAEhBC,GAFgB,GAGhBC,KAHgB,CAGPtD,MAHO,SAGG8C,YAHH,CAnBC;AAuBpBvD,YAAAA,YAAY,CAAC,IAAD,CAAZ;AACA4D,YAAAA,UAAU,CACPI,GADH,CACOL,IADP,EAEGhD,IAFH,CAEQ,UAAC+C,QAAD,EAAc;AAClBE,cAAAA,UAAU,CACPK,WADH,GAEGtD,IAFH,CAEQ,UAACU,eAAD,EAAqB;AACzBuC,gBAAAA,UAAU,CACPM,cADH,GAEGvD,IAFH,CAEQ,UAACS,UAAD,EAAgB;AACpBD,kBAAAA,aAAa,CAACC,UAAD,EAAaC,eAAb,CAAb;AACD,iBAJH,EAKG0B,KALH,CAKS,UAACC,KAAD,EAAW;AAChBJ,kBAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBG,KAAvB;AACAC,kBAAAA,KAAK,CAACC,KAAN,CACE,0EADF,EAEEF,KAFF;AAID,iBAXH;AAYD,eAfH,EAgBGD,KAhBH,CAgBS,YAAM;AACXE,gBAAAA,KAAK,CAACC,KAAN,CACE,6DADF,EAEEF,KAFF;AAID,eArBH;AAsBD,aAzBH,EA0BGD,KA1BH,CA0BS,UAACC,KAAD,EAAW;AAChBC,cAAAA,KAAK,CAACC,KAAN,CAAY,4CAAZ,EAA0DF,KAA1D;AACD,aA5BH;;AAxBoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtB;;AAuDA,MAAIjD,SAAJ,EAAe;AACb6C,IAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ,EAAoD9C,SAApD;AACA,WACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEoE,MAAM,CAACC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,iBAAD;AAAmB,MAAA,IAAI,EAAC,OAAxB;AAAgC,MAAA,KAAK,EAAEnF,MAAM,CAACoF,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AAED,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,MAAM,CAACG,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACI,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,MAAM,CAACK,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEL,MAAM,CAACM,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEN,MAAM,CAACO,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAenE,WAAW,CAACsB,gBAAZ,CAA6B8C,OAA7B,CAAqC,CAArC,CAAf,CADF,CAFF,CADF,EAOE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAER,MAAM,CAACM,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEN,MAAM,CAACO,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAezE,QAAQ,CAACiB,OAAT,CAAiByD,OAAjB,CAAyB,CAAzB,CAAf,CADF,CAFF,CAPF,CADF,EAeE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAE;AAAEC,MAAAA,iBAAiB,EAAE3F,MAAM,CAAC4F;AAA5B,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,EAgBE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEV,MAAM,CAACW,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,wBAAD;AACE,IAAA,OAAO,EAAEC,QAAQ,CAACC,OADpB;AAEE,IAAA,UAAU,EAAE,KAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,oBAAD;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAE,CADD;AAELC,MAAAA,aAAa,EAAE,QAFV;AAGLC,MAAAA,cAAc,EAAE,QAHX;AAILC,MAAAA,YAAY,EAAE;AAJT,KADT;AAOE,IAAA,QAAQ,EAAEC,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwB,SAAxB,GAAoC,IAPhD;AAQE,IAAA,OAAO,MART;AASE,IAAA,sBAAsB,EAAE,GAT1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEnB,MAAM,CAACoB,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEpB,MAAM,CAACqB,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAErB,MAAM,CAACsB,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAelF,WAAW,CAAC2B,aAAZ,CAA0ByC,OAA1B,CACb,CADa,CAAf,CAFF,CADF,EAOE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AAAe,IAAA,eAAe,EAAE9D,sBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAPF,CADF,EAYE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,EAAE,EAAC,aADL;AAEE,IAAA,KAAK,EAAEsD,MAAM,CAAC9D,WAFhB;AAGE,IAAA,KAAK,EAAC,oDAHR;AAIE,IAAA,KAAK,EAAEA,WAJT;AAKE,IAAA,YAAY,EAAEC,cALhB;AAME,IAAA,QAAQ,MANV;AAOE,IAAA,SAAS,MAPX;AAQE,IAAA,SAAS,EAAE,GARb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAZF,CAXF,CAJF,CADF,CAhBF,EA4DE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE6D,MAAM,CAACuB,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAE;AAAEd,MAAAA,iBAAiB,EAAE3F,MAAM,CAAC0G;AAA5B,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,MAAD;AACE,IAAA,EAAE,EAAC,sBADL;AAEE,IAAA,KAAK,EAAExB,MAAM,CAACyB,aAFhB;AAGE,IAAA,SAAS,EAAC,OAHZ;AAIE,IAAA,OAAO,EAAEzC,aAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFF,CA5DF,CADF,CADF;AA4ED,CAjND;;AAmNA,OAAO,IAAM0C,+BAA+B,GAAG,SAAlCA,+BAAkC,GAAM;AACnD,SAAO;AACLC,IAAAA,WAAW,EAAE;AAAA,aACX,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE3B,MAAM,CAAC4B,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AAAa,QAAA,KAAK,EAAC,qBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADW;AAAA,KADR;AAMLC,IAAAA,eAAe,EAAE;AAAA,aAAM,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAN;AAAA,KANZ;AAOLC,IAAAA,WAAW,EAAE;AACXC,MAAAA,eAAe,EAAE,aADN;AAEXC,MAAAA,SAAS,EAAE,CAFA;AAGXC,MAAAA,aAAa,EAAE,CAHJ;AAIXC,MAAAA,iBAAiB,EAAE;AAJR;AAPR,GAAP;AAcD,CAfM;AAiBP,IAAMlC,MAAM,GAAGmC,UAAU,CAACC,MAAX,CAAkB;AAC/BjC,EAAAA,MAAM,EAAE;AACNW,IAAAA,IAAI,EAAE,CADA;AAENuB,IAAAA,SAAS,EAAE,CAFL;AAGNN,IAAAA,eAAe,EAAE,OAHX;AAINO,IAAAA,mBAAmB,EAAE,EAJf;AAKNC,IAAAA,oBAAoB,EAAE,EALhB;AAMNC,IAAAA,WAAW,EAAE,OANP;AAONP,IAAAA,aAAa,EAAE,IAPT;AAQNQ,IAAAA,YAAY,EAAE;AAAEC,MAAAA,KAAK,EAAE,CAAT;AAAYC,MAAAA,MAAM,EAAE;AAApB,KARR;AASNC,IAAAA,YAAY,EAAE,CATR;AAUNZ,IAAAA,SAAS,EAAE;AAVL,GADuB;AAa/B5B,EAAAA,SAAS,EAAE;AACTU,IAAAA,IAAI,EAAE,CADG;AAET+B,IAAAA,UAAU,EAAE,EAFH;AAGTC,IAAAA,WAAW,EAAE,EAHJ;AAITT,IAAAA,SAAS,EAAE,EAJF;AAKTpB,IAAAA,YAAY,EAAE;AALL,GAboB;AAoB/BZ,EAAAA,eAAe,EAAE;AACf0C,IAAAA,UAAU,EAAE,YADG;AAEf/B,IAAAA,cAAc,EAAE,QAFD;AAGf2B,IAAAA,MAAM,EAAE;AAHO,GApBc;AAyB/BrC,EAAAA,aAAa,EAAE;AACbQ,IAAAA,IAAI,EAAE,CADO;AAEbC,IAAAA,aAAa,EAAE,KAFF;AAGbC,IAAAA,cAAc,EAAE;AAHH,GAzBgB;AA8B/BT,EAAAA,OAAO,EAAE;AACPO,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,aAAa,EAAE,KAFR;AAGPC,IAAAA,cAAc,EAAE;AAHT,GA9BsB;AAmC/BM,EAAAA,QAAQ,EAAE;AACR0B,IAAAA,UAAU,EAAE,QADJ;AAERC,IAAAA,UAAU,EAAE,KAFJ;AAGRC,IAAAA,QAAQ,EAAE,EAHF;AAIRC,IAAAA,KAAK,EAAE;AAJC,GAnCqB;AAyC/BxC,EAAAA,gBAAgB,EAAE;AAChBgC,IAAAA,MAAM,EAAE;AADQ,GAzCa;AA4C/BvB,EAAAA,YAAY,EAAE;AACZiB,IAAAA,SAAS,EAAE,CADC;AAEZe,IAAAA,UAAU,EAAE;AAFA,GA5CiB;AAgD/B/B,EAAAA,cAAc,EAAE;AACdN,IAAAA,aAAa,EAAE,KADD;AAEdC,IAAAA,cAAc,EAAE,eAFF;AAGd+B,IAAAA,UAAU,EAAE;AAHE,GAhDe;AAqD/BM,EAAAA,KAAK,EAAE;AACL5C,IAAAA,iBAAiB,EAAE,MADd;AAELyB,IAAAA,iBAAiB,EAAE,CAFd;AAGLc,IAAAA,UAAU,EAAE,QAHP;AAILC,IAAAA,UAAU,EAAE,KAJP;AAKLC,IAAAA,QAAQ,EAAE,EALL;AAMLC,IAAAA,KAAK,EAAE,SANF;AAOLG,IAAAA,SAAS,EAAE,OAPN;AAQLZ,IAAAA,KAAK,EAAE;AARF,GArDwB;AAgE/Ba,EAAAA,OAAO,EAAE;AACPlB,IAAAA,SAAS,EAAE,EADJ;AAEPN,IAAAA,eAAe,EAAE,SAFV;AAGPoB,IAAAA,KAAK,EAAE;AAHA,GAhEsB;AAqE/BK,EAAAA,UAAU,EAAE;AACVL,IAAAA,KAAK,EAAE;AADG,GArEmB;AAwE/BM,EAAAA,gBAAgB,EAAE;AAChB1C,IAAAA,aAAa,EAAE,KADC;AAEhBgC,IAAAA,UAAU,EAAE,QAFI;AAGhB/B,IAAAA,cAAc,EAAE;AAHA,GAxEa;AA6E/B9E,EAAAA,WAAW,EAAE;AACXgG,IAAAA,iBAAiB,EAAE,CADR;AAEXwB,IAAAA,WAAW,EAAE5I,MAAM,CAAC4F;AAFT,GA7EkB;AAiF/Ba,EAAAA,gBAAgB,EAAE;AAChBoC,IAAAA,QAAQ,EAAE,UADM;AAEhBjB,IAAAA,KAAK,EAAE,MAFS;AAGhBkB,IAAAA,MAAM,EAAE;AAHQ,GAjFa;AAsF/BnC,EAAAA,aAAa,EAAE;AACbY,IAAAA,SAAS,EAAE,CADE;AAEbN,IAAAA,eAAe,EAAEjH,MAAM,CAACoF,OAFX;AAGb2D,IAAAA,SAAS,EAAE;AAHE,GAtFgB;AA2F/BjC,EAAAA,MAAM,EAAE;AACNmB,IAAAA,UAAU,EAAE;AADN;AA3FuB,CAAlB,CAAf;AAgGA,eAAetH,wBAAf","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport { format } from 'date-fns';\nimport {\n  StyleSheet,\n  Text,\n  View,\n  ActivityIndicator,\n  Alert,\n  ScrollView,\n  KeyboardAvoidingView,\n  TouchableWithoutFeedback,\n  Keyboard,\n} from 'react-native';\nimport firebase from 'firebase';\nimport HeaderTitle from '../../components/HeaderTitle';\nimport BackArrow from '../../components/BackArrow';\nimport Divider from '../../components/Divider';\nimport Colors from '../../constants/Colors';\nimport Button from '../../components/Button';\nimport { Context as userContext } from '../../context/UserContext';\nimport {\n  updateDocInSubcollection,\n  updateDocAttribute,\n} from '../../api/firebase';\nimport GLOBALS from '../../Globals';\nimport ReceiptPicker from '../../components/ReceiptPicker';\nimport { Number, TextLabel } from '../../components/StandardStyles';\nimport FormInput from '../../components/FormInput';\n\nconst ConsumerAddPaymentScreen = ({ route, navigation }) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [userData, setUserData] = useState();\n  const [receiptDocument, setReceiptDocument] = useState(null);\n  const [paymentNote, setPaymentNote] = useState('');\n\n  const { userPayment } = route.params;\n  const { userId } = userPayment;\n  const { getUserById } = useContext(userContext);\n\n  useEffect(() => {\n    setIsLoading(true);\n    if (userId) {\n      getUserById(userId).then((data) => {\n        setUserData(data);\n        setIsLoading(false);\n      });\n    }\n  }, [userId]);\n\n  const receiptSelectedHandler = async (receipt) => {\n    setReceiptDocument(receipt);\n  };\n\n  const updateUserBalance = (paidValue) => {\n    const newBalance = paidValue + userData.balance;\n    updateDocAttribute('users', userId, 'balance', newBalance);\n  };\n\n  const updatePayment = (receiptUrl, receiptMetadata) => {\n    const formatedDate = new Date(userPayment.date);\n    const payment = {\n      currentBalance: userPayment.currentBalance,\n      date: formatedDate.toISOString(),\n      orderId: userPayment.orderId,\n      orderTotalAmount: userPayment.orderTotalAmount,\n      status: GLOBALS.PAYMENT.STATUS.COMPLETED,\n      totalToBePaid: userPayment.totalToBePaid,\n      userId: userPayment.userId,\n      paymentNote,\n      receipt: {\n        url: receiptUrl,\n        type: receiptMetadata.contentType,\n      },\n      paymentDate: new Date().toISOString(),\n    };\n    updateDocInSubcollection(\n      GLOBALS.COLLECTION.USERS,\n      userPayment.userId,\n      GLOBALS.SUB_COLLECTION.PAYMENTS,\n      userPayment.paymentId,\n      payment\n    )\n      .then((data) => {\n        console.log(\n          '[Consumer Payment Screen] addPayment - Payment  included',\n          data\n        );\n        updateUserBalance(userPayment.totalToBePaid);\n        setIsLoading(false);\n        navigation.navigate('ConsumerPaymentsScreen', {\n          userId,\n        });\n      })\n      .catch((error) => {\n        Alert.alert('Erro ao armazenar o pagamento no banco de dados!', error);\n      });\n  };\n\n  const handlePayment = async () => {\n    if (userPayment.totalToBePaid <= 0) {\n      Alert.alert('O valor para o pagamento está com o valor 0!');\n      return;\n    }\n    if (!receiptDocument) {\n      Alert.alert('Por favor inclua o comprovante!');\n      return;\n    }\n    if (receiptDocument.size > GLOBALS.RECEIPTFILE.SIZE) {\n      Alert.alert(\n        `Arquivo muito grande! Tamanho do arquivo deve ser menor que ${GLOBALS.RECEIPTFILE.SIZE} Bytes`\n      );\n      return;\n    }\n    const date = new Date();\n    const documentName = format(date, 'yyyyMMddHHMMSS');\n    const response = await fetch(receiptDocument.uri);\n    const blob = await response.blob();\n    const receiptRef = firebase\n      .storage()\n      .ref()\n      .child(`${userId}/${documentName}`);\n    setIsLoading(true);\n    receiptRef\n      .put(blob)\n      .then((response) => {\n        receiptRef\n          .getMetadata()\n          .then((receiptMetadata) => {\n            receiptRef\n              .getDownloadURL()\n              .then((receiptUrl) => {\n                updatePayment(receiptUrl, receiptMetadata);\n              })\n              .catch((error) => {\n                console.log('Erro =>', error);\n                Alert.alert(\n                  'Erro ao recuperar o endereço da imagem do comprovante do banco de dados!',\n                  error\n                );\n              });\n          })\n          .catch(() => {\n            Alert.alert(\n              'Erro ao recuperar os metadados do comprovante de pagamento!',\n              error\n            );\n          });\n      })\n      .catch((error) => {\n        Alert.alert('Erro ao armazenar a imagem do comprovante!', error);\n      });\n  };\n\n  if (isLoading) {\n    console.log('[Consumer Payments Screen] isLoading', isLoading);\n    return (\n      <View style={styles.centered}>\n        <ActivityIndicator size=\"large\" color={Colors.primary} />\n      </View>\n    );\n  }\n\n  return (\n    <View style={styles.screen}>\n      <View style={styles.container}>\n        <View style={styles.valuesContainer}>\n          <View style={styles.itemContainer}>\n            <TextLabel>Valor do Pedido</TextLabel>\n            <View style={styles.itemBox}>\n              <Number>{`R$ ${userPayment.orderTotalAmount.toFixed(2)}`}</Number>\n            </View>\n          </View>\n          <View style={styles.itemContainer}>\n            <TextLabel>Saldo atual</TextLabel>\n            <View style={styles.itemBox}>\n              <Number>{`R$ ${userData.balance.toFixed(2)}`}</Number>\n            </View>\n          </View>\n        </View>\n        <Divider style={{ borderBottomColor: Colors.tertiary }} />\n        <View style={styles.receiptContainer}>\n          <TouchableWithoutFeedback\n            onPress={Keyboard.dismiss}\n            accessible={false}\n          >\n            <KeyboardAvoidingView\n              style={{\n                flex: 1,\n                flexDirection: 'column',\n                justifyContent: 'center',\n                marginBottom: 30,\n              }}\n              behavior={Platform.OS === 'ios' ? 'padding' : null}\n              enabled\n              keyboardVerticalOffset={200}\n            >\n              <ScrollView>\n                <View style={styles.addContainer}>\n                  <View style={styles.inputContainer}>\n                    <Text style={styles.itemText}>Saldo a Pagar</Text>\n                    <Number>{`R$ ${userPayment.totalToBePaid.toFixed(\n                      2\n                    )}`}</Number>\n                  </View>\n                  <View>\n                    <ReceiptPicker onReceiptPicker={receiptSelectedHandler} />\n                  </View>\n                </View>\n                <View>\n                  <FormInput\n                    id=\"paymentNote\"\n                    style={styles.paymentNote}\n                    label=\"Observação (Opcional máx. 250 caracteres)\"\n                    value={paymentNote}\n                    onChangeText={setPaymentNote}\n                    editable\n                    multiline\n                    maxLength={250}\n                  />\n                </View>\n              </ScrollView>\n            </KeyboardAvoidingView>\n          </TouchableWithoutFeedback>\n        </View>\n        <View style={styles.confirmContainer}>\n          <Divider style={{ borderBottomColor: Colors.secondary }} />\n          <Button\n            id=\"confirmPaymentButton\"\n            style={styles.confirmButton}\n            textColor=\"white\"\n            onPress={handlePayment}\n          >\n            Confirmar Pagamento\n          </Button>\n        </View>\n      </View>\n    </View>\n  );\n};\n\nexport const consumerAddPaymentScreenOptions = () => {\n  return {\n    headerTitle: () => (\n      <View style={styles.header}>\n        <HeaderTitle title=\"Adicionar Pagamento\" />\n      </View>\n    ),\n    headerBackImage: () => <BackArrow />,\n    headerStyle: {\n      backgroundColor: 'transparent',\n      elevation: 0,\n      shadowOpacity: 0,\n      borderBottomWidth: 0,\n    },\n  };\n};\n\nconst styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    marginTop: 4,\n    backgroundColor: 'white',\n    borderTopLeftRadius: 20,\n    borderTopRightRadius: 20,\n    shadowColor: 'black',\n    shadowOpacity: 0.26,\n    shadowOffset: { width: 0, height: 2 },\n    shadowRadius: 8,\n    elevation: 25,\n  },\n  container: {\n    flex: 1,\n    marginLeft: 25,\n    marginRight: 25,\n    marginTop: 10,\n    marginBottom: 10,\n  },\n  valuesContainer: {\n    alignItems: 'flex-start',\n    justifyContent: 'center',\n    height: '10%',\n  },\n  itemContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  itemBox: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n  },\n  itemText: {\n    fontFamily: 'Roboto',\n    fontWeight: '700',\n    fontSize: 16,\n    color: '#505050',\n  },\n  receiptContainer: {\n    height: '80%',\n  },\n  addContainer: {\n    marginTop: 5,\n    paddingTop: 5,\n  },\n  inputContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  input: {\n    borderBottomColor: '#ccc',\n    borderBottomWidth: 1,\n    fontFamily: 'Roboto',\n    fontWeight: '700',\n    fontSize: 16,\n    color: '#8898AA',\n    textAlign: 'right',\n    width: 80,\n    // backgroundColor: 'green'\n  },\n  button1: {\n    marginTop: 15,\n    backgroundColor: '#f2f2f2',\n    color: 'black',\n  },\n  textButton: {\n    color: 'black',\n  },\n  receiptButtonInt: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  paymentNote: {\n    borderBottomWidth: 2,\n    borderColor: Colors.tertiary,\n  },\n  confirmContainer: {\n    position: 'absolute',\n    width: '100%',\n    bottom: 0,\n  },\n  confirmButton: {\n    marginTop: 5,\n    backgroundColor: Colors.primary,\n    alignSelf: 'center',\n  },\n  header: {\n    alignItems: 'flex-start',\n  },\n});\n\nexport default ConsumerAddPaymentScreen;\n"]},"metadata":{},"sourceType":"module"}