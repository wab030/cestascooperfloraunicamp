{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/bordi/projects/cestas-cooperflora-rn/node_modules/react-native-simple-dialogs/src/TouchableEffect.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nvar OS = Platform.OS;\n\nvar TouchableEffect = function (_Component) {\n  _inherits(TouchableEffect, _Component);\n\n  var _super = _createSuper(TouchableEffect);\n\n  function TouchableEffect() {\n    _classCallCheck(this, TouchableEffect);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(TouchableEffect, [{\n    key: \"render\",\n    value: function render() {\n      var touchable;\n\n      if (OS === 'android') {\n        touchable = React.createElement(TouchableNativeFeedback, _extends({}, this.props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }\n        }));\n      } else {\n        touchable = React.createElement(TouchableOpacity, _extends({}, this.props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }\n        }));\n      }\n\n      return touchable;\n    }\n  }]);\n\n  return TouchableEffect;\n}(Component);\n\nif (OS === 'android') {\n  TouchableEffect.propTypes = _objectSpread({}, TouchableNativeFeedback.propTypes);\n} else {\n  TouchableEffect.propTypes = _objectSpread({}, TouchableOpacity.propTypes);\n}\n\nTouchableEffect.defaultProps = {\n  background: OS === 'android' ? TouchableNativeFeedback.SelectableBackground() : undefined\n};\nexport default TouchableEffect;","map":{"version":3,"sources":["/home/bordi/projects/cestas-cooperflora-rn/node_modules/react-native-simple-dialogs/src/TouchableEffect.js"],"names":["React","Component","OS","Platform","TouchableEffect","touchable","props","propTypes","TouchableNativeFeedback","TouchableOpacity","defaultProps","background","SelectableBackground","undefined"],"mappings":";;;;;;;;;;;;;;;;;AAwBA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;AAOA,IAAQC,EAAR,GAAeC,QAAf,CAAQD,EAAR;;IAEME,e;;;;;;;;;;;;;WAEF,kBAAS;AACL,UAAIC,SAAJ;;AAEA,UAAIH,EAAE,KAAK,SAAX,EAAsB;AAClBG,QAAAA,SAAS,GAAG,oBAAC,uBAAD,eAA6B,KAAKC,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAZ;AACH,OAFD,MAEO;AACHD,QAAAA,SAAS,GAAG,oBAAC,gBAAD,eAAsB,KAAKC,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAZ;AACH;;AAED,aAAOD,SAAP;AACH;;;;EAZyBJ,S;;AAe9B,IAAIC,EAAE,KAAK,SAAX,EAAsB;AAClBE,EAAAA,eAAe,CAACG,SAAhB,qBAAiCC,uBAAuB,CAACD,SAAzD;AACH,CAFD,MAEO;AACHH,EAAAA,eAAe,CAACG,SAAhB,qBAAiCE,gBAAgB,CAACF,SAAlD;AACH;;AAEDH,eAAe,CAACM,YAAhB,GAA+B;AAC3BC,EAAAA,UAAU,EAAET,EAAE,KAAK,SAAP,GAAmBM,uBAAuB,CAACI,oBAAxB,EAAnB,GAAoEC;AADrD,CAA/B;AAIA,eAAeT,eAAf","sourcesContent":["/**\n* MIT License\n* \n* Copyright (c) 2017 Douglas Nassif Roma Junior\n* \n* Permission is hereby granted, free of charge, to any person obtaining a copy\n* of this software and associated documentation files (the \"Software\"), to deal\n* in the Software without restriction, including without limitation the rights\n* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the Software is\n* furnished to do so, subject to the following conditions:\n* \n* The above copyright notice and this permission notice shall be included in all\n* copies or substantial portions of the Software.\n* \n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n* SOFTWARE. \n*/\n\nimport React, { Component } from 'react'\nimport {\n    Platform,\n    TouchableOpacity,\n    TouchableNativeFeedback,\n} from 'react-native'\n\nconst { OS } = Platform;\n\nclass TouchableEffect extends Component {\n\n    render() {\n        let touchable;\n\n        if (OS === 'android') {\n            touchable = <TouchableNativeFeedback {...this.props} />\n        } else {\n            touchable = <TouchableOpacity {...this.props} />\n        }\n\n        return touchable;\n    }\n}\n\nif (OS === 'android') {\n    TouchableEffect.propTypes = { ...TouchableNativeFeedback.propTypes };\n} else {\n    TouchableEffect.propTypes = { ...TouchableOpacity.propTypes };\n}\n\nTouchableEffect.defaultProps = {\n    background: OS === 'android' ? TouchableNativeFeedback.SelectableBackground() : undefined\n};\n\nexport default TouchableEffect"]},"metadata":{},"sourceType":"module"}