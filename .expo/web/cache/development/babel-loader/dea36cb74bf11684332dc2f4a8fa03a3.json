{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/bordi/projects/cestas-cooperflora-rn/src/screens/consumer/ConsumerOrderPlacedScreen.js\";\n\nimport React, { useContext } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { format, isAfter } from 'date-fns';\nimport Divider from \"../../components/Divider\";\nimport Colors from \"../../constants/Colors\";\nimport { Context as OrderContext } from \"../../context/OrderContext\";\nimport HeaderTitle from \"../../components/HeaderTitle\";\nimport BackArrow from \"../../components/BackArrow\";\nimport VegetableImage from \"../../../assets/images/vegetable1.png\";\nimport Spinner from \"../../components/Spinner\";\nimport Button from \"../../components/Button\";\nimport GLOBALS from \"../../Globals\";\nimport { Context as DeliveryContext } from \"../../context/DeliveryContext\";\n\nvar ConsumerOrderPlacedScreen = function ConsumerOrderPlacedScreen(_ref) {\n  var _delivery$deliveryFee;\n\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useContext = useContext(OrderContext),\n      _useContext$state = _useContext.state,\n      order = _useContext$state.order,\n      loading = _useContext$state.loading;\n\n  var _useContext2 = useContext(DeliveryContext),\n      deliveryLoading = _useContext2.state.loading,\n      fetchDelivery = _useContext2.fetchDelivery;\n\n  var _route$params = route.params,\n      user = _route$params.user,\n      delivery = _route$params.delivery;\n\n  var hasAnyProduct = function hasAnyProduct() {\n    var _order$extraProducts;\n\n    return (order == null ? void 0 : order.baseProducts) > 0 || (order == null ? void 0 : (_order$extraProducts = order.extraProducts) == null ? void 0 : _order$extraProducts.length) > 0 && order.extraProducts.some(function (prod) {\n      return prod.quantity > 0;\n    });\n  };\n\n  var handleUpdateOrder = function handleUpdateOrder() {\n    fetchDelivery(delivery.id).then(function (deliveryFound) {\n      console.log(\"[ConsumerOrderPlaced] Updating order for delivery: \" + JSON.stringify(deliveryFound.id) + \" and user \" + (user == null ? void 0 : user.id));\n      navigation.navigate('ConsumerOrderScreen', {\n        user: user,\n        delivery: deliveryFound\n      });\n    });\n  };\n\n  var renderEditOrderButton = function renderEditOrderButton() {\n    var currentDate = new Date();\n    var limitDate = delivery.limitDate;\n    var isOrderCompleted = order && order.status && order.status === GLOBALS.ORDER.STATUS.COMPLETED;\n    return isAfter(currentDate, limitDate) || isOrderCompleted ? null : React.createElement(React.Fragment, null, React.createElement(Divider, {\n      style: {\n        borderBottomColor: Colors.secondary\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }), React.createElement(Button, {\n      style: styles.confirmButton,\n      textColor: \"white\",\n      onPress: function onPress() {\n        return handleUpdateOrder();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, \"Editar Pedido\"));\n  };\n\n  return loading || deliveryLoading ? React.createElement(Spinner, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }) : React.createElement(View, {\n    style: styles.screen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.titleContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, \"Pedido realizado!\")), React.createElement(Divider, {\n    style: {\n      borderBottomColor: Colors.secondary\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }), React.createElement(ScrollView, {\n    style: styles.orderedItemsContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.orderItemContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.textContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.itemText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, order.baseProducts), React.createElement(Text, {\n    style: styles.itemText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, \"Cesta(s)\")), React.createElement(Text, {\n    style: styles.itemValue,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }, \"R$\", ' ', (order.baseProducts * delivery.baseProductsPrice).toFixed(2))), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, order.extraProducts.map(function (extraProduct) {\n    var total = extraProduct.productPrice * extraProduct.quantity;\n    return React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 19\n      }\n    }, total !== 0 ? React.createElement(View, {\n      style: styles.orderItemContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 23\n      }\n    }, React.createElement(View, {\n      style: styles.textContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 25\n      }\n    }, React.createElement(Text, {\n      style: styles.itemText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 27\n      }\n    }, extraProduct.quantity), React.createElement(Text, {\n      style: styles.itemText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 27\n      }\n    }, extraProduct.productTitle)), React.createElement(View, {\n      style: styles.box2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 25\n      }\n    }, React.createElement(Text, {\n      style: styles.itemValue,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 27\n      }\n    }, \"R$ \", total.toFixed(2)))) : null);\n  })))), React.createElement(Divider, {\n    style: {\n      borderBottomColor: Colors.tertiary\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: styles.totalAmountContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.totalAmountText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.itemText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, \"Taxa de entrega\"), React.createElement(Text, {\n    style: styles.itemValue,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }, \"R$\", ' ', hasAnyProduct() ? (_delivery$deliveryFee = delivery.deliveryFee) == null ? void 0 : _delivery$deliveryFee.toFixed(2) : 0.0.toFixed(2))), React.createElement(View, {\n    style: styles.totalAmountText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.itemText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  }, \"Total\"), React.createElement(Text, {\n    style: styles.itemValue,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }, \"R$ \", order.totalAmount.toFixed(2)))), React.createElement(View, {\n    style: styles.buttonContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }\n  }, renderEditOrderButton())));\n};\n\nexport var consumerOrderPlacedScreenOptions = function consumerOrderPlacedScreenOptions(navData) {\n  var deliveryDate = format(navData.route.params.delivery.deliveryDate, GLOBALS.FORMAT.DD_MM);\n  return {\n    headerTitle: function headerTitle() {\n      return React.createElement(View, {\n        style: styles.header,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 7\n        }\n      }, React.createElement(HeaderTitle, {\n        title: \"Seu pedido\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: styles.imageContainer,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 9\n        }\n      }, React.createElement(Image, {\n        style: styles.image,\n        source: VegetableImage,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }\n      })), React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 9\n        }\n      }, \"Entrega da cesta - \", deliveryDate));\n    },\n    headerBackImage: function headerBackImage() {\n      return React.createElement(BackArrow, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 28\n        }\n      });\n    },\n    headerStyle: {\n      backgroundColor: 'transparent',\n      elevation: 0,\n      shadowOpacity: 0,\n      borderBottomWidth: 0\n    }\n  };\n};\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    marginTop: 4,\n    backgroundColor: 'white',\n    borderTopLeftRadius: 20,\n    borderTopRightRadius: 20,\n    shadowColor: 'black',\n    shadowOpacity: 0.26,\n    shadowOffset: {\n      width: 4,\n      height: -3\n    },\n    shadowRadius: 8,\n    elevation: 25\n  },\n  container: {\n    flex: 1,\n    margin: 25\n  },\n  titleContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 10\n  },\n  title: {\n    fontFamily: 'Roboto',\n    fontWeight: '700',\n    fontSize: 24,\n    color: '#505050'\n  },\n  orderedItemsContainer: {\n    height: '30%'\n  },\n  orderItemContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    marginTop: 10\n  },\n  itemText: {\n    fontFamily: 'Roboto',\n    fontWeight: '700',\n    fontSize: 16,\n    color: '#505050',\n    padding: 2\n  },\n  itemValue: {\n    fontFamily: 'Roboto',\n    fontWeight: '700',\n    fontSize: 16,\n    color: '#8898AA'\n  },\n  textContainer: {\n    flex: 1,\n    flexDirection: 'row'\n  },\n  totalAmountText: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginVertical: 5\n  },\n  totalAmountContainer: {\n    flex: 1,\n    paddingVertical: 10\n  },\n  buttonContainer: {\n    position: 'absolute',\n    width: '100%',\n    bottom: 0\n  },\n  confirmButton: {\n    marginTop: 5,\n    backgroundColor: Colors.primary,\n    alignSelf: 'center'\n  },\n  header: {\n    alignItems: 'flex-start'\n  },\n  imageContainer: {\n    position: 'absolute',\n    right: -100,\n    width: 80,\n    height: 50\n  },\n  image: {\n    width: '100%',\n    height: '100%'\n  }\n});\nexport default ConsumerOrderPlacedScreen;","map":{"version":3,"sources":["/home/bordi/projects/cestas-cooperflora-rn/src/screens/consumer/ConsumerOrderPlacedScreen.js"],"names":["React","useContext","format","isAfter","Divider","Colors","Context","OrderContext","HeaderTitle","BackArrow","VegetableImage","Spinner","Button","GLOBALS","DeliveryContext","ConsumerOrderPlacedScreen","navigation","route","state","order","loading","deliveryLoading","fetchDelivery","params","user","delivery","hasAnyProduct","baseProducts","extraProducts","length","some","prod","quantity","handleUpdateOrder","id","then","deliveryFound","console","log","JSON","stringify","navigate","renderEditOrderButton","currentDate","Date","limitDate","isOrderCompleted","status","ORDER","STATUS","COMPLETED","borderBottomColor","secondary","styles","confirmButton","screen","container","titleContainer","title","orderedItemsContainer","orderItemContainer","textContainer","itemText","itemValue","baseProductsPrice","toFixed","map","extraProduct","total","productPrice","productTitle","box2","tertiary","totalAmountContainer","totalAmountText","deliveryFee","totalAmount","buttonContainer","consumerOrderPlacedScreenOptions","navData","deliveryDate","FORMAT","DD_MM","headerTitle","header","imageContainer","image","headerBackImage","headerStyle","backgroundColor","elevation","shadowOpacity","borderBottomWidth","StyleSheet","create","flex","marginTop","borderTopLeftRadius","borderTopRightRadius","shadowColor","shadowOffset","width","height","shadowRadius","margin","alignItems","justifyContent","padding","fontFamily","fontWeight","fontSize","color","flexDirection","marginVertical","paddingVertical","position","bottom","primary","alignSelf","right"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport {\n  FlatList,\n  Image,\n  ScrollView,\n  StyleSheet,\n  Text,\n  View,\n} from 'react-native';\nimport { format, isAfter } from 'date-fns';\nimport Divider from '../../components/Divider';\nimport Colors from '../../constants/Colors';\nimport { Context as OrderContext } from '../../context/OrderContext';\nimport HeaderTitle from '../../components/HeaderTitle';\nimport BackArrow from '../../components/BackArrow';\nimport VegetableImage from '../../../assets/images/vegetable1.png';\nimport Spinner from '../../components/Spinner';\nimport Button from '../../components/Button';\nimport GLOBALS from '../../Globals';\nimport { Context as DeliveryContext } from '../../context/DeliveryContext';\n\nconst ConsumerOrderPlacedScreen = ({ navigation, route }) => {\n  const {\n    state: { order, loading },\n  } = useContext(OrderContext);\n\n  const {\n    state: { loading: deliveryLoading },\n    fetchDelivery,\n  } = useContext(DeliveryContext);\n\n  const { user, delivery } = route.params;\n\n  const hasAnyProduct = () => {\n    return (\n      order?.baseProducts > 0 ||\n      (order?.extraProducts?.length > 0 &&\n        order.extraProducts.some((prod) => prod.quantity > 0))\n    );\n  };\n\n  const handleUpdateOrder = () => {\n    fetchDelivery(delivery.id).then((deliveryFound) => {\n      console.log(\n        `[ConsumerOrderPlaced] Updating order for delivery: ${JSON.stringify(\n          deliveryFound.id\n        )} and user ${user?.id}`\n      );\n      navigation.navigate('ConsumerOrderScreen', {\n        user,\n        delivery: deliveryFound,\n      });\n    });\n  };\n\n  const renderEditOrderButton = () => {\n    const currentDate = new Date();\n\n    const { limitDate } = delivery;\n    const isOrderCompleted =\n      order && order.status && order.status === GLOBALS.ORDER.STATUS.COMPLETED;\n\n    return isAfter(currentDate, limitDate) || isOrderCompleted ? null : (\n      <>\n        <Divider style={{ borderBottomColor: Colors.secondary }} />\n        <Button\n          style={styles.confirmButton}\n          textColor=\"white\"\n          onPress={() => handleUpdateOrder()}\n        >\n          Editar Pedido\n        </Button>\n      </>\n    );\n  };\n\n  return loading || deliveryLoading ? (\n    <Spinner />\n  ) : (\n    <View style={styles.screen}>\n      <View style={styles.container}>\n        <View style={styles.titleContainer}>\n          <Text style={styles.title}>Pedido realizado!</Text>\n        </View>\n        <Divider style={{ borderBottomColor: Colors.secondary }} />\n        <ScrollView style={styles.orderedItemsContainer}>\n          <View>\n            <View style={styles.orderItemContainer}>\n              <View style={styles.textContainer}>\n                <Text style={styles.itemText}>{order.baseProducts}</Text>\n                <Text style={styles.itemText}>Cesta(s)</Text>\n              </View>\n              <Text style={styles.itemValue}>\n                R${' '}\n                {(order.baseProducts * delivery.baseProductsPrice).toFixed(2)}\n              </Text>\n            </View>\n            <View>\n              {order.extraProducts.map((extraProduct) => {\n                const total = extraProduct.productPrice * extraProduct.quantity;\n                return (\n                  <View>\n                    {total !== 0 ? (\n                      <View style={styles.orderItemContainer}>\n                        <View style={styles.textContainer}>\n                          <Text style={styles.itemText}>\n                            {extraProduct.quantity}\n                          </Text>\n                          <Text style={styles.itemText}>\n                            {extraProduct.productTitle}\n                          </Text>\n                        </View>\n                        <View style={styles.box2}>\n                          <Text style={styles.itemValue}>\n                            R$ {total.toFixed(2)}\n                          </Text>\n                        </View>\n                      </View>\n                    ) : null}\n                  </View>\n                );\n              })}\n            </View>\n            {/* <FlatList\n              data={order.extraProducts}\n              keyExtractor={(item) => item.productTitle}\n              renderItem={(itemData) => {\n                const total =\n                  itemData.item.productPrice * itemData.item.quantity;\n                return (\n                  <View>\n                    {total !== 0 ? (\n                      <View style={styles.orderItemContainer}>\n                        <View style={styles.textContainer}>\n                          <Text style={styles.itemText}>\n                            {itemData.item.quantity}\n                          </Text>\n                          <Text style={styles.itemText}>\n                            {itemData.item.productTitle}\n                          </Text>\n                        </View>\n                        <View style={styles.box2}>\n                          <Text style={styles.itemValue}>\n                            R$ {total.toFixed(2)}\n                          </Text>\n                        </View>\n                      </View>\n                    ) : null}\n                  </View>\n                );\n              }}\n            /> */}\n          </View>\n        </ScrollView>\n        <Divider style={{ borderBottomColor: Colors.tertiary }} />\n        <View style={styles.totalAmountContainer}>\n          <View style={styles.totalAmountText}>\n            <Text style={styles.itemText}>Taxa de entrega</Text>\n            <Text style={styles.itemValue}>\n              R${' '}\n              {hasAnyProduct()\n                ? delivery.deliveryFee?.toFixed(2)\n                : (0.0).toFixed(2)}\n            </Text>\n          </View>\n          <View style={styles.totalAmountText}>\n            <Text style={styles.itemText}>Total</Text>\n            <Text style={styles.itemValue}>\n              R$ {order.totalAmount.toFixed(2)}\n            </Text>\n          </View>\n        </View>\n        <View style={styles.buttonContainer}>{renderEditOrderButton()}</View>\n      </View>\n    </View>\n  );\n};\n\nexport const consumerOrderPlacedScreenOptions = (navData) => {\n  const deliveryDate = format(\n    navData.route.params.delivery.deliveryDate,\n    GLOBALS.FORMAT.DD_MM\n  );\n  return {\n    headerTitle: () => (\n      <View style={styles.header}>\n        <HeaderTitle title=\"Seu pedido\" />\n        <View style={styles.imageContainer}>\n          <Image style={styles.image} source={VegetableImage} />\n        </View>\n        <Text>Entrega da cesta - {deliveryDate}</Text>\n      </View>\n    ),\n    headerBackImage: () => <BackArrow />,\n    headerStyle: {\n      backgroundColor: 'transparent',\n      elevation: 0,\n      shadowOpacity: 0,\n      borderBottomWidth: 0,\n    },\n  };\n};\n\nconst styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    marginTop: 4,\n    backgroundColor: 'white',\n    borderTopLeftRadius: 20,\n    borderTopRightRadius: 20,\n    shadowColor: 'black',\n    shadowOpacity: 0.26,\n    shadowOffset: { width: 4, height: -3 },\n    shadowRadius: 8,\n    elevation: 25,\n  },\n  container: {\n    flex: 1,\n    margin: 25,\n  },\n  titleContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    // height: '20%',\n    padding: 10,\n  },\n  title: {\n    fontFamily: 'Roboto',\n    fontWeight: '700',\n    fontSize: 24,\n    color: '#505050',\n  },\n  orderedItemsContainer: {\n    height: '30%',\n  },\n  orderItemContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    marginTop: 10,\n  },\n  itemText: {\n    fontFamily: 'Roboto',\n    fontWeight: '700',\n    fontSize: 16,\n    color: '#505050',\n    padding: 2,\n  },\n  itemValue: {\n    fontFamily: 'Roboto',\n    fontWeight: '700',\n    fontSize: 16,\n    color: '#8898AA',\n  },\n  textContainer: {\n    flex: 1,\n    flexDirection: 'row',\n  },\n  totalAmountText: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginVertical: 5,\n  },\n  totalAmountContainer: {\n    flex: 1,\n    paddingVertical: 10,\n  },\n  buttonContainer: {\n    position: 'absolute',\n    width: '100%',\n    bottom: 0,\n  },\n  confirmButton: {\n    marginTop: 5,\n    backgroundColor: Colors.primary,\n    alignSelf: 'center',\n  },\n  header: {\n    alignItems: 'flex-start',\n  },\n  imageContainer: {\n    position: 'absolute',\n    right: -100,\n    width: 80,\n    height: 50,\n  },\n  image: {\n    width: '100%',\n    height: '100%',\n  },\n});\n\nexport default ConsumerOrderPlacedScreen;\n"]},"metadata":{},"sourceType":"module"}