{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/bordi/projects/cestas-cooperflora-rn/src/screens/CreateUserScreen.js\";\n\nimport React, { useContext, useState } from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FormInput from \"../components/FormInput\";\nimport Button from \"../components/Button\";\nimport { Context as UserContext } from \"../context/UserContext\";\nimport Spinner from \"../components/Spinner\";\nimport GLOBALS from \"../Globals\";\nimport TextLink from \"../components/TextLink\";\nimport Colors from \"../constants/Colors\";\n\nvar CreateUserScreen = function CreateUserScreen(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  var user = route.params.user;\n\n  var _useState = useState(user ? user.name : ''),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(user ? user.email : ''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(user ? user.phoneNumber : ''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      phoneNumber = _useState6[0],\n      setPhoneNumber = _useState6[1];\n\n  var _useContext = useContext(UserContext),\n      state = _useContext.state,\n      createUser = _useContext.createUser,\n      updateUser = _useContext.updateUser,\n      findUserByEmail = _useContext.findUserByEmail;\n\n  var emailTextInput = React.createRef();\n  var phoneNumberTextInput = React.createRef();\n  var userRole = user ? user.role : route.params.role;\n  var authenticatedUser = !!(user && user.authId);\n  var roleText = userRole === GLOBALS.USER.ROLE.CONSUMER ? 'pessoa consumidora' : 'pessoa organizadora';\n  var title = user ? \"Editar \" + roleText : \"Nova \" + roleText;\n\n  var isInvalidEmail = function isInvalidEmail() {\n    var reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n    return email.length > 0 && !reg.test(email);\n  };\n\n  var alertExistingEmail = function alertExistingEmail(email) {\n    Alert.alert('Aviso', \"J\\xE1 existe uma pessoa cadastrada com e-mail \" + email, [{\n      text: 'OK'\n    }]);\n  };\n\n  var createOrUpdateUser = function createOrUpdateUser() {\n    if (user) {\n      findUserByEmail(email).then(function (existingUser) {\n        if (existingUser && existingUser.id !== user.id) {\n          alertExistingEmail(email);\n        } else {\n          updateUser(user.id, name, email, phoneNumber, userRole);\n        }\n      });\n    } else {\n      findUserByEmail(email).then(function (existingUser) {\n        if (existingUser) {\n          alertExistingEmail(email);\n        } else {\n          createUser(name, email, phoneNumber, userRole);\n        }\n      });\n    }\n\n    navigation.goBack(null);\n  };\n\n  var renderButton = function renderButton() {\n    if (name.length && email.length && !isInvalidEmail()) {\n      return state.loading ? React.createElement(Spinner, {\n        size: \"small\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }\n      }) : React.createElement(View, {\n        style: styles.buttonContainer,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }\n      }, React.createElement(Button, {\n        id: \"addUpdateUser\",\n        style: styles.button,\n        textColor: \"white\",\n        onPress: createOrUpdateUser,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }\n      }, user ? 'Atualizar Informações' : \"Adicionar \" + roleText));\n    }\n  };\n\n  return React.createElement(View, {\n    style: styles.screen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableWithoutFeedback, {\n    onPress: Keyboard.dismiss,\n    accessible: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, React.createElement(KeyboardAvoidingView, {\n    style: {\n      flex: 1,\n      flexDirection: 'column',\n      justifyContent: 'center'\n    },\n    behavior: Platform.OS === 'ios' ? 'padding' : null,\n    enabled: true,\n    keyboardVerticalOffset: 100,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, React.createElement(ScrollView, {\n    style: styles.dataContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.titleContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, title), React.createElement(TextLink, {\n    text: \"Cancelar\",\n    onPress: function onPress() {\n      return navigation.goBack(null);\n    },\n    style: styles.cancelButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  })), React.createElement(FormInput, {\n    id: \"name\",\n    label: \"Nome\",\n    value: name,\n    returnKeyType: \"next\",\n    onChangeText: setName,\n    onSubmitEditing: function onSubmitEditing() {\n      return emailTextInput.current.focus();\n    },\n    autoCapitalize: \"words\",\n    autoCorrect: false,\n    maxLength: 50,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  }), React.createElement(FormInput, {\n    id: \"e-mail\",\n    label: \"E-mail\",\n    value: email,\n    reference: emailTextInput,\n    returnKeyType: \"next\",\n    onChangeText: setEmail,\n    onSubmitEditing: function onSubmitEditing() {\n      return phoneNumberTextInput.current.focus();\n    },\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    maxLength: 50,\n    disabled: authenticatedUser,\n    hasError: isInvalidEmail(),\n    errorMessage: \"Endere\\xE7o de e-mail inv\\xE1lido.\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 15\n    }\n  }), React.createElement(FormInput, {\n    id: \"mobile\",\n    label: \"Celular\",\n    value: phoneNumber,\n    returnKeyType: \"done\",\n    reference: phoneNumberTextInput,\n    maxLength: 25,\n    onChangeText: setPhoneNumber,\n    keyboardType: \"phone-pad\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 15\n    }\n  }), renderButton())))));\n};\n\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    marginTop: 4,\n    backgroundColor: 'white',\n    borderTopLeftRadius: 20,\n    borderTopRightRadius: 20,\n    shadowColor: 'black',\n    shadowOpacity: 0.26,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowRadius: 8,\n    elevation: 25\n  },\n  container: {\n    flex: 1,\n    margin: 10\n  },\n  titleContainer: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  title: {\n    color: '#101010',\n    fontSize: 20,\n    fontWeight: 'bold',\n    flex: 1,\n    marginLeft: 5\n  },\n  cancelButton: {\n    marginRight: 6\n  },\n  buttonContainer: {\n    width: '100%'\n  },\n  button: {\n    marginTop: 5,\n    backgroundColor: Colors.secondary,\n    alignSelf: 'center'\n  }\n});\nexport default CreateUserScreen;","map":{"version":3,"sources":["/home/bordi/projects/cestas-cooperflora-rn/src/screens/CreateUserScreen.js"],"names":["React","useContext","useState","FormInput","Button","Context","UserContext","Spinner","GLOBALS","TextLink","Colors","CreateUserScreen","navigation","route","user","params","name","setName","email","setEmail","phoneNumber","setPhoneNumber","state","createUser","updateUser","findUserByEmail","emailTextInput","createRef","phoneNumberTextInput","userRole","role","authenticatedUser","authId","roleText","USER","ROLE","CONSUMER","title","isInvalidEmail","reg","length","test","alertExistingEmail","Alert","alert","text","createOrUpdateUser","then","existingUser","id","goBack","renderButton","loading","styles","buttonContainer","button","screen","container","Keyboard","dismiss","flex","flexDirection","justifyContent","Platform","OS","dataContainer","titleContainer","cancelButton","current","focus","StyleSheet","create","marginTop","backgroundColor","borderTopLeftRadius","borderTopRightRadius","shadowColor","shadowOpacity","shadowOffset","width","height","shadowRadius","elevation","margin","alignItems","color","fontSize","fontWeight","marginLeft","marginRight","secondary","alignSelf"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport {\n  Alert,\n  Keyboard,\n  KeyboardAvoidingView,\n  ScrollView,\n  StyleSheet,\n  Text,\n  TouchableWithoutFeedback,\n  View,\n} from 'react-native';\nimport FormInput from '../components/FormInput';\nimport Button from '../components/Button';\nimport { Context as UserContext } from '../context/UserContext';\nimport Spinner from '../components/Spinner';\nimport GLOBALS from '../Globals';\nimport TextLink from '../components/TextLink';\nimport Colors from '../constants/Colors';\n\nconst CreateUserScreen = ({ navigation, route }) => {\n  const { user } = route.params;\n  const [name, setName] = useState(user ? user.name : '');\n  const [email, setEmail] = useState(user ? user.email : '');\n  const [phoneNumber, setPhoneNumber] = useState(user ? user.phoneNumber : '');\n  const { state, createUser, updateUser, findUserByEmail } =\n    useContext(UserContext);\n  const emailTextInput = React.createRef();\n  const phoneNumberTextInput = React.createRef();\n\n  // const userRole = user ? user.role : navigation.getParam('role');\n  const userRole = user ? user.role : route.params.role;\n  const authenticatedUser = !!(user && user.authId);\n  const roleText =\n    userRole === GLOBALS.USER.ROLE.CONSUMER\n      ? 'pessoa consumidora'\n      : 'pessoa organizadora';\n  const title = user ? `Editar ${roleText}` : `Nova ${roleText}`;\n\n  const isInvalidEmail = () => {\n    let reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n    return email.length > 0 && !reg.test(email);\n  };\n\n  const alertExistingEmail = (email) => {\n    Alert.alert(\n      'Aviso',\n      `Já existe uma pessoa cadastrada com e-mail ${email}`,\n      [\n        {\n          text: 'OK',\n        },\n      ]\n    );\n  };\n\n  const createOrUpdateUser = () => {\n    if (user) {\n      findUserByEmail(email).then((existingUser) => {\n        if (existingUser && existingUser.id !== user.id) {\n          alertExistingEmail(email);\n        } else {\n          updateUser(user.id, name, email, phoneNumber, userRole);\n        }\n      });\n    } else {\n      findUserByEmail(email).then((existingUser) => {\n        if (existingUser) {\n          alertExistingEmail(email);\n        } else {\n          createUser(name, email, phoneNumber, userRole);\n        }\n      });\n    }\n    navigation.goBack(null);\n  };\n\n  const renderButton = () => {\n    if (name.length && email.length && !isInvalidEmail()) {\n      return state.loading ? (\n        <Spinner size=\"small\" />\n      ) : (\n        <View style={styles.buttonContainer}>\n          <Button\n            id=\"addUpdateUser\"\n            style={styles.button}\n            textColor=\"white\"\n            onPress={createOrUpdateUser}\n          >\n            {user ? 'Atualizar Informações' : `Adicionar ${roleText}`}\n          </Button>\n        </View>\n      );\n    }\n  };\n\n  return (\n    <View style={styles.screen}>\n      <View style={styles.container}>\n        <TouchableWithoutFeedback onPress={Keyboard.dismiss} accessible={false}>\n          <KeyboardAvoidingView\n            style={{\n              flex: 1,\n              flexDirection: 'column',\n              justifyContent: 'center',\n            }}\n            behavior={Platform.OS === 'ios' ? 'padding' : null}\n            enabled\n            keyboardVerticalOffset={100}\n          >\n            <ScrollView style={styles.dataContainer}>\n              <View style={styles.titleContainer}>\n                <Text style={styles.title}>{title}</Text>\n                <TextLink\n                  text=\"Cancelar\"\n                  onPress={() => navigation.goBack(null)}\n                  style={styles.cancelButton}\n                />\n              </View>\n              <FormInput\n                id=\"name\"\n                label=\"Nome\"\n                value={name}\n                returnKeyType=\"next\"\n                onChangeText={setName}\n                onSubmitEditing={() => emailTextInput.current.focus()}\n                autoCapitalize=\"words\"\n                autoCorrect={false}\n                maxLength={50}\n              />\n              <FormInput\n                id=\"e-mail\"\n                label=\"E-mail\"\n                value={email}\n                reference={emailTextInput}\n                returnKeyType=\"next\"\n                onChangeText={setEmail}\n                onSubmitEditing={() => phoneNumberTextInput.current.focus()}\n                autoCapitalize=\"none\"\n                autoCorrect={false}\n                maxLength={50}\n                disabled={authenticatedUser}\n                hasError={isInvalidEmail()}\n                errorMessage=\"Endereço de e-mail inválido.\"\n              />\n              <FormInput\n                id=\"mobile\"\n                label=\"Celular\"\n                value={phoneNumber}\n                returnKeyType=\"done\"\n                reference={phoneNumberTextInput}\n                maxLength={25}\n                onChangeText={setPhoneNumber}\n                keyboardType=\"phone-pad\"\n              />\n              {renderButton()}\n            </ScrollView>\n          </KeyboardAvoidingView>\n        </TouchableWithoutFeedback>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    marginTop: 4,\n    backgroundColor: 'white',\n    borderTopLeftRadius: 20,\n    borderTopRightRadius: 20,\n    // backgroundColor: '#F0F5F9',\n    shadowColor: 'black',\n    shadowOpacity: 0.26,\n    shadowOffset: { width: 0, height: 2 },\n    shadowRadius: 8,\n    elevation: 25,\n  },\n  container: {\n    flex: 1,\n    margin: 10,\n  },\n  titleContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  title: {\n    color: '#101010',\n    fontSize: 20,\n    fontWeight: 'bold',\n    flex: 1,\n    marginLeft: 5,\n  },\n  cancelButton: {\n    marginRight: 6,\n    // marginTop: 5,\n  },\n  buttonContainer: {\n    // position: 'absolute',\n    width: '100%',\n    // bottom: 0,\n  },\n  button: {\n    marginTop: 5,\n    backgroundColor: Colors.secondary,\n    alignSelf: 'center',\n  },\n});\n\nexport default CreateUserScreen;\n"]},"metadata":{},"sourceType":"module"}