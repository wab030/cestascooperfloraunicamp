{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useEffect, useState } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { getFirst } from \"../api/firebase\";\nimport GLOBALS from \"../Globals\";\nexport default (function () {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      group = _useState2[0],\n      setGroup = _useState2[1];\n\n  var getResult = function getResult() {\n    var groupDataStr, groupData;\n    return _regeneratorRuntime.async(function getResult$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('group'));\n\n          case 2:\n            groupDataStr = _context.sent;\n            groupData = JSON.parse(groupDataStr);\n\n            if (groupData) {\n              _context.next = 13;\n              break;\n            }\n\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(getFirst(GLOBALS.COLLECTION.GROUPS));\n\n          case 7:\n            groupData = _context.sent;\n            _context.next = 10;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('group', JSON.stringify(groupData)));\n\n          case 10:\n            setGroup(groupData);\n            _context.next = 14;\n            break;\n\n          case 13:\n            setGroup(groupData);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    getResult().catch(function (err) {\n      return console.log(\"Error useConsumerGroup hook: \" + err);\n    });\n  }, []);\n  return group;\n});","map":{"version":3,"sources":["/home/bordi/projects/cestas-cooperflora-rn/src/hooks/useConsumerGroup.js"],"names":["useEffect","useState","AsyncStorage","getFirst","GLOBALS","group","setGroup","getResult","getItem","groupDataStr","groupData","JSON","parse","COLLECTION","GROUPS","setItem","stringify","catch","err","console","log"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,SAASC,QAAT;AACA,OAAOC,OAAP;AAEA,gBAAe,YAAM;AACnB,kBAA0BH,QAAQ,CAAC,IAAD,CAAlC;AAAA;AAAA,MAAOI,KAAP;AAAA,MAAcC,QAAd;;AAEA,MAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACWL,YAAY,CAACM,OAAb,CAAqB,OAArB,CADX;;AAAA;AACVC,YAAAA,YADU;AAEZC,YAAAA,SAFY,GAEAC,IAAI,CAACC,KAAL,CAAWH,YAAX,CAFA;;AAAA,gBAIXC,SAJW;AAAA;AAAA;AAAA;;AAAA;AAAA,6CAKIP,QAAQ,CAACC,OAAO,CAACS,UAAR,CAAmBC,MAApB,CALZ;;AAAA;AAKdJ,YAAAA,SALc;AAAA;AAAA,6CAMRR,YAAY,CAACa,OAAb,CAAqB,OAArB,EAA8BJ,IAAI,CAACK,SAAL,CAAeN,SAAf,CAA9B,CANQ;;AAAA;AAQdJ,YAAAA,QAAQ,CAACI,SAAD,CAAR;AARc;AAAA;;AAAA;AAUdJ,YAAAA,QAAQ,CAACI,SAAD,CAAR;;AAVc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAcAV,EAAAA,SAAS,CAAC,YAAM;AACdO,IAAAA,SAAS,GAAGU,KAAZ,CAAkB,UAACC,GAAD;AAAA,aAChBC,OAAO,CAACC,GAAR,mCAA4CF,GAA5C,CADgB;AAAA,KAAlB;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMA,SAAOb,KAAP;AACD,CAxBD","sourcesContent":["import { useEffect, useState } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { getFirst } from '../api/firebase';\nimport GLOBALS from '../Globals';\n\nexport default () => {\n  const [group, setGroup] = useState(null);\n\n  const getResult = async () => {\n    const groupDataStr = await AsyncStorage.getItem('group');\n    let groupData = JSON.parse(groupDataStr);\n\n    if (!groupData) {\n      groupData = await getFirst(GLOBALS.COLLECTION.GROUPS);\n      await AsyncStorage.setItem('group', JSON.stringify(groupData));\n\n      setGroup(groupData);\n    } else {\n      setGroup(groupData);\n    }\n  };\n\n  useEffect(() => {\n    getResult().catch((err) =>\n      console.log(`Error useConsumerGroup hook: ${err}`)\n    );\n  }, []);\n\n  return group;\n};\n"]},"metadata":{},"sourceType":"module"}