{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/bordi/projects/cestas-cooperflora-rn/node_modules/react-native-simple-dialogs/src/Dialog.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { ViewPropTypes } from \"react-native-web/dist/index\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nvar OS = Platform.OS;\nimport PropTypes from 'prop-types';\n\nvar Dialog = function (_Component) {\n  _inherits(Dialog, _Component);\n\n  var _super = _createSuper(Dialog);\n\n  function Dialog() {\n    _classCallCheck(this, Dialog);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Dialog, [{\n    key: \"renderContent\",\n    value: function renderContent() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          contentStyle = _this$props.contentStyle;\n      return React.createElement(View, {\n        style: [{\n          width: '100%',\n          padding: 24,\n          paddingTop: 20\n        }, contentStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }\n      }, children);\n    }\n  }, {\n    key: \"renderTitle\",\n    value: function renderTitle() {\n      var _this$props2 = this.props,\n          title = _this$props2.title,\n          titleStyle = _this$props2.titleStyle;\n      var textAlign = OS === 'ios' ? \"center\" : null;\n      if (title) return React.createElement(Text, {\n        style: [{\n          textAlign: textAlign,\n          color: \"#000000DD\",\n          fontSize: 20,\n          margin: 24,\n          marginBottom: 0\n        }, titleStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }\n      }, title);\n    }\n  }, {\n    key: \"renderButtons\",\n    value: function renderButtons() {\n      var _this$props3 = this.props,\n          buttons = _this$props3.buttons,\n          buttonsStyle = _this$props3.buttonsStyle;\n      var containerStyle = OS === 'ios' ? {} : {\n        width: '100%',\n        paddingLeft: 24,\n        paddingRight: 8,\n        paddingTop: 8,\n        paddingBottom: 8\n      };\n      if (buttons) return React.createElement(View, {\n        style: [containerStyle, buttonsStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }\n      }, buttons);\n    }\n  }, {\n    key: \"_renderOutsideTouchable\",\n    value: function _renderOutsideTouchable(onTouch) {\n      var view = React.createElement(View, {\n        style: {\n          flex: 1,\n          width: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 22\n        }\n      });\n      if (!onTouch) return view;\n      return React.createElement(TouchableWithoutFeedback, {\n        onPress: onTouch,\n        style: {\n          flex: 1,\n          width: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }\n      }, view);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props4 = this.props,\n          dialogStyle = _this$props4.dialogStyle,\n          visible = _this$props4.visible,\n          animationType = _this$props4.animationType,\n          onRequestClose = _this$props4.onRequestClose,\n          onShow = _this$props4.onShow,\n          onOrientationChange = _this$props4.onOrientationChange,\n          onTouchOutside = _this$props4.onTouchOutside,\n          overlayStyle = _this$props4.overlayStyle,\n          supportedOrientations = _this$props4.supportedOrientations,\n          keyboardDismissMode = _this$props4.keyboardDismissMode,\n          keyboardShouldPersistTaps = _this$props4.keyboardShouldPersistTaps,\n          contentInsetAdjustmentBehavior = _this$props4.contentInsetAdjustmentBehavior;\n      var dialogBackgroundColor = OS === 'ios' ? \"#e8e8e8\" : \"#ffffff\";\n      var dialogBorderRadius = OS === 'ios' ? 5 : 1;\n      return React.createElement(Modal, {\n        animationType: animationType,\n        transparent: true,\n        visible: visible,\n        onRequestClose: onRequestClose,\n        onShow: onShow,\n        onOrientationChange: onOrientationChange,\n        supportedOrientations: supportedOrientations,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }\n      }, React.createElement(ScrollView, {\n        bounces: false,\n        style: {\n          flex: 1\n        },\n        contentContainerStyle: {\n          flex: 1\n        },\n        keyboardDismissMode: keyboardDismissMode,\n        keyboardShouldPersistTaps: keyboardShouldPersistTaps,\n        contentInsetAdjustmentBehavior: contentInsetAdjustmentBehavior,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: [{\n          flex: 1,\n          backgroundColor: \"#000000AA\",\n          padding: 24\n        }, overlayStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }\n      }, this._renderOutsideTouchable(onTouchOutside), React.createElement(View, {\n        style: [{\n          backgroundColor: dialogBackgroundColor,\n          width: '100%',\n          shadowOpacity: 0.24,\n          borderRadius: dialogBorderRadius,\n          elevation: 4,\n          shadowOffset: {\n            height: 4,\n            width: 2\n          }\n        }, dialogStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 25\n        }\n      }, this.renderTitle(), this.renderContent(), this.renderButtons()), this._renderOutsideTouchable(onTouchOutside))));\n    }\n  }]);\n\n  return Dialog;\n}(Component);\n\nDialog.propTypes = {\n  dialogStyle: ViewPropTypes.style,\n  contentStyle: ViewPropTypes.style,\n  buttonsStyle: ViewPropTypes.style,\n  overlayStyle: ViewPropTypes.style,\n  buttons: PropTypes.element,\n  visible: PropTypes.bool,\n  onRequestClose: PropTypes.func,\n  onShow: PropTypes.func,\n  onTouchOutside: PropTypes.func,\n  title: PropTypes.string,\n  titleStyle: Text.propTypes.style,\n  keyboardDismissMode: PropTypes.string,\n  keyboardShouldPersistTaps: PropTypes.string,\n  contentInsetAdjustmentBehavior: PropTypes.string\n};\nDialog.defaultProps = {\n  visible: false,\n  onRequestClose: function onRequestClose() {\n    return null;\n  },\n  contentInsetAdjustmentBehavior: 'never'\n};\nexport default Dialog;","map":{"version":3,"sources":["/home/bordi/projects/cestas-cooperflora-rn/node_modules/react-native-simple-dialogs/src/Dialog.js"],"names":["React","Component","ViewPropTypes","OS","Platform","PropTypes","Dialog","props","children","contentStyle","width","padding","paddingTop","title","titleStyle","textAlign","color","fontSize","margin","marginBottom","buttons","buttonsStyle","containerStyle","paddingLeft","paddingRight","paddingBottom","onTouch","view","flex","dialogStyle","visible","animationType","onRequestClose","onShow","onOrientationChange","onTouchOutside","overlayStyle","supportedOrientations","keyboardDismissMode","keyboardShouldPersistTaps","contentInsetAdjustmentBehavior","dialogBackgroundColor","dialogBorderRadius","backgroundColor","_renderOutsideTouchable","shadowOpacity","borderRadius","elevation","shadowOffset","height","renderTitle","renderContent","renderButtons","propTypes","style","element","bool","func","string","Text","defaultProps"],"mappings":"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","sourcesContent":["/**\n* MIT License\n* \n* Copyright (c) 2017 Douglas Nassif Roma Junior\n* \n* Permission is hereby granted, free of charge, to any person obtaining a copy\n* of this software and associated documentation files (the \"Software\"), to deal\n* in the Software without restriction, including without limitation the rights\n* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the Software is\n* furnished to do so, subject to the following conditions:\n* \n* The above copyright notice and this permission notice shall be included in all\n* copies or substantial portions of the Software.\n* \n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n* SOFTWARE. \n*/\n\nimport React, { Component } from 'react'\nimport {\n    Modal,\n    View,\n    ViewPropTypes,\n    TouchableWithoutFeedback,\n    Text,\n    Platform,\n    ScrollView\n} from 'react-native'\nconst { OS } = Platform;\n\nimport PropTypes from 'prop-types';\n\nclass Dialog extends Component {\n\n    renderContent() {\n        const { children, contentStyle } = this.props;\n\n        return (\n            <View style={[{\n                width: '100%',\n                padding: 24,\n                paddingTop: 20\n            }, contentStyle]}>\n                {children}\n            </View>\n        )\n    }\n\n    renderTitle() {\n        const { title, titleStyle } = this.props;\n\n        const textAlign = OS === 'ios' ? \"center\" : null;\n\n        if (title)\n            return (\n                <Text style={[{\n                    textAlign,\n                    color: \"#000000DD\",\n                    fontSize: 20,\n                    margin: 24,\n                    marginBottom: 0\n                }, titleStyle]}>\n                    {title}\n                </Text>\n            )\n    }\n\n    renderButtons() {\n        const { buttons, buttonsStyle } = this.props;\n\n        const containerStyle = OS === 'ios' ?\n            {} :\n            {\n                width: '100%',\n                paddingLeft: 24,\n                paddingRight: 8,\n                paddingTop: 8,\n                paddingBottom: 8\n            };\n\n        if (buttons)\n            return (\n                <View style={[containerStyle, buttonsStyle]}>\n                    {buttons}\n                </View>\n            )\n    }\n\n    _renderOutsideTouchable(onTouch) {\n        const view = <View style={{ flex: 1, width: '100%' }} />\n\n        if (!onTouch) return view;\n\n        return (\n            <TouchableWithoutFeedback onPress={onTouch} style={{ flex: 1, width: '100%' }}>\n                {view}\n            </TouchableWithoutFeedback>\n        )\n    }\n\n    render() {\n        const {\n            dialogStyle, visible, animationType, onRequestClose, onShow,\n            onOrientationChange, onTouchOutside, overlayStyle, supportedOrientations,\n            keyboardDismissMode, keyboardShouldPersistTaps, contentInsetAdjustmentBehavior,\n        } = this.props;\n\n        const dialogBackgroundColor = OS === 'ios' ? \"#e8e8e8\" : \"#ffffff\";\n        const dialogBorderRadius = OS === 'ios' ? 5 : 1;\n\n        return (\n            <Modal\n                animationType={animationType}\n                transparent={true}\n                visible={visible}\n                onRequestClose={onRequestClose}\n                onShow={onShow}\n                onOrientationChange={onOrientationChange}\n                supportedOrientations={supportedOrientations}\n            >\n                <ScrollView\n                    bounces={false}\n                    style={{\n                        flex: 1,\n                    }}\n                    contentContainerStyle={{\n                        flex: 1,\n                    }}\n                    keyboardDismissMode={keyboardDismissMode}\n                    keyboardShouldPersistTaps={keyboardShouldPersistTaps}\n                    contentInsetAdjustmentBehavior={contentInsetAdjustmentBehavior}\n                >\n                    <View style={[{\n                        flex: 1,\n                        backgroundColor: \"#000000AA\",\n                        padding: 24\n                    }, overlayStyle]}>\n                        {this._renderOutsideTouchable(onTouchOutside)}\n\n                        <View style={[{\n                            backgroundColor: dialogBackgroundColor,\n                            width: '100%',\n                            shadowOpacity: 0.24,\n                            borderRadius: dialogBorderRadius,\n                            elevation: 4,\n                            shadowOffset: {\n                                height: 4,\n                                width: 2\n                            }\n                        }, dialogStyle]}>\n\n                            {this.renderTitle()}\n\n                            {this.renderContent()}\n\n                            {this.renderButtons()}\n\n                        </View>\n\n                        {this._renderOutsideTouchable(onTouchOutside)}\n                    </View>\n                </ScrollView>\n            </Modal>\n        )\n    }\n}\n\nDialog.propTypes = {\n    dialogStyle: ViewPropTypes.style,\n    contentStyle: ViewPropTypes.style,\n    buttonsStyle: ViewPropTypes.style,\n    overlayStyle: ViewPropTypes.style,\n    buttons: PropTypes.element,\n    visible: PropTypes.bool,\n    onRequestClose: PropTypes.func,\n    onShow: PropTypes.func,\n    onTouchOutside: PropTypes.func,\n    title: PropTypes.string,\n    titleStyle: Text.propTypes.style,\n    keyboardDismissMode: PropTypes.string,\n    keyboardShouldPersistTaps: PropTypes.string,\n    contentInsetAdjustmentBehavior: PropTypes.string,\n}\n\nDialog.defaultProps = {\n    visible: false,\n    onRequestClose: () => null,\n    contentInsetAdjustmentBehavior: 'never',\n};\n\nexport default Dialog;\n"]},"metadata":{},"sourceType":"module"}