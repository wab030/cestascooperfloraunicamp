{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport createDataContext from \"./createDataContext\";\nimport { deleteDoc, getFirstByAttribute, insertDoc, updateDoc, getByAttributeOrderingBy, getById, get } from \"../api/firebase\";\nimport { navigate } from \"../navigationRef\";\nimport GLOBALS from \"../Globals\";\n\nvar userReducer = function userReducer(state, action) {\n  switch (action.type) {\n    case 'fetch_users':\n      return {\n        loading: false,\n        users: action.payload\n      };\n\n    case 'fetch_user':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false\n      });\n\n    case 'create_user':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false\n      });\n\n    case 'update_user':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false\n      });\n\n    case 'delete_user':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false\n      });\n\n    case 'loading':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true\n      });\n\n    case 'add_error':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false,\n        errorMessage: action.payload\n      });\n\n    case 'clear_error':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false,\n        errorMessage: ''\n      });\n\n    default:\n      return state;\n  }\n};\n\nvar fetchUsers = function fetchUsers(dispatch) {\n  return function _callee() {\n    var users;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            dispatch({\n              type: 'loading'\n            });\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(get(GLOBALS.COLLECTION.USERS));\n\n          case 3:\n            users = _context.sent;\n            dispatch({\n              type: 'fetch_users',\n              payload: users\n            });\n            return _context.abrupt(\"return\", users);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\n\nvar fetchConsumers = function fetchConsumers(dispatch) {\n  return function _callee2() {\n    var consumers;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            dispatch({\n              type: 'loading'\n            });\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(getByAttributeOrderingBy(GLOBALS.COLLECTION.USERS, GLOBALS.USER.ATTRIBUTE.ROLE, GLOBALS.USER.ROLE.CONSUMER, 'name'));\n\n          case 3:\n            consumers = _context2.sent;\n            dispatch({\n              type: 'fetch_users',\n              payload: consumers\n            });\n            return _context2.abrupt(\"return\", consumers);\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\n\nvar fetchOrganizers = function fetchOrganizers(dispatch) {\n  return function _callee3() {\n    var organizers;\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            dispatch({\n              type: 'loading'\n            });\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(getByAttributeOrderingBy(GLOBALS.COLLECTION.USERS, GLOBALS.USER.ATTRIBUTE.ROLE, GLOBALS.USER.ROLE.ORGANIZER, 'name'));\n\n          case 3:\n            organizers = _context3.sent;\n            dispatch({\n              type: 'fetch_users',\n              payload: organizers\n            });\n\n          case 5:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\n\nvar findUserById = function findUserById(dispatch) {\n  return function _callee4(id) {\n    var existingUser;\n    return _regeneratorRuntime.async(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            dispatch({\n              type: 'loading'\n            });\n            _context4.next = 3;\n            return _regeneratorRuntime.awrap(getById(GLOBALS.COLLECTION.USERS, id));\n\n          case 3:\n            existingUser = _context4.sent;\n            dispatch({\n              type: 'fetch_user'\n            });\n            return _context4.abrupt(\"return\", existingUser);\n\n          case 6:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\n\nvar findUserByEmail = function findUserByEmail(dispatch) {\n  return function _callee5(email) {\n    var existingUserWithEmail;\n    return _regeneratorRuntime.async(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            dispatch({\n              type: 'loading'\n            });\n            _context5.next = 3;\n            return _regeneratorRuntime.awrap(getFirstByAttribute(GLOBALS.COLLECTION.USERS, GLOBALS.USER.ATTRIBUTE.EMAIL, email));\n\n          case 3:\n            existingUserWithEmail = _context5.sent;\n            dispatch({\n              type: 'fetch_user'\n            });\n            return _context5.abrupt(\"return\", existingUserWithEmail);\n\n          case 6:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\n\nvar createUser = function createUser(dispatch) {\n  return function _callee6(name, email, phoneNumber, role) {\n    var consumerGroupId, user, routeName;\n    return _regeneratorRuntime.async(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            dispatch({\n              type: 'loading'\n            });\n            consumerGroupId = GLOBALS.CONSUMER_GROUP.ID;\n            user = {\n              name: name,\n              email: email,\n              phoneNumber: phoneNumber,\n              role: role,\n              consumerGroupId: consumerGroupId,\n              balance: 0.0\n            };\n            console.log(\"Creating user: \" + JSON.stringify(user));\n            routeName = role === GLOBALS.USER.ROLE.CONSUMER ? 'ConsumersScreen' : 'ConsumersScreen';\n            insertDoc(GLOBALS.COLLECTION.USERS, user).then(function () {\n              dispatch({\n                type: 'create_user'\n              });\n              navigate(routeName);\n            });\n\n          case 6:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\n\nvar updateUser = function updateUser(dispatch) {\n  return function (id, name, email, phoneNumber, role) {\n    dispatch({\n      type: 'loading'\n    });\n    var user = {\n      name: name,\n      email: email,\n      phoneNumber: phoneNumber\n    };\n    console.log(\"Updating user: \" + id);\n    var routeName = role === GLOBALS.USER.ROLE.CONSUMER ? 'Consumers' : 'Organizers';\n    updateDoc(GLOBALS.COLLECTION.USERS, id, user).then(function () {\n      dispatch({\n        type: 'update_user'\n      });\n      navigate(routeName);\n    });\n  };\n};\n\nvar deleteUser = function deleteUser(dispatch) {\n  return function _callee7(user) {\n    return _regeneratorRuntime.async(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            dispatch({\n              type: 'loading'\n            });\n            console.log(\"Deleting user: \" + user.id);\n            deleteDoc(GLOBALS.COLLECTION.USERS, user.id).then(function () {\n              dispatch({\n                type: 'delete_user'\n              });\n              console.log(\"User deleted: \" + user.id);\n\n              if (user.role === GLOBALS.USER.ROLE.CONSUMER) {\n                fetchConsumers(dispatch)();\n              } else {\n                fetchOrganizers(dispatch)();\n              }\n            });\n\n          case 3:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\n\nvar getUserById = function getUserById(dispatch) {\n  return function _callee8(userId) {\n    var data;\n    return _regeneratorRuntime.async(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            dispatch({\n              type: 'loading'\n            });\n            _context8.next = 3;\n            return _regeneratorRuntime.awrap(getById(GLOBALS.COLLECTION.USERS, userId));\n\n          case 3:\n            data = _context8.sent;\n            dispatch({\n              type: 'fetch_user'\n            });\n            return _context8.abrupt(\"return\", data);\n\n          case 6:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\n\nvar _createDataContext = createDataContext(userReducer, {\n  fetchUsers: fetchUsers,\n  fetchConsumers: fetchConsumers,\n  fetchOrganizers: fetchOrganizers,\n  findUserById: findUserById,\n  findUserByEmail: findUserByEmail,\n  createUser: createUser,\n  updateUser: updateUser,\n  deleteUser: deleteUser,\n  getUserById: getUserById\n}, {\n  users: [],\n  user: null,\n  loading: false\n}),\n    Provider = _createDataContext.Provider,\n    Context = _createDataContext.Context;\n\nexport { Provider, Context };","map":{"version":3,"sources":["/home/bordi/projects/cestas-cooperflora-rn/src/context/UserContext.js"],"names":["createDataContext","deleteDoc","getFirstByAttribute","insertDoc","updateDoc","getByAttributeOrderingBy","getById","get","navigate","GLOBALS","userReducer","state","action","type","loading","users","payload","errorMessage","fetchUsers","dispatch","COLLECTION","USERS","fetchConsumers","USER","ATTRIBUTE","ROLE","CONSUMER","consumers","fetchOrganizers","ORGANIZER","organizers","findUserById","id","existingUser","findUserByEmail","email","EMAIL","existingUserWithEmail","createUser","name","phoneNumber","role","consumerGroupId","CONSUMER_GROUP","ID","user","balance","console","log","JSON","stringify","routeName","then","updateUser","deleteUser","getUserById","userId","data","Provider","Context"],"mappings":"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","sourcesContent":["import createDataContext from './createDataContext';\nimport {\n  deleteDoc,\n  getFirstByAttribute,\n  insertDoc,\n  updateDoc,\n  getByAttributeOrderingBy,\n  getById,\n  get,\n} from '../api/firebase';\nimport { navigate } from '../navigationRef';\nimport GLOBALS from '../Globals';\n\nconst userReducer = (state, action) => {\n  switch (action.type) {\n    case 'fetch_users':\n      return { loading: false, users: action.payload };\n    case 'fetch_user':\n      return { ...state, loading: false };\n    case 'create_user':\n      return { ...state, loading: false };\n    case 'update_user':\n      return { ...state, loading: false };\n    case 'delete_user':\n      return { ...state, loading: false };\n    case 'loading':\n      return { ...state, loading: true };\n    case 'add_error':\n      return { ...state, loading: false, errorMessage: action.payload };\n    case 'clear_error':\n      return { ...state, loading: false, errorMessage: '' };\n    default:\n      return state;\n  }\n};\n\nconst fetchUsers = (dispatch) => async () => {\n  dispatch({ type: 'loading' });\n  const users = await get(GLOBALS.COLLECTION.USERS);\n  dispatch({ type: 'fetch_users', payload: users });\n  return users;\n};\n\nconst fetchConsumers = (dispatch) => async () => {\n  dispatch({ type: 'loading' });\n  const consumers = await getByAttributeOrderingBy(\n    GLOBALS.COLLECTION.USERS,\n    GLOBALS.USER.ATTRIBUTE.ROLE,\n    GLOBALS.USER.ROLE.CONSUMER,\n    'name'\n  );\n  dispatch({ type: 'fetch_users', payload: consumers });\n  return consumers;\n};\n\nconst fetchOrganizers = (dispatch) => async () => {\n  dispatch({ type: 'loading' });\n  const organizers = await getByAttributeOrderingBy(\n    GLOBALS.COLLECTION.USERS,\n    GLOBALS.USER.ATTRIBUTE.ROLE,\n    GLOBALS.USER.ROLE.ORGANIZER,\n    'name'\n  );\n  dispatch({ type: 'fetch_users', payload: organizers });\n};\n\nconst findUserById = (dispatch) => async (id) => {\n  dispatch({ type: 'loading' });\n\n  const existingUser = await getById(GLOBALS.COLLECTION.USERS, id);\n\n  dispatch({ type: 'fetch_user' });\n  return existingUser;\n};\n\nconst findUserByEmail = (dispatch) => async (email) => {\n  dispatch({ type: 'loading' });\n\n  const existingUserWithEmail = await getFirstByAttribute(\n    GLOBALS.COLLECTION.USERS,\n    GLOBALS.USER.ATTRIBUTE.EMAIL,\n    email\n  );\n\n  dispatch({ type: 'fetch_user' });\n  return existingUserWithEmail;\n};\n\nconst createUser = (dispatch) => async (name, email, phoneNumber, role) => {\n  dispatch({ type: 'loading' });\n\n  const consumerGroupId = GLOBALS.CONSUMER_GROUP.ID;\n\n  const user = {\n    name,\n    email,\n    phoneNumber,\n    role,\n    consumerGroupId,\n    balance: 0.0,\n  };\n\n  console.log(`Creating user: ${JSON.stringify(user)}`);\n  // const routeName = role === GLOBALS.USER.ROLE.CONSUMER ? 'Consumers' : 'Organizers';\n  const routeName =\n    role === GLOBALS.USER.ROLE.CONSUMER ? 'ConsumersScreen' : 'ConsumersScreen';\n  insertDoc(GLOBALS.COLLECTION.USERS, user).then(() => {\n    dispatch({ type: 'create_user' });\n    navigate(routeName);\n  });\n};\n\nconst updateUser = (dispatch) => (id, name, email, phoneNumber, role) => {\n  dispatch({ type: 'loading' });\n\n  const user = {\n    name,\n    email,\n    phoneNumber,\n  };\n\n  console.log(`Updating user: ${id}`);\n  const routeName =\n    role === GLOBALS.USER.ROLE.CONSUMER ? 'Consumers' : 'Organizers';\n  updateDoc(GLOBALS.COLLECTION.USERS, id, user).then(() => {\n    dispatch({ type: 'update_user' });\n    navigate(routeName);\n  });\n};\n\nconst deleteUser = (dispatch) => async (user) => {\n  dispatch({ type: 'loading' });\n\n  console.log(`Deleting user: ${user.id}`);\n  deleteDoc(GLOBALS.COLLECTION.USERS, user.id).then(() => {\n    dispatch({ type: 'delete_user' });\n    console.log(`User deleted: ${user.id}`);\n\n    if (user.role === GLOBALS.USER.ROLE.CONSUMER) {\n      fetchConsumers(dispatch)();\n    } else {\n      fetchOrganizers(dispatch)();\n    }\n  });\n};\n\n// ### Incluído por André Bordignon\nconst getUserById = (dispatch) => async (userId) => {\n  dispatch({ type: 'loading' });\n\n  const data = await getById(GLOBALS.COLLECTION.USERS, userId);\n\n  dispatch({ type: 'fetch_user' });\n  return data;\n};\n\n// #########\n\nexport const { Provider, Context } = createDataContext(\n  userReducer,\n  {\n    fetchUsers,\n    fetchConsumers,\n    fetchOrganizers,\n    findUserById,\n    findUserByEmail,\n    createUser,\n    updateUser,\n    deleteUser,\n    getUserById,\n  },\n  { users: [], user: null, loading: false }\n);\n"]},"metadata":{},"sourceType":"module"}