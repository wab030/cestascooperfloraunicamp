{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/bordi/projects/cestas-cooperflora-rn/src/components/DeliveryCard.js\";\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Card, Divider } from 'react-native-elements';\nimport { format } from 'date-fns';\nimport { Feather } from '@expo/vector-icons';\nimport GLOBALS from \"../Globals\";\nimport Colors from \"../constants/Colors\";\nimport { resolveWeekDay } from \"../helper/HelperFunctions\";\n\nvar DeliveryCard = function DeliveryCard(_ref) {\n  var delivery = _ref.delivery,\n      ordersDateText = _ref.ordersDateText,\n      borderColor = _ref.borderColor,\n      onPress = _ref.onPress,\n      showEditButton = _ref.showEditButton,\n      onEditButtonPress = _ref.onEditButtonPress;\n  var weekDayText = resolveWeekDay(delivery.deliveryDate.getDay());\n\n  var formatBaseProducts = function formatBaseProducts(baseProducts) {\n    return baseProducts.toLowerCase().replace(/\\n/g, ', ');\n  };\n\n  var formatCardTitle = function formatCardTitle(deliveryDate) {\n    return React.createElement(View, {\n      style: styles.titleViewContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: styles.titleContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: styles.titleText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }, weekDayText + \", \" + format(deliveryDate, GLOBALS.FORMAT.DEFAULT_DATE)), showEditButton ? React.createElement(Feather, {\n      name: \"edit\",\n      size: 24,\n      color: Colors.secondary,\n      onPress: onEditButtonPress,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }) : null), React.createElement(Divider, {\n      style: {\n        backgroundColor: Colors.secondary\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: onPress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, React.createElement(Card, {\n    containerStyle: {\n      borderWidth: 0.25,\n      borderRadius: 30,\n      backgroundColor: '#F0F5F9'\n    },\n    title: formatCardTitle(delivery.deliveryDate),\n    dividerStyle: {\n      backgroundColor: borderColor\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.contentContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.titleText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, ordersDateText, \" \"), React.createElement(Text, {\n    style: styles.cardText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, format(delivery.limitDate, 'dd/MM/yyyy'), \" \\xE0s\", ' ', format(delivery.limitDate, 'HH:mm'))), React.createElement(Text, {\n    numberOfLines: 3,\n    style: styles.cardTextContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.titleText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }, \"Composi\\xE7\\xE3o da cesta: \"), React.createElement(Text, {\n    style: styles.cardText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, formatBaseProducts(delivery.baseProducts)))))));\n};\n\nvar styles = StyleSheet.create({\n  titleViewContainer: {\n    marginVertical: 10\n  },\n  titleContainer: {\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    flex: 1,\n    marginRight: 3,\n    marginBottom: 7,\n    top: -7\n  },\n  contentContainer: {\n    flex: 1,\n    marginVertical: 7,\n    justifyContent: 'space-evenly'\n  },\n  titleText: {\n    fontFamily: 'Roboto',\n    fontWeight: '700',\n    fontSize: 16,\n    color: '#505050'\n  },\n  cardTextStrong: {\n    fontWeight: 'bold',\n    fontSize: 16\n  },\n  cardText: {\n    fontFamily: 'Roboto',\n    fontWeight: '400',\n    fontSize: 16,\n    color: '#505050'\n  },\n  cardTextContainer: {\n    marginTop: 8\n  }\n});\nexport default DeliveryCard;","map":{"version":3,"sources":["/home/bordi/projects/cestas-cooperflora-rn/src/components/DeliveryCard.js"],"names":["React","Card","Divider","format","Feather","GLOBALS","Colors","resolveWeekDay","DeliveryCard","delivery","ordersDateText","borderColor","onPress","showEditButton","onEditButtonPress","weekDayText","deliveryDate","getDay","formatBaseProducts","baseProducts","toLowerCase","replace","formatCardTitle","styles","titleViewContainer","titleContainer","titleText","FORMAT","DEFAULT_DATE","secondary","backgroundColor","borderWidth","borderRadius","contentContainer","cardText","limitDate","cardTextContainer","StyleSheet","create","marginVertical","alignItems","justifyContent","flexDirection","flexWrap","flex","marginRight","marginBottom","top","fontFamily","fontWeight","fontSize","color","cardTextStrong","marginTop"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport { Card, Divider } from 'react-native-elements';\nimport { format } from 'date-fns';\nimport { Feather } from '@expo/vector-icons';\nimport GLOBALS from '../Globals';\nimport Colors from '../constants/Colors';\nimport { resolveWeekDay } from '../helper/HelperFunctions';\n\nconst DeliveryCard = ({\n  delivery,\n  ordersDateText,\n  borderColor,\n  onPress,\n  showEditButton,\n  onEditButtonPress,\n}) => {\n  const weekDayText = resolveWeekDay(delivery.deliveryDate.getDay());\n\n  const formatBaseProducts = (baseProducts) => {\n    return baseProducts.toLowerCase().replace(/\\n/g, ', ');\n  };\n\n  const formatCardTitle = (deliveryDate) => {\n    return (\n      <View style={styles.titleViewContainer}>\n        <View style={styles.titleContainer}>\n          <Text style={styles.titleText}>\n            {`${weekDayText}, ${format(\n              deliveryDate,\n              GLOBALS.FORMAT.DEFAULT_DATE\n            )}`}\n          </Text>\n          {showEditButton ? (\n            <Feather\n              name=\"edit\"\n              size={24}\n              color={Colors.secondary}\n              onPress={onEditButtonPress}\n            />\n          ) : null}\n        </View>\n        <Divider style={{ backgroundColor: Colors.secondary }} />\n      </View>\n    );\n  };\n\n  return (\n    <View>\n      <TouchableOpacity onPress={onPress}>\n        <Card\n          containerStyle={{\n            borderWidth: 0.25,\n            borderRadius: 30,\n            backgroundColor: '#F0F5F9',\n          }}\n          title={formatCardTitle(delivery.deliveryDate)}\n          dividerStyle={{ backgroundColor: borderColor }}\n        >\n          <View style={styles.contentContainer}>\n            <Text>\n              <Text style={styles.titleText}>{ordersDateText} </Text>\n              <Text style={styles.cardText}>\n                {format(delivery.limitDate, 'dd/MM/yyyy')} às{' '}\n                {format(delivery.limitDate, 'HH:mm')}\n              </Text>\n            </Text>\n            <Text numberOfLines={3} style={styles.cardTextContainer}>\n              <Text style={styles.titleText}>Composição da cesta: </Text>\n              <Text style={styles.cardText}>\n                {formatBaseProducts(delivery.baseProducts)}\n              </Text>\n            </Text>\n          </View>\n        </Card>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  titleViewContainer: {\n    marginVertical: 10,\n  },\n  titleContainer: {\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    flex: 1,\n    marginRight: 3,\n    marginBottom: 7,\n    top: -7,\n  },\n  contentContainer: {\n    flex: 1,\n    marginVertical: 7,\n    justifyContent: 'space-evenly',\n  },\n  titleText: {\n    fontFamily: 'Roboto',\n    fontWeight: '700',\n    fontSize: 16,\n    color: '#505050',\n  },\n  cardTextStrong: {\n    fontWeight: 'bold',\n    fontSize: 16,\n  },\n  cardText: {\n    fontFamily: 'Roboto',\n    fontWeight: '400',\n    fontSize: 16,\n    color: '#505050',\n  },\n  cardTextContainer: {\n    marginTop: 8,\n  },\n});\n\nexport default DeliveryCard;\n"]},"metadata":{},"sourceType":"module"}